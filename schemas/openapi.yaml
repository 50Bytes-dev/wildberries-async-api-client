openapi: 3.0.1
info:
    title: Wildberries API
    version: ''
tags:
    - name: Categories, Subjects, and Characteristics
      description: ''
    - name: Creating Product Cards
      description: ''
    - name: Product Cards
      description: ''
    - name: Media Files
      description: ''
    - name: Tags
      description: ''
    - name: Prices and Discounts
      description: ''
    - name: Seller Warehouses
      description: ''
    - name: Inventory
      description: ''
    - name: Assembly Orders
      description: ''
    - name: Metadata
      description: ''
    - name: FBS Supplies
      description: ''
    - name: Passes
      description: ''
    - name: WB Courier Delivery (DBW)
      description: ''
    - name: Campaigns
      description: ''
    - name: Campaigns Creation
      description: ''
    - name: Campaigns Management
      description: ''
    - name: Finances
      description: ''
    - name: Campaigns Parameters
      description: ''
    - name: Media
      description: ''
    - name: Promotions Calendar
      description: ''
    - name: Questions
      description: ''
    - name: Feedbacks
      description: ''
    - name: Response Templates
      description: ''
    - name: Buyers Chat
      description: ''
    - name: Buyers Returns
      description: ''
paths:
    /content/v2/object/parent/all:
        servers:
            - url: https://content-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Products parent categories
            description: |
                Returns the list of all products parent categories

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 100 requests | 600 milliseconds | 5 requests |

                Exceptions are the methods:
                <ul>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post">creating product cards</a></li>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post">creating product cards with merge</a></li>
                    <li><a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post">editing product cards</a></li>
                </ul>
                </div>
            tags:
                - Categories, Subjects, and Characteristics
            parameters:
                - name: locale
                  in: query
                  description: Product name language (`ru`, `en`, `zh`)
                  schema:
                      type: string
                      example: en
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        items:
                                            type: object
                                            properties:
                                                name:
                                                    description: Category name
                                                    type: string
                                                    example: Электроника
                                                id:
                                                    description: Parent category ID
                                                    type: integer
                                                    example: 479
                                                isVisible:
                                                    description: Visibility on the site
                                                    type: boolean
                                                    example: true
                                    error:
                                        description: Error flag
                                        type: boolean
                                        example: false
                                    errorText:
                                        description: Error description
                                        type: string
                                        example: ''
                                    additionalErrors:
                                        description: Additional errors
                                        nullable: true
                                        type: string
                                        example: ''
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError400'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/object/all:
        servers:
            - url: https://content-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Subjects list
            description: |
                Returns the list of all available subjects, subjects parent categories and their IDs

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 100 requests | 600 milliseconds | 5 requests |

                Exceptions are the methods:
                <ul>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post">creating product cards</a></li>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post">creating product cards with merge</a></li>
                    <li><a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post">editing product cards</a></li>
                </ul>
                </div>
            tags:
                - Categories, Subjects, and Characteristics
            parameters:
                - name: locale
                  in: query
                  schema:
                      type: string
                      example: en
                  description: Product name language (`ru`, `en`, `zh`)
                - name: name
                  in: query
                  schema:
                      type: string
                      example: Socks
                  description: Search by item name (Socks), the search works by substring and can be conducted in any of the supported languages
                - name: limit
                  in: query
                  schema:
                      type: integer
                      example: 1000
                      default: 30
                      description: Number of search results, maximum 1,000
                - name: offset
                  in: query
                  schema:
                      type: integer
                      example: 5000
                      default: 0
                      description: How many results to skip
                - name: parentID
                  in: query
                  schema:
                      type: integer
                      example: 1000
                  description: Subject parent category ID
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: Categories and subjects
                                        items:
                                            type: object
                                            properties:
                                                subjectID:
                                                    type: integer
                                                    description: Subject ID
                                                parentID:
                                                    type: integer
                                                    description: Category ID
                                                subjectName:
                                                    type: string
                                                    description: Subject name
                                                parentName:
                                                    type: string
                                                    description: Category name
                                    error:
                                        type: boolean
                                        description: Error flag
                                    errorText:
                                        type: string
                                        description: Error text
                                    additionalErrors:
                                        nullable: true
                                        description: Additional errors
                                        type: string
                            example:
                                data:
                                    - subjectID: 2560
                                      parentID: 479
                                      subjectName: 3D очки
                                      parentName: Электроника
                                    - subjectID: 1152
                                      parentID: 858
                                      subjectName: 3D-принтеры
                                      parentName: Оргтехника
                                error: false
                                errorText: ''
                                additionalErrors: null
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/object/charcs/{subjectId}:
        servers:
            - url: https://content-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Subject characteristics
            description: |
                Returns list of the subject characteristics by its ID

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 100 requests | 600 milliseconds | 5 requests |

                Exceptions are the methods:
                <ul>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post">creating product cards</a></li>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post">creating product cards with merge</a></li>
                    <li><a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post">editing product cards</a></li>
                </ul>
                </div>
            tags:
                - Categories, Subjects, and Characteristics
            parameters:
                - name: subjectId
                  in: path
                  required: true
                  description: Subject ID
                  schema:
                      type: integer
                      example: 105
                - name: locale
                  in: query
                  description: Language of `subjectName` and `name` (ru, en, zh)
                  schema:
                      type: string
                      example: en
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: Data
                                        items:
                                            type: object
                                            properties:
                                                charcID:
                                                    type: integer
                                                    description: Characteristics ID
                                                subjectName:
                                                    type: string
                                                    description: Subject name
                                                subjectID:
                                                    type: integer
                                                    description: Subject ID
                                                name:
                                                    type: string
                                                    description: Characteristic name
                                                required:
                                                    type: boolean
                                                    description: Characteristic required
                                                unitName:
                                                    type: string
                                                    description: Unit (sm, gr and others)
                                                maxCount:
                                                    type: integer
                                                    description: |
                                                        Max count of values that can be assigned to this characteristic.
                                                        <br>zero means no limit.
                                                popular:
                                                    description: The characteristic is popular with users
                                                    type: boolean
                                                charcType:
                                                    type: integer
                                                    description: Characteristic type (1 and 0 - string or list of strings; 4 - number or list of numbers
                                    error:
                                        type: boolean
                                        description: Error flag
                                    errorText:
                                        type: string
                                        description: Error description
                                    additionalErrors:
                                        type: string
                                        description: Additional errors
                                        nullable: true
                                example:
                                    data:
                                        - charcID: 54337
                                          subjectName: Кроссовки
                                          subjectID: 105
                                          name: Размер
                                          required: false
                                          unitName: см
                                          maxCount: 0
                                          popular: false
                                          charcType: 4
                                    error: false
                                    errorText: ''
                                    additionalErrors: null
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError400'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/directory/colors:
        servers:
            - url: https://content-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Color
            description: |
                Provides values of color characteristic.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 100 requests | 600 milliseconds | 5 requests |

                Exceptions are the methods:
                <ul>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post">creating product cards</a></li>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post">creating product cards with merge</a></li>
                    <li><a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post">editing product cards</a></li>
                </ul>
                </div>
            tags:
                - Categories, Subjects, and Characteristics
            parameters:
                - name: locale
                  in: query
                  description: |
                      Language of `subjectName` and `name` (ru, en, zh)
                  schema:
                      type: string
                      example: en
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        items:
                                            type: object
                                            properties:
                                                name:
                                                    description: Color name
                                                    type: string
                                                    example: персиковый мелок
                                                parentName:
                                                    description: Parent color name
                                                    type: string
                                                    example: оранжевый
                                    error:
                                        description: Error flag
                                        type: boolean
                                        example: false
                                    errorText:
                                        description: Error description
                                        type: string
                                        example: ''
                                    additionalErrors:
                                        description: Additional errors
                                        nullable: true
                                        type: string
                                        example: ''
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError400'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/directory/kinds:
        servers:
            - url: https://content-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Gender
            description: |
                Provides values of gender characteristic.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 100 requests | 600 milliseconds | 5 requests |

                Exceptions are the methods:
                <ul>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post">creating product cards</a></li>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post">creating product cards with merge</a></li>
                    <li><a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post">editing product cards</a></li>
                </ul>
                </div>
            tags:
                - Categories, Subjects, and Characteristics
            parameters:
                - name: locale
                  in: query
                  description: Language of `subjectName` and `name` (ru, en, zh)
                  schema:
                      type: string
                      example: en
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        description: List of values for sex characteristic.
                                        type: array
                                        items:
                                            type: string
                                            example: Мужской
                                    error:
                                        description: Error flag
                                        type: boolean
                                        example: false
                                    errorText:
                                        description: Error description
                                        type: string
                                        example: ''
                                    additionalErrors:
                                        description: Additional errors
                                        nullable: true
                                        type: string
                                        example: ''
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError400'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/directory/countries:
        servers:
            - url: https://content-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Country of origin
            description: |
                Provides value of characteristic country of origin.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 100 requests | 600 milliseconds | 5 requests |

                Exceptions are the methods:
                <ul>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post">creating product cards</a></li>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post">creating product cards with merge</a></li>
                    <li><a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post">editing product cards</a></li>
                </ul>
                </div>
            tags:
                - Categories, Subjects, and Characteristics
            parameters:
                - name: locale
                  in: query
                  description: |
                      Language of `subjectName` and `name` (ru, en, zh)
                  schema:
                      type: string
                      example: en
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        items:
                                            type: object
                                            properties:
                                                name:
                                                    description: Value of characteristic country of origin
                                                    type: string
                                                    example: Китай
                                                fullName:
                                                    description: Full country name
                                                    type: string
                                                    example: Китайская Народная Республика
                                    error:
                                        description: Error flag
                                        type: boolean
                                        example: false
                                    errorText:
                                        description: Error description
                                        type: string
                                        example: ''
                                    additionalErrors:
                                        description: Additional errors
                                        nullable: true
                                        type: string
                                        example: ''
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError400'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/directory/seasons:
        servers:
            - url: https://content-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Season
            description: |
                Provide values of season characteristic

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 100 requests | 600 milliseconds | 5 requests |

                Exceptions are the methods:
                <ul>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post">creating product cards</a></li>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post">creating product cards with merge</a></li>
                    <li><a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post">editing product cards</a></li>
                </ul>
                </div>
            tags:
                - Categories, Subjects, and Characteristics
            parameters:
                - name: locale
                  in: query
                  description: Language of `subjectName` and `name` (ru, en, zh)
                  schema:
                      type: string
                      example: en
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        description: Array of values for season characteristic.
                                        type: array
                                        items:
                                            type: string
                                            example: демисезон
                                    error:
                                        description: Error flag
                                        type: boolean
                                        example: false
                                    errorText:
                                        description: Error description
                                        type: string
                                        example: ''
                                    additionalErrors:
                                        description: Additional errors
                                        nullable: true
                                        type: string
                                        example: ''
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError400'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/directory/vat:
        servers:
            - url: https://content-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: VAT rate
            description: |
                Returns a list of values for the **VAT rate** characteristic

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 100 requests | 600 milliseconds | 5 requests |

                Exceptions are the methods:
                <ul>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post">creating product cards</a></li>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post">creating product cards with merge</a></li>
                    <li><a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post">editing product cards</a></li>
                </ul>
                </div>
            tags:
                - Categories, Subjects, and Characteristics
            parameters:
                - name: locale
                  in: query
                  description: Language of the `data` elements values (`ru`, `en`, `zh`). Not used in the sandbox
                  schema:
                      type: string
                      example: ru
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            type: string
                                    error:
                                        type: boolean
                                        description: Error flag
                                    errorText:
                                        type: string
                                        description: Error text
                                    additionalErrors:
                                        nullable: true
                                        type: string
                                        description: Additional errors
                            example:
                                data:
                                    - '0'
                                    - '10'
                                    - '20'
                                    - Без НДС
                                    - '13'
                                error: false
                                errorText: ''
                                additionalErrors: null
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError400'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/directory/tnved:
        servers:
            - url: https://content-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: HS codes
            description: |
                Method provides list of HS codes by category name and filter by HS code.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 100 requests | 600 milliseconds | 5 requests |

                Exceptions are the methods:
                <ul>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post">creating product cards</a></li>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post">creating product cards with merge</a></li>
                    <li><a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post">editing product cards</a></li>
                </ul>
                </div>
            tags:
                - Categories, Subjects, and Characteristics
            parameters:
                - name: subjectID
                  in: query
                  required: true
                  description: Subject ID
                  schema:
                      type: integer
                      example: 105
                - name: search
                  in: query
                  description: Search by HS code. Works only with the subjectID parameter
                  schema:
                      type: integer
                      example: 6106903000
                - name: locale
                  in: query
                  description: Language (`ru`, `en`, `zh`) of the `subjectName` and `name` fields values. Not used in a sandbox
                  schema:
                      type: string
                      example: en
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        description: Data
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                tnved:
                                                    type: string
                                                    description: HS code
                                                isKiz:
                                                    type: boolean
                                                    description: |
                                                        - `true` - labeling code is required
                                                        - `false` - labeling code is not required
                                    error:
                                        type: boolean
                                        description: Error flag
                                        example: false
                                    errorText:
                                        type: string
                                        description: Error description
                                    additionalErrors:
                                        nullable: true
                                        type: string
                                        description: Additional errors
                            example:
                                data:
                                    - tnved: '6106903000'
                                      isKiz: true
                                error: false
                                errorText: ''
                                additionalErrors: null
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError400'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/tags:
        servers:
            - url: https://content-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Tags list
            description: |
                Returns seller's tags list

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 100 requests | 600 milliseconds | 5 requests |

                Exceptions are the methods:
                <ul>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post">creating product cards</a></li>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post">creating product cards with merge</a></li>
                    <li><a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post">editing product cards</a></li>
                </ul>
                </div>
            tags:
                - Tags
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        properties:
                                            id:
                                                description: Numeric tag identifier
                                                type: integer
                                            color:
                                                description: Tag color
                                                type: string
                                            name:
                                                description: Tag name
                                                type: string
                                    error:
                                        description: Error flag
                                        type: boolean
                                        example: false
                                    errorText:
                                        description: Error description
                                        type: string
                                        example: ''
                                    additionalErrors:
                                        description: Additional errors
                                        nullable: true
                                        type: string
                                        example: ''
                            example:
                                data:
                                    - id: 1
                                      color: D1CFD7
                                      name: Sale
                                error: false
                                errorText: ''
                                additionalErrors: ''
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/tag:
        servers:
            - url: https://content-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            summary: Create a tag
            description: |
                Creates a tag.

                It is possible to create 15 tags.

                The maximum length of a tag is 15 characters

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 100 requests | 600 milliseconds | 5 requests |

                Exceptions are the methods:
                <ul>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post">creating product cards</a></li>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post">creating product cards with merge</a></li>
                    <li><a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post">editing product cards</a></li>
                </ul>
                </div>
            tags:
                - Tags
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                color:
                                    description: |
                                        Tag color.
                                        <dl>
                                        <dt>Available colors:</dt>
                                        <dd><code>D1CFD7</code> - grey</dd>
                                        <dd><code>FEE0E0</code> - red</dd>
                                        <dd><code>ECDAFF</code> - purple</dd>
                                        <dd><code>E4EAFF</code> - blue</dd>
                                        <dd><code>DEF1DD</code> - green</dd>
                                        <dd><code>FFECC7</code> - yellow</dd>
                                        </dl>
                                    type: string
                                    example: D1CFD7
                                name:
                                    description: Tag name
                                    type: string
                                    example: Sale
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseContentError6'
                            examples:
                                responseOK200:
                                    $ref: '#/components/examples/responseOK200'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: '#/components/schemas/responseBodyContentError400'
                                    - $ref: '#/components/schemas/responseContentError4'
                                    - $ref: '#/components/schemas/responseContentError6'
                            examples:
                                responseBodyContentError400:
                                    $ref: '#/components/examples/responseBodyContentError400'
                                responseBody400LenName:
                                    $ref: '#/components/examples/responseBody400LenName'
                                responseBodyLimitTag:
                                    $ref: '#/components/examples/responseBodyLimitTag'
                                responseBodyNameNotExist:
                                    $ref: '#/components/examples/responseBodyNameNotExist'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/tag/{id}:
        servers:
            - url: https://content-api.wildberries.ru
        patch:
            security:
                - HeaderApiKey: []
            summary: Update the tag
            description: |
                Changes tag data: name and color

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 100 requests | 600 milliseconds | 5 requests |

                Exceptions are the methods:
                <ul>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post">creating product cards</a></li>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post">creating product cards with merge</a></li>
                    <li><a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post">editing product cards</a></li>
                </ul>
                </div>
            tags:
                - Tags
            parameters:
                - name: id
                  in: path
                  schema:
                      type: integer
                      example: 1
                  description: Numeric tag ID
                  required: true
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                color:
                                    description: Tag color
                                    type: string
                                    example: D1CFD7
                                name:
                                    description: Tag name
                                    type: string
                                    example: Sale
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: '#/components/schemas/responseContentError6'
                                    - $ref: '#/components/schemas/responseContentError4'
                            examples:
                                responseOK200:
                                    $ref: '#/components/examples/responseOK200'
                                responseNotFound200:
                                    $ref: '#/components/examples/responseNotFound200'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: '#/components/schemas/responseBodyContentError400'
                                    - $ref: '#/components/schemas/responseContentError4'
                            examples:
                                responseBodyContentError400:
                                    $ref: '#/components/examples/responseBodyContentError400'
                                responseBody400LenName:
                                    $ref: '#/components/examples/responseBody400LenName'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError403'
                'Response429':
                    $ref: '#/components/responses/Response429'
        delete:
            security:
                - HeaderApiKey: []
            summary: Delete the tag
            description: |
                Deletes the tag

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 100 requests | 600 milliseconds | 5 requests |

                Exceptions are the methods:
                <ul>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post">creating product cards</a></li>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post">creating product cards with merge</a></li>
                    <li><a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post">editing product cards</a></li>
                </ul>
                </div>
            tags:
                - Tags
            parameters:
                - name: id
                  in: path
                  schema:
                      type: integer
                      example: 1
                  description: Numeric tag ID
                  required: true
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: '#/components/schemas/responseContentError6'
                                    - $ref: '#/components/schemas/responseContentError5'
                            examples:
                                responseOK200:
                                    $ref: '#/components/examples/responseOK200'
                                responseNotFound200Del:
                                    $ref: '#/components/examples/responseNotFound200Del'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: '#/components/schemas/responseBodyContentError400'
                                    - $ref: '#/components/schemas/responseContentError5'
                            examples:
                                responseBodyContentError400:
                                    $ref: '#/components/examples/responseBodyContentError400'
                                responseBodyTagNotExist:
                                    $ref: '#/components/examples/responseBodyTagNotExist'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/tag/nomenclature/link:
        servers:
            - url: https://content-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            summary: Tag management in the product card
            description: |
                The method allows to add tags to the product card and remove tags from the product card.<br>
                When removing a tag from a product card, the tag itself is not removed.<br>
                It is possible to add 15 tags to a product card.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 100 requests | 600 milliseconds | 5 requests |

                Exceptions are the methods:
                <ul>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post">creating product cards</a></li>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post">creating product cards with merge</a></li>
                    <li><a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post">editing product cards</a></li>
                </ul>
                </div>
            tags:
                - Tags
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nmID:
                                    description: WB article
                                    type: integer
                                tagsIDs:
                                    description: |
                                        An array of numeric tag IDs.<br>
                                        When removing a tag from a product card, the tag itself is not removed.<br>
                                        To add tags to existing ones in the product card, you need to specify in the request the new tags and the tags that are already exist in the product card.
                                    type: array
                                    items:
                                        type: integer
                                        description: Numeric tag identifier
                        example:
                            nmID: 179891389
                            tagsIDs:
                                - 123456
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseContentError6'
                            examples:
                                responseOK200:
                                    $ref: '#/components/examples/responseOK200'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseContentError4'
                            examples:
                                IncorrectRequest4:
                                    $ref: '#/components/examples/IncorrectRequest4'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/get/cards/list:
        servers:
            - url: https://content-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            tags:
                - Product Cards
            summary: Product cards list
            description: |
                <div class="description_auth">
                  Method is available with the <a href="/openapi/api-information#tag/Authorization/How-to-create-a-token">token</a> of the <strong>Promotion</strong> category
                </div>

                Returns the list of created product cards.<br>

                To get **more than 100** product cards, you need to use pagination:

                  <ol>
                    <li>Make first request (all listed params are required):
                      <pre>
                        {
                          "settings": {
                            "cursor": {
                              "limit": 100
                            },
                            "filter": {
                              "withPhoto": -1
                            }
                          }
                        }</pre>
                    </li>
                    <li>From last part of response list, copy 2 strings from `cursor` field response:
                      <ul>
                        <li><code>"updatedAt": "***"</code></li>
                        <li><code>"nmID": ***</code></li>
                      </ul>
                    <li>Paste the copied strings to the request <code>cursor</code>, repeat the request. </li>
                    <li>Repeat <b>2</b> and <b>3</b>, until <code>total</code> will be less than <code>limit</code> in response. This will mean you got all cards.
                  </ol>

                <div class="description_important">
                  Product cards from the trash are not provided in the method response. You can get these product cards via <a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1get~1cards~1trash/post">different method</a>.
                </div>

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 100 requests | 600 milliseconds | 5 requests |

                Exceptions are the methods:
                <ul>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post">creating product cards</a></li>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post">creating product cards with merge</a></li>
                    <li><a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post">editing product cards</a></li>
                </ul>
                </div>
            parameters:
                - name: locale
                  in: query
                  schema:
                      type: string
                      example: ru
                  description: |
                      Language for response fields `name`, `value` and `object` translation:  `ru` - Russian, `en` - English, `zh` - Chinese.

                      Is not used in the sandbox
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                settings:
                                    type: object
                                    description: Settings
                                    properties:
                                        sort:
                                            description: Sort by
                                            type: object
                                            properties:
                                                ascending:
                                                    type: boolean
                                                    description: Sort by **updatedAt** field (`false` - descending, `true` - ascending)
                                        filter:
                                            description: Filters
                                            type: object
                                            properties:
                                                withPhoto:
                                                    type: integer
                                                    description: |
                                                        Photo:
                                                          * `0` — only cards without photos
                                                          * `1` — only cards with photos
                                                          * `-1` — all cards
                                                textSearch:
                                                    type: string
                                                    description: Seller's article, Wildberries article or barcode search
                                                tagIDs:
                                                    type: array
                                                    description: Tags ID search
                                                    items:
                                                        type: integer
                                                allowedCategoriesOnly:
                                                    description: |
                                                        Category: true — permitted, false — forbidden
                                                    type: boolean
                                                objectIDs:
                                                    type: array
                                                    description: Subject ID search
                                                    items:
                                                        type: integer
                                                brands:
                                                    type: array
                                                    description: Brand search
                                                    items:
                                                        type: string
                                                imtID:
                                                    description: |
                                                        `imtID` search
                                                    type: integer
                                        cursor:
                                            description: |
                                                Cursor
                                            type: object
                                            properties:
                                                limit:
                                                    type: integer
                                                    description: Number of cards in response
                        example:
                            settings:
                                sort:
                                    ascending: false
                                filter:
                                    textSearch: '4603743187500888'
                                    allowedCategoriesOnly: true
                                    tagIDs:
                                        - 345
                                        - 415
                                    objectIDs:
                                        - 235
                                        - 67
                                    brands:
                                        - уллу
                                        - EkkE
                                    imtID: 328632
                                    withPhoto: -1
                                cursor:
                                    updatedAt: '2023-12-06T11:17:00.96577Z'
                                    nmID: 370870300
                                    limit: 11
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    cards:
                                        type: array
                                        description: Product cards
                                        items:
                                            type: object
                                            properties:
                                                nmID:
                                                    type: integer
                                                    description: WB article
                                                imtID:
                                                    type: integer
                                                    description: |
                                                        Merged product card ID<br>
                                                        The same for all WB article of a merged product card<br>
                                                        The product card has it, even if one is not merged with any other card
                                                nmUUID:
                                                    type: string
                                                    format: uuid
                                                    description: Internal system ID of the product card
                                                subjectID:
                                                    type: integer
                                                    description: Subject ID
                                                subjectName:
                                                    type: string
                                                    description: Subject name
                                                vendorCode:
                                                    type: string
                                                    description: Seller's article
                                                brand:
                                                    type: string
                                                    description: Brand
                                                title:
                                                    type: string
                                                    description: Product title
                                                description:
                                                    type: string
                                                    description: Product description
                                                needKiz:
                                                    description: |
                                                        Is a [labeling code](https://chestnyznak.ru/en) required for the product
                                                        <br>
                                                        * `false` — labeling code is not required
                                                        <br>
                                                        * `true` — labeling code is required
                                                    type: boolean
                                                photos:
                                                    type: array
                                                    description: Photo array
                                                    items:
                                                        type: object
                                                        properties:
                                                            big:
                                                                description: URL of `900x1200` photo
                                                                type: string
                                                            c246x328:
                                                                description: URL of `248x328` photo
                                                                type: string
                                                            c516x688:
                                                                description: URL of `516x688` photo
                                                                type: string
                                                            square:
                                                                description: URL of `600x600` photo
                                                                type: string
                                                            tm:
                                                                description: URL of `75x100` photo
                                                                type: string
                                                video:
                                                    type: string
                                                    description: Video URL
                                                dimensions:
                                                    description: Dimensions and weight of packed product in `centimeters` and `kilograms`
                                                    type: object
                                                    properties:
                                                        length:
                                                            type: integer
                                                            description: Length, cm
                                                        width:
                                                            type: integer
                                                            description: Width, cm
                                                        height:
                                                            type: integer
                                                            description: Height, cm
                                                        weightBrutto:
                                                            type: number
                                                            description: Weight, kg<br>Number of decimal places <=3
                                                        isValid:
                                                            type: boolean
                                                            description: |
                                                                Potential dimension difference:

                                                                - `true` — not detected. `"isValid": true` does not guarantee that the dimensions are correct. In some cases (for example, when creating a new product category), `"isValid": true` will be returned for any values except zero.

                                                                - `false` — the specified dimensions significantly differ from the average for the category (subject). it is recommended to double-check whether the product dimensions in the packaging are correctly specified **in centimeters**. The functionality of the product card, including the calculation of logistics and storage, will not be limited. Logistics and storage will continue to be calculated based on the current dimensions. Also, `"isValid": false` is returned when there are missing values or any dimension is zero.
                                                characteristics:
                                                    type: array
                                                    description: Characteristics
                                                    items:
                                                        type: object
                                                        properties:
                                                            id:
                                                                type: integer
                                                                description: Characteristic ID
                                                            name:
                                                                type: string
                                                                description: Characteristic name
                                                            value:
                                                                description: Characteristic value
                                                sizes:
                                                    type: array
                                                    description: Product sizes
                                                    items:
                                                        type: object
                                                        properties:
                                                            chrtID:
                                                                type: integer
                                                                description: Size ID
                                                            techSize:
                                                                type: string
                                                                description: Size (for example, S or 42)
                                                            wbSize:
                                                                type: string
                                                                description: Russian size
                                                            skus:
                                                                type: array
                                                                description: Barcode
                                                                items:
                                                                    type: string
                                                                    example: 12345Ejf5
                                                tags:
                                                    description: Tags
                                                    type: array
                                                    items:
                                                        type: object
                                                        properties:
                                                            id:
                                                                type: integer
                                                                description: Tag ID
                                                            name:
                                                                type: string
                                                                description: Tag name
                                                            color:
                                                                type: string
                                                                description: |
                                                                    Color:

                                                                      * `D1CFD7` - grey
                                                                      * `FEE0E0` - red
                                                                      * `ECDAFF` - purple
                                                                      * `E4EAFF` - blue
                                                                      * `DEF1DD` - green
                                                                      * `FFECC7` - yellow
                                                createdAt:
                                                    type: string
                                                    description: Creation date and time
                                                updatedAt:
                                                    type: string
                                                    description: Update date and time
                                    cursor:
                                        type: object
                                        description: Pagination
                                        properties:
                                            updatedAt:
                                                type: string
                                                description: Date and time for next card page
                                            nmID:
                                                type: integer
                                                description: WB article for next card page
                                            total:
                                                type: integer
                                                description: Number of cards
                            example:
                                cards:
                                    - nmID: 12345678
                                      imtID: 123654789
                                      nmUUID: 01bda0b1-5c0b-736c-b2be-d0a6543e9be
                                      subjectID: 7771
                                      subjectName: AKF системы
                                      vendorCode: wb7f6mumjr1
                                      brand: Тест
                                      title: Тест-система
                                      description: Тестовое описание
                                      needKiz: false
                                      photos:
                                          - big: https://basket-10.wbbasket.ru/vol1592/part159206/159206280/images/big/1.webp
                                            c246x328: https://basket-10.wbbasket.ru/vol1592/part159206/159206280/images/c246x328/1.webp
                                            c516x688: https://basket-10.wbbasket.ru/vol1592/part159206/159206280/images/c516x688/1.webp
                                            square: https://basket-10.wbbasket.ru/vol1592/part159206/159206280/images/square/1.webp
                                            tm: https://basket-10.wbbasket.ru/vol1592/part159206/159206280/images/tm/1.webp
                                      video: https://videonme-basket-12.wbbasket.ru/vol137/part22557/225577433/hls/1440p/index.m3u8
                                      dimensions:
                                          length: 55
                                          width: 40
                                          height: 15
                                          weightBrutto: 6.24
                                          isValid: false
                                      characteristics:
                                          - id: 14177449
                                            name: Цвет
                                            value:
                                                - красно-сиреневый
                                      sizes:
                                          - chrtID: 316399238
                                            techSize: '0'
                                            skus:
                                                - '987456321654'
                                      tags:
                                          - id: 592569
                                            name: Популярный
                                            color: D1CFD7
                                      createdAt: '2023-12-06T11:17:00.96577Z'
                                      updatedAt: '2023-12-06T11:17:00.96577Z'
                                cursor:
                                    updatedAt: '2023-12-06T11:17:00.96577Z'
                                    nmID: 123654123
                                    total: 1
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError400'
                        plain/text:
                            example: Request body can not be decoded
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/cards/error/list:
        servers:
            - url: https://content-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: List of failed product cards with errors
            description: |
                Returns the list of product cards and the list of errors encountered during product card creation<br>

                <div class="description_important">
                  To delete product card from the errors list you need to repeat the <a href="/openapi/work-with-products#tag/Creating-Products-Cards/paths/~1content~1v2~1cards~1upload/post">product card creation</a> request with fixed errors.
                </div>

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 100 requests | 600 milliseconds | 5 requests |

                Exceptions are the methods:
                <ul>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post">creating product cards</a></li>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post">creating product cards with merge</a></li>
                    <li><a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post">editing product cards</a></li>
                </ul>
                </div>
            tags:
                - Product Cards
            parameters:
                - name: locale
                  in: query
                  schema:
                      type: string
                      example: en
                  description: |
                      Language of multi-language parameters (for which the multi-language option is provided).

                      Is not used in the sandbox
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                object:
                                                    description: Category for which the product card was created with the given product card
                                                    type: string
                                                    example: Блузки
                                                vendorCode:
                                                    description: Supplier's article
                                                    type: string
                                                    example: '6000000001'
                                                updateAt:
                                                    description: The date and time of creating product card with specified product card request
                                                    type: string
                                                    example: '2022-06-15T14:37:13Z'
                                                errors:
                                                    description: |
                                                        List of errors due to which the request to create a product card with a given product card is not processed
                                                    type: array
                                                    items:
                                                        type: string
                                                        example: Поля Рос. размер, Размер обязательны для заполнения
                                                objectID:
                                                    description: Product ID
                                                    type: integer
                                                    example: 1234
                                    error:
                                        description: Error flag.
                                        type: boolean
                                        example: false
                                    errorText:
                                        description: Error description.
                                        type: string
                                        example: ''
                                    additionalErrors:
                                        nullable: true
                                        description: Any additional errors.
                                        type: string
                                        example: null
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError400'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/cards/update:
        servers:
            - url: https://content-api.wildberries.ru
        post:
            tags:
                - Product Cards
            summary: Update product cards
            description: |
                Edits product cards. If you need some product data, get it using [product cards list](/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1get~1cards~1list/post).

                <div class="description_important">
                  The product card is overwritten during an update. Therefore, you need to include <strong>all</strong> parameters of the product card in the request, including those you do not intend to update.
                </div>

                The dimensions of the products can only be specified in `centimeters`, and the weight of packed products must be specified in `kilograms`.

                You can not edit or delete barcodes but you can add new ones. You have not to send `photos`, `video` and `tags` and can not edit them.

                If this method response is Success (200) but product card was not updated, check errors using [list of failed product cards with errors](/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1error~1list/get).

                With one request you can edit maximum product cards (`nmID`). Maximum request size is 10 Mb

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 10 requests | 6 seconds | 5 requests |
                </div>
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                required:
                                    - nmID
                                    - vendorCode
                                    - sizes
                                properties:
                                    nmID:
                                        type: integer
                                        description: WB article
                                    vendorCode:
                                        type: string
                                        description: Supplier's article
                                    brand:
                                        type: string
                                        description: Brand
                                    title:
                                        type: string
                                        description: Product title
                                        maxLength: 60
                                    description:
                                        type: string
                                        description: |
                                            Product description<br>
                                            The maximum number of characters depends on the product category<br>
                                            Standard - 2000, minimum - 1000, maximum - 5000<br>
                                            More details about description rules in **Product card filling rules** in [Instructions](https://seller.wildberries.ru/help-center/article/A-113#описание) category of sellers portal
                                    dimensions:
                                        description: |
                                            Dimensions and weight of packed product in `centimeters` and `kilograms`
                                        type: object
                                        properties:
                                            length:
                                                type: integer
                                                description: Length, cm
                                            width:
                                                type: integer
                                                description: Width, cm
                                            height:
                                                type: integer
                                                description: Height, cm
                                            weightBrutto:
                                                type: number
                                                description: Weight, kg<br>Number of decimal places <=3
                                    characteristics:
                                        description: Product characteristics
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: integer
                                                    description: Characteristic ID
                                                value:
                                                    description: Characteristic value
                                    sizes:
                                        type: array
                                        description: |
                                            Product sizes<br>
                                            If product has no sizes, send only barcodes
                                        items:
                                            type: object
                                            properties:
                                                chrtID:
                                                    type: integer
                                                    description: |
                                                        WB article of this size<br>
                                                        Required for existing sizes<br>
                                                        If you add new size, do not send this ID
                                                techSize:
                                                    type: string
                                                    description: Size (for example, XL, S, 45)
                                                wbSize:
                                                    type: string
                                                    description: Russian size
                                                skus:
                                                    type: array
                                                    items:
                                                        type: string
                                                    description: Barcodes
                            example:
                                - nmID: 11111111
                                  vendorCode: wbiz72wmro
                                  brand: ''
                                  title: Свитер женский оверсайз с горлом
                                  description: '12345'
                                  dimensions:
                                      length: 55
                                      width: 40
                                      height: 15
                                      weightBrutto: 3
                                  characteristics:
                                      - id: 14177450
                                        value:
                                            - хлопок 50% акрил 50%
                                      - id: 50
                                        value:
                                            - свободный крой
                                  sizes:
                                      - chrtID: 12345678
                                        techSize: ONE SIZE
                                        wbSize: 78-90
                                        skus:
                                            - '123487653460134'
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseCardCreate'
                            example:
                                data: null
                                error: false
                                errorText: ''
                                additionalErrors: {}
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError400'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError403'
                '413':
                    description: The request body size exceeds the given limit
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    title:
                                        type: string
                                        description: Error title
                                    detail:
                                        type: string
                                        description: Error details
                                    code:
                                        type: string
                                        description: Internal error code
                                    requestId:
                                        type: string
                                        description: Unique request ID
                                    origin:
                                        type: string
                                        description: WB internal service ID
                                    status:
                                        type: number
                                        description: HTTP status code
                                    statusText:
                                        type: string
                                        description: Text of the HTTP status code
                            example:
                                title: request body too long
                                detail: https://openapi.wildberries.ru/content/api/ru/
                                code: 71d3de1b-001e-488f-bbf5-55c31254fbeb
                                requestId: MN8usr6RfrzWHZfucSvNgb
                                origin: s2s-api-auth-content
                                status: 413
                                statusText: Request Entity Too Large
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/cards/moveNm:
        servers:
            - url: https://content-api.wildberries.ru
        post:
            tags:
                - Product Cards
            summary: Merging or separating of product cards
            description: |
                The method merges and separates product cards. Product cards are considered merged if they have the same `imtID`.<br><br>

                To merge product cards, make a request **specifying** the `imtID`. You can merge up to 30 product cards at a time.<br>

                To separate product cards, make a request **without specifying** the `imtID`. New `imtID`s will be generated for the separated cards.<br><br>

                If you separate multiple product cards simultaneously, these cards will merge into one and receive a new `imtID`.<br>

                To assign a unique `imtID` to each product card, you need to send one product card per request.<br><br>

                The maximum request size is 10 MB.

                <div class="description_important">
                  It is possible to merge product cards containing only the same subjects.
                </div>

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 100 requests | 600 milliseconds | 5 requests |

                Exceptions are the methods:
                <ul>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post">creating product cards</a></li>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post">creating product cards with merge</a></li>
                    <li><a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post">editing product cards</a></li>
                </ul>
                </div>
            requestBody:
                content:
                    application/json:
                        schema:
                            oneOf:
                                - $ref: '#/components/schemas/requestMoveNmsImtConn'
                                - $ref: '#/components/schemas/requestMoveNmsImtDisconn'
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseCardCreate'
                            example:
                                data: null
                                error: false
                                errorText: ''
                                additionalErrors: {}
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: '#/components/schemas/responseCardCreate'
                                    - $ref: '#/components/schemas/responseIncorrectDate'
                            examples:
                                responseExceededLimit:
                                    $ref: '#/components/examples/responseExceededLimit'
                                responseCombining:
                                    $ref: '#/components/examples/responseCombining'
                                responseIncorrectRequestFormat:
                                    $ref: '#/components/examples/responseIncorrectRequestFormat'
                                responseNonExistentNmId:
                                    $ref: '#/components/examples/responseNonExistentNmId'
                                responseNonExistentImt:
                                    $ref: '#/components/examples/responseNonExistentImt'
                                responseCardCreate1:
                                    $ref: '#/components/examples/responseCardCreate1'
                                responseDuplicateRequests:
                                    $ref: '#/components/examples/responseDuplicateRequests'
                                responseAllCardsInSameGroup:
                                    $ref: '#/components/examples/responseAllCardsInSameGroup'
                                responseIncorrectBeginDate:
                                    $ref: '#/components/examples/responseIncorrectBeginDate'
                                responseIncorrectEndDate:
                                    $ref: '#/components/examples/responseIncorrectEndDate'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseCardCreate'
                '413':
                    description: The request body size exceeds the given limit
                    content:
                        application/json:
                            schema:
                                type: string
                            examples:
                                BodySizeExceedsTheGivenLimit:
                                    $ref: '#/components/examples/BodySizeExceedsTheGivenLimit'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/cards/delete/trash:
        servers:
            - url: https://content-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            summary: Transfer product card to trash
            description: |
                Transfers the product card to trash. In doing so, the product card would not be deleted.

                <div class="description_important">
                  When transferring product cards to the trash, this product card is removed from the product card, meaning it is assigned a new <code>imtID</code>.
                </div>

                After 30 days in the trash the product card would be deleted automatically. The trash is cleared every night according to Moscow time.<br>
                The product card can be deleted at any time in [personal account](https://seller.wildberries.ru/new-goods/basket-cards).

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 100 requests | 600 milliseconds | 5 requests |

                Exceptions are the methods:
                <ul>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post">creating product cards</a></li>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post">creating product cards with merge</a></li>
                    <li><a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post">editing product cards</a></li>
                </ul>
                </div>
            tags:
                - Product Cards
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nmIDs:
                                    description: WB article (max. 1000)
                                    type: array
                                    items:
                                        type: integer
                        example:
                            nmIDs:
                                - 123456789
                                - 987654321
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        nullable: true
                                    error:
                                        description: Error flag
                                        type: boolean
                                    errorText:
                                        description: Error description
                                        type: string
                                    additionalErrors:
                                        nullable: true
                                        description: Any additional errors
                                        type: object
                            example:
                                data: null
                                error: false
                                errorText: ''
                                additionalErrors: {}
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError400'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/cards/recover:
        servers:
            - url: https://content-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            summary: Recover product card from trash
            description: |
                Returns the product card from trash

                <div class="description_important">
                  When restoring the product card from the trash, its <code>imtID</code> doesn't remain the same as it was for the product card in the trash.
                </div>

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 100 requests | 600 milliseconds | 5 requests |

                Exceptions are the methods:
                <ul>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post">creating product cards</a></li>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post">creating product cards with merge</a></li>
                    <li><a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post">editing product cards</a></li>
                </ul>
                </div>
            tags:
                - Product Cards
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nmIDs:
                                    description: WB article (max. 1000)
                                    type: array
                                    items:
                                        type: integer
                        example:
                            nmIDs:
                                - 123456789
                                - 987654321
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        nullable: true
                                    error:
                                        description: Error flag
                                        type: boolean
                                    errorText:
                                        description: Error text
                                        type: string
                                    additionalErrors:
                                        nullable: true
                                        description: Additional errors
                                        type: object
                            example:
                                data: null
                                error: false
                                errorText: ''
                                additionalErrors: {}
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError400'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/get/cards/trash:
        servers:
            - url: https://content-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            summary: Product cards in trash list
            description: |
                <div class="description_auth">
                  Method is available with the <a href="/openapi/api-information#tag/Authorization/How-to-create-a-token">token</a> of the <strong>Promotion</strong> category
                </div>

                Returns list of product cards in trash.

                To get full list of product cards, if their number **exceed 100**, user need to use pagination.

                  <ol>
                    <li>Make the first request: <br>
                      <pre>
                        {
                          "settings": {
                            "cursor": {
                              "limit": 100
                            }
                          }
                        }</pre>
                    </li>
                    <li>From last part of response list copy 2 strings from <code>cursor</code> field response:
                      <ul>
                        <li><code>"trashedAt": "***"</code></li>
                        <li><code>"nmID": ***</code></li>
                      </ul>
                    <li>Paste copied strings in <code>cursor</code> request parameter, repeat the method request. </li>
                    <li>Repeat <b>2</b> and <b>3</b>, until <code>total</code> will be less than <code>limit</code> in response. This will mean you got all cards.
                  </ol>

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 100 requests | 600 milliseconds | 5 requests |

                Exceptions are the methods:
                <ul>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post">creating product cards</a></li>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post">creating product cards with merge</a></li>
                    <li><a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post">editing product cards</a></li>
                </ul>
                </div>
            tags:
                - Product Cards
            parameters:
                - name: locale
                  in: query
                  schema:
                      type: string
                      enum:
                          - ru
                          - en
                          - zh
                  description: |
                      Language of `name`, `value` and `object` parameters
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                settings:
                                    type: object
                                    description: Settings
                                    properties:
                                        sort:
                                            description: Sort by
                                            type: object
                                            properties:
                                                ascending:
                                                    type: boolean
                                                    description: "`trashedAt`: true — ascending, false\_— descending\n"
                                        cursor:
                                            description: Cursor
                                            type: object
                                            properties:
                                                limit:
                                                    type: integer
                                                    description: Number of cards in response
                                        filter:
                                            description: Filters
                                            type: object
                                            properties:
                                                textSearch:
                                                    type: string
                                                    description: Seller's article, Wildberries article or barcode to search
                        example:
                            settings:
                                sort:
                                    ascending: false
                                filter:
                                    textSearch: '4603743187500888'
                                cursor:
                                    trashedAt: '2023-12-06T11:17:00.96577Z'
                                    nmID: 370870300
                                    limit: 11
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    cards:
                                        description: The list of requested product cards
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                nmID:
                                                    type: integer
                                                    description: WB article
                                                vendorCode:
                                                    type: string
                                                    description: Seller's article
                                                subjectID:
                                                    type: integer
                                                    description: Subject ID
                                                subjectName:
                                                    type: string
                                                    description: Subject name
                                                photos:
                                                    type: array
                                                    description: Photo array
                                                    items:
                                                        type: object
                                                        properties:
                                                            big:
                                                                description: URL of `900x1200` photo
                                                                type: string
                                                            c246x328:
                                                                description: URL of `248x328` photo
                                                                type: string
                                                            c516x688:
                                                                description: URL of `516x688` photo
                                                                type: string
                                                            square:
                                                                description: URL of `600x600` photo
                                                                type: string
                                                            tm:
                                                                description: URL of `75x100` photo
                                                                type: string
                                                video:
                                                    type: string
                                                    description: Video URL
                                                sizes:
                                                    type: array
                                                    description: Product sizes
                                                    items:
                                                        type: object
                                                        properties:
                                                            chrtID:
                                                                type: integer
                                                                description: Size ID
                                                            techSize:
                                                                type: string
                                                                description: Product size (eg S, M, L, XL, 42, 42-43)
                                                            wbSize:
                                                                type: string
                                                                description: Russian product size
                                                            skus:
                                                                type: array
                                                                description: Array of barcodes
                                                                items:
                                                                    type: string
                                                                    example: 12345Ejf5
                                                dimensions:
                                                    type: object
                                                    description: Dimensions and weight of packed product in `centimeters` and `kilograms`
                                                    properties:
                                                        length:
                                                            type: integer
                                                            description: Length, cm
                                                        width:
                                                            type: integer
                                                            description: Width, cm
                                                        height:
                                                            type: integer
                                                            description: Height, cm
                                                        weightBrutto:
                                                            type: number
                                                            description: Weight, kg<br>Number of decimal places <=3
                                                        isValid:
                                                            type: boolean
                                                            description: |
                                                                Potential dimension difference:

                                                                - `true` — not detected. `"isValid": true` does not guarantee that the dimensions are correct. In some cases (for example, when creating a new product category), `"isValid": true` will be returned for any values except zero.

                                                                - `false` — the specified dimensions significantly differ from the average for the category (subject). it is recommended to double-check whether the product dimensions in the packaging are correctly specified **in centimeters**. The functionality of the product card, including the calculation of logistics and storage, will not be limited. Logistics and storage will continue to be calculated based on the current dimensions. Also, `"isValid": false` is returned when there are missing values or any dimension is zero.
                                                characteristics:
                                                    type: array
                                                    description: Characteristics
                                                    items:
                                                        type: object
                                                        properties:
                                                            id:
                                                                type: integer
                                                                description: Characteristic ID
                                                            name:
                                                                type: string
                                                                description: Characteristic name
                                                            value:
                                                                description: Characteristic value
                                                createdAt:
                                                    type: string
                                                    description: Characteristics
                                                trashedAt:
                                                    type: string
                                                    description: Date and time the card was transferred to trash
                                    cursor:
                                        type: object
                                        description: Pagination
                                        properties:
                                            trashedAt:
                                                type: string
                                                description: Date and time for next card page
                                            nmID:
                                                type: integer
                                                description: WB article for next card page
                                            total:
                                                type: integer
                                                description: Number of cards
                            example:
                                cards:
                                    - nmID: 1234567
                                      vendorCode: wb5xsy5ftj
                                      subjectID: 1436
                                      subjectName: Ведра хозяйственные
                                      photos:
                                          - big: https://basket-10.wbbasket.ru/vol1592/part159206/159206280/images/big/1.webp
                                            c246x328: https://basket-10.wbbasket.ru/vol1592/part159206/159206280/images/c246x328/1.webp
                                            c516x688: https://basket-10.wbbasket.ru/vol1592/part159206/159206280/images/c516x688/1.webp
                                            square: https://basket-10.wbbasket.ru/vol1592/part159206/159206280/images/square/1.webp
                                            tm: https://basket-10.wbbasket.ru/vol1592/part159206/159206280/images/tm/1.webp
                                      video: https://videonme-basket-12.wbbasket.ru/vol137/part22557/225577433/hls/1440p/index.m3u8
                                      sizes:
                                          - chrtID: 111111111
                                            techSize: '0'
                                            skus:
                                                - xxxxxxxxxxxx
                                      dimensions:
                                          length: 35
                                          width: 40
                                          height: 15
                                          weightBrutto: 2.9
                                          isValid: false
                                      createdAt: '2023-12-05T14:55:09.323462Z'
                                      trashedAt: '2023-12-06T10:57:42.193028Z'
                                cursor:
                                    trashedAt: '2023-12-06T10:57:42.193028Z'
                                    nmID: 194128521
                                    total: 1
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError400'
                        plain/text:
                            example: Request body can not be decoded
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/cards/limits:
        servers:
            - url: https://content-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Limits for the product cards
            description: |
                The method allows to get separately free and paid vendor limits for creating product cards.<br>
                To calculate the number of cards that can be created, use the formula: (freeLimits + paidLimits) - Number of cards created.<br>
                All cards that can be obtained using the [product cards list](/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1get~1cards~1list/post) and [list of product cards that are in the trash](/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1get~1cards~1trash/post) methods are considered created.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 100 requests | 600 milliseconds | 5 requests |

                Exceptions are the methods:
                <ul>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post">creating product cards</a></li>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post">creating product cards with merge</a></li>
                    <li><a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post">editing product cards</a></li>
                </ul>
                </div>
            tags:
                - Creating Product Cards
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        properties:
                                            freeLimits:
                                                description: Amount of free limits
                                                type: integer
                                            paidLimits:
                                                description: Amount of paid limits
                                                type: integer
                                    error:
                                        description: Error flag
                                        type: boolean
                                    errorText:
                                        description: Error description
                                        type: string
                                    additionalErrors:
                                        description: Additional errors
                                        type: string
                                        nullable: true
                            example:
                                data:
                                    freeLimits: 1500
                                    paidLimits: 10
                                error: false
                                errorText: ''
                                additionalErrors: null
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/barcodes:
        servers:
            - url: https://content-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            summary: Generation of barcodes
            description: |
                Generates array of unique barcodes to create size of the product card

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 100 requests | 600 milliseconds | 5 requests |

                Exceptions are the methods:
                <ul>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post">creating product cards</a></li>
                    <li><a href="/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post">creating product cards with merge</a></li>
                    <li><a href="/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post">editing product cards</a></li>
                </ul>
                </div>
            tags:
                - Creating Product Cards
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                count:
                                    description: Number of barcodes to be generated, maximum 5,000
                                    type: integer
                                    example: 100
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        description: An array of generated barcodes
                                        type: array
                                        items:
                                            type: string
                                            example: '5032781145187'
                                    error:
                                        description: Error flag
                                        type: boolean
                                        example: false
                                    errorText:
                                        description: Error description.
                                        type: string
                                        example: ''
                                    additionalErrors:
                                        description: Any additional errors
                                        nullable: true
                                        type: string
                                        example: ''
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/cards/upload:
        servers:
            - url: https://content-api.wildberries.ru
        post:
            tags:
                - Creating Product Cards
            summary: Create product cards
            description: "Creates products cards. You can specify product description and characteristics.<br>\n\nHow to create a card:\n\n  1. Get [parent categories list](/openapi/work-with-products#tag/Categories-Subjects-and-Characteristics/paths/~1content~1v2~1object~1parent~1all/get)\n  2. Get [the category and get all subjects](/openapi/work-with-products#tag/Categories-Subjects-and-Characteristics/paths/~1content~1v2~1object~1all/get)\n  3. Choose [the subject and get all available characteristics](/openapi/work-with-products#tag/Categories-Subjects-and-Characteristics/paths/~1content~1v2~1object~1charcs~1%7BsubjectId%7D/get). For `Color`, `Gender`, `Country of origin`, `Season`, `VAT rate`, `HS code` characteristics use values from [category](/openapi/work-with-products#tag/Categories-Subjects-and-Characteristics).\n  4. Send the request. If the response is Success (200) but the card was not created, check errors using [list of failed product card with errors](/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1error~1list/get).\n\nThe dimensions of the products can only be specified in `centimeters`, and the weight of packed products must be specified in `kilograms`.<br>\n\nWith one request you can create maximum 100\_merged product cards (`imtID`), 30\_product cards (`nmID`) in\_each. Maximum request size is 10 Mb.<br>\n\nCreating a card is asynchronous, after sending the request is put in a queue for processing.\n\n<div class=\"description_important\">\n  If there were errors during queue processing, the product card is considered invalid.\n</div>\n\n<div class=\"description_limit\">\n<a href=\"/openapi/api-information#tag/Introduction/Rate-Limits\">Request limit</a> per one seller's account:\n\n| Period | Limit | Interval | Burst |\n| --- | --- | --- | --- |\n| 1 minute | 10 requests | 6 seconds | 5 requests |\n</div>\n"
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                required:
                                    - subjectID
                                    - variants
                                properties:
                                    subjectID:
                                        type: integer
                                        description: Subject ID
                                    variants:
                                        description: Product variants, maximum 30 in one merged card
                                        type: array
                                        items:
                                            type: object
                                            required:
                                                - vendorCode
                                            properties:
                                                brand:
                                                    type: string
                                                    description: Brand
                                                title:
                                                    type: string
                                                    description: Product title
                                                    maxLength: 60
                                                description:
                                                    type: string
                                                    description: |
                                                        Product description<br>
                                                        The maximum number of characters depends on the product category<br>
                                                        Standard - 2000, minimum - 1000, maximum - 5000<br>
                                                        More details about description rules in **Product card filling rules** in [Instructions](https://seller.wildberries.ru/help-center/article/A-113#описание) category of sellers portal
                                                vendorCode:
                                                    type: string
                                                    description: Seller's article
                                                dimensions:
                                                    description: |
                                                        Dimensions and weight of packed product in `centimeters` and `kilograms`<br>
                                                        In case of empty `dimensions`, they are generated automatically with zero values
                                                    type: object
                                                    properties:
                                                        length:
                                                            type: integer
                                                            description: Length, cm
                                                        width:
                                                            type: integer
                                                            description: Width, cm
                                                        height:
                                                            type: integer
                                                            description: Height, cm
                                                        weightBrutto:
                                                            type: number
                                                            description: Weight, kg<br>Number of decimal places <=3
                                                sizes:
                                                    type: array
                                                    description: |
                                                        Product sizes<br>
                                                        If the product has sizes but you send empty parameter, it is generated automatically with values: `techSize` = "A", `wbSize` = "1" and some random barcode
                                                    items:
                                                        type: object
                                                        properties:
                                                            techSize:
                                                                type: string
                                                                description: Product size (for example, L or 45)
                                                            wbSize:
                                                                type: string
                                                                description: Russian size
                                                            price:
                                                                type: integer
                                                                description: Price, ₽
                                                            skus:
                                                                type: array
                                                                items:
                                                                    type: string
                                                                description: Barcode. In case of empty `skus`, the barcode is generated automatically
                                                characteristics:
                                                    type: array
                                                    description: Product characteristics
                                                    items:
                                                        type: object
                                                        required:
                                                            - id
                                                            - value
                                                        properties:
                                                            id:
                                                                type: integer
                                                                description: Characteristic ID
                                                            value:
                                                                description: Characteristic value
                        examples:
                            creatingOneCard:
                                $ref: '#/components/examples/creatingOneCard'
                            creatingMergedCards:
                                $ref: '#/components/examples/creatingMergedCards'
                            creatingGroupOfIndividualCards:
                                $ref: '#/components/examples/creatingGroupOfIndividualCards'
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseCardCreate'
                            example:
                                data: null
                                error: false
                                errorText: ''
                                additionalErrors: {}
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError400'
                            examples:
                                InvalidRequestFormatContent:
                                    $ref: '#/components/examples/InvalidRequestFormatContent'
                                CardCreatedWithoutVendorCode:
                                    $ref: '#/components/examples/CardCreatedWithoutVendorCode'
                                CardsVendorCodeUsedInOtherCards:
                                    $ref: '#/components/examples/CardsVendorCodeUsedInOtherCards'
                                ThisCategoryDoesNotExist:
                                    $ref: '#/components/examples/ThisCategoryDoesNotExist'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '413':
                    description: The request body size exceeds the given limit
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    title:
                                        type: string
                                        description: Error title
                                    detail:
                                        type: string
                                        description: Error details
                                    code:
                                        type: string
                                        description: Internal error code
                                    requestId:
                                        type: string
                                        description: Unique request ID
                                    origin:
                                        type: string
                                        description: WB internal service ID
                                    status:
                                        type: number
                                        description: HTTP status code
                                    statusText:
                                        type: string
                                        description: Text of the HTTP status code
                            example:
                                title: request body too long
                                detail: https://openapi.wildberries.ru/content/api/ru/
                                code: 71d3de1b-001e-488f-bbf5-55c31254fbeb
                                requestId: MN8usr6RfrzWHZfucSvNgb
                                origin: s2s-api-auth-content
                                status: 413
                                statusText: Request Entity Too Large
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v2/cards/upload/add:
        servers:
            - url: https://content-api.wildberries.ru
        post:
            tags:
                - Creating Product Cards
            summary: Create product cards with merge
            description: "The method creates new product cards by merging them with existing ones.\n\nThe dimensions of the products can only be specified in `centimeters`, and the weight of packed products must be specified in `kilograms`.\n\nYou can not edit or delete barcodes but you can add new ones. You have not to send `photos`, `video` and `tags` and can not edit them.\n\nIf this method response is Success (200) but product card was not updated, check errors using [list of failed nomenclature with errors](/openapi/work-with-products#tag/Nomenclatures/paths/~1content~1v2~1cards~1error~1list/get).\n\nWith one request you can edit maximum 3000\_nomenclatures (`nmID`). Maximum request size is 10 Mb\n\n<div class=\"description_limit\">\n<a href=\"/openapi/api-information#tag/Introduction/Rate-Limits\">Request limit</a> per one seller's account:\n\n| Period | Limit | Interval | Burst |\n| --- | --- | --- | --- |\n| 1 minute | 10 requests | 6 seconds | 5 requests |\n</div>\n"
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                imtID:
                                    type: integer
                                    description: |
                                        `imtID` of product card, to which the product card added
                                cardsToAdd:
                                    description: The structure of the added product card
                                    type: array
                                    items:
                                        type: object
                                        required:
                                            - vendorCode
                                        properties:
                                            brand:
                                                type: string
                                                description: Brand
                                            vendorCode:
                                                type: string
                                                description: Supplier's article
                                            title:
                                                type: string
                                                description: Product title
                                                maxLength: 60
                                            description:
                                                type: string
                                                description: |
                                                    Product description<br>
                                                    The maximum number of characters depends on the product category<br>
                                                    Standard - 2000, minimum - 1000, maximum - 5000<br>
                                                    More details about description rules in **Product card filling rules** in [Instructions](https://seller.wildberries.ru/help-center/article/A-113#описание) category of sellers portal
                                            dimensions:
                                                description: |
                                                    Dimensions and weight of packed product in `centimeters` and `kilograms`<br>
                                                    In case of empty `dimensions`, they are generated automatically with zero values
                                                type: object
                                                properties:
                                                    length:
                                                        type: integer
                                                        description: Length, cm
                                                    width:
                                                        type: integer
                                                        description: Width, cm
                                                    height:
                                                        type: integer
                                                        description: Height, cm
                                                    weightBrutto:
                                                        type: number
                                                        description: Weight, kg<br>Number of decimal places <=3
                                            sizes:
                                                type: array
                                                description: |
                                                    Product sizes<br>
                                                    If the product has sizes but you send empty parameter, it is generated automatically with values: `techSize` = "A", `wbSize` = "1" and some random barcode
                                                items:
                                                    type: object
                                                    properties:
                                                        techSize:
                                                            type: string
                                                            description: Product size (for example, L or 45)
                                                        wbSize:
                                                            type: string
                                                            description: Russian size
                                                        price:
                                                            type: integer
                                                            description: Price, ₽
                                                        skus:
                                                            type: array
                                                            items:
                                                                type: string
                                                            description: Barcode. In case of empty `skus`, the barcode is generated automatically
                                            characteristics:
                                                type: array
                                                description: Product characteristics
                                                items:
                                                    type: object
                                                    required:
                                                        - id
                                                        - value
                                                    properties:
                                                        id:
                                                            type: integer
                                                            description: Characteristic ID
                                                        value:
                                                            description: Characteristic value
                        example:
                            imtID: 987654321
                            cardsToAdd:
                                - vendorCode: myVariant1
                                  title: Наименование товара
                                  description: Описание товара
                                  brand: Бренд
                                  dimensions:
                                      length: 9
                                      width: 6
                                      height: 3
                                      weightBrutto: 0.893
                                  characteristics:
                                      - id: 12
                                        value:
                                            - Russian flag
                                      - id: 25471
                                        value: 1300
                                      - id: 14177449
                                        value:
                                            - blue
                                  sizes:
                                      - skus:
                                            - '12345678'
                                - vendorCode: myVariant2
                                  title: Наименование товара
                                  description: Описание товаров
                                  brand: Бренд
                                  dimensions:
                                      length: 8
                                      width: 8
                                      height: 8
                                      weightBrutto: 1.04
                                  characteristics:
                                      - id: 12
                                        value:
                                            - Russian flag
                                      - id: 25471
                                        value: 1300
                                      - id: 14177449
                                        value:
                                            - blue
                                  sizes:
                                      - skus:
                                            - '222222222222'
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseCardCreate'
                            example:
                                data: null
                                error: false
                                errorText: ''
                                additionalErrors: {}
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseBodyContentError400'
                            examples:
                                InvalidRequestFormatContent:
                                    $ref: '#/components/examples/InvalidRequestFormatContent'
                                CardCreatedWithoutVendorCode:
                                    $ref: '#/components/examples/CardCreatedWithoutVendorCode'
                                CardsVendorCodeUsedInOtherCards:
                                    $ref: '#/components/examples/CardsVendorCodeUsedInOtherCards'
                                ThisCategoryDoesNotExist:
                                    $ref: '#/components/examples/ThisCategoryDoesNotExist'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '413':
                    description: The request body size exceeds the given limit
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    title:
                                        type: string
                                        description: Error title
                                    detail:
                                        type: string
                                        description: Error details
                                    code:
                                        type: string
                                        description: Internal error code
                                    requestId:
                                        type: string
                                        description: Unique request ID
                                    origin:
                                        type: string
                                        description: WB internal service ID
                                    status:
                                        type: number
                                        description: HTTP status code
                                    statusText:
                                        type: string
                                        description: Text of the HTTP status code
                            example:
                                title: request body too long
                                detail: https://openapi.wildberries.ru/content/api/ru/
                                code: 71d3de1b-001e-488f-bbf5-55c31254fbeb
                                requestId: MN8usr6RfrzWHZfucSvNgb
                                origin: s2s-api-auth-content
                                status: 413
                                statusText: Request Entity Too Large
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v3/media/file:
        servers:
            - url: https://content-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            summary: Upload media file
            description: "Uploads and adds one media file for the product card.\n\nRequirements for images:\n\n  * maximum images for\_each product card \_— 30,\n  * minimal resolution – 700\_×\_900 pixels,\n  * maximum size\_— 32\_МB,\n  * minimal quality\_— 65%,\n  * formats\_— JPG, PNG, BMP, GIF (static), WebP.\n\nRequirements for video:\n\n  * maximum one video for\_each product card\n  * maximum size\_— 50\_MB\n  * formats\_— MOV, MP4\n\n<div class=\"description_limit\">\n<a href=\"/openapi/api-information#tag/Introduction/Rate-Limits\">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:\n\n| Period | Limit | Interval | Burst |\n| --- | --- | --- | --- |\n| 1 minute | 100 requests | 600 milliseconds | 5 requests |\n\nExceptions are the methods:\n<ul>\n    <li><a href=\"/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post\">creating product cards</a></li>\n    <li><a href=\"/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post\">creating product cards with merge</a></li>\n    <li><a href=\"/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post\">editing product cards</a></li>\n</ul>\n</div>\n"
            tags:
                - Media Files
            parameters:
                - name: X-Nm-Id
                  in: header
                  description: Wildberries article
                  schema:
                      type: string
                      example: '213864079'
                  required: true
                - name: X-Photo-Number
                  in: header
                  description: "Number of media file, starting from\_`1`. To add the video set `1`.\n\nTo add the image to the uploaded ones, set file the number more then number of uploaded files.\n"
                  schema:
                      type: integer
                      example: 2
                  required: true
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                uploadfile:
                                    type: string
                                    format: binary
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                    error:
                                        description: Error flag
                                        type: boolean
                                    errorText:
                                        description: Error description
                                        type: string
                                    additionalErrors:
                                        nullable: true
                                        description: Additional errors
                                        type: object
                            example:
                                data: {}
                                error: false
                                errorText: ''
                                additionalErrors: null
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/mediaErrors'
                        plain/text:
                            example: Invalid 'boundary' for 'multipart/form-data' request
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/mediaErrors'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /content/v3/media/save:
        servers:
            - url: https://content-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            summary: Upload media files via links
            description: "The method uploads a set of media files to a product card by specifying links in the request.\n\n<div class=\"description_important\">\n  New media files (<code>data</code>) replace old ones (<code>mediaFiles</code>). To add new files, set links both to\_new and old files.\n</div>\n\nRequirements for images:\n\n  * maximum images for\_each product card\_— 30,\n  * minimal resolution – 700\_×\_900 pixels,\n  * maximum size\_— 32\_MB,\n  * minimal quality\_— 65%,\n  * formats\_— JPG, PNG, BMP, GIF (static), WebP.\n\n\nRequirements for video:\n\n  * maximum one video for\_each product card,\n  * maximum size\_— 50\_MB,\n  * formats\_— MOV, MP4.\n\n\nIf one or several images or a video do not meet the requirements, no images and a video will be uploaded even if you have the success response\_(200)\n\n<div class=\"description_limit\">\n<a href=\"/openapi/api-information#tag/Introduction/Rate-Limits\">Request limit</a> per one seller's account for all methods in the <strong>Content</strong> category:\n\n| Period | Limit | Interval | Burst |\n| --- | --- | --- | --- |\n| 1 minute | 100 requests | 600 milliseconds | 5 requests |\n\nExceptions are the methods:\n<ul>\n    <li><a href=\"/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload/post\">creating product cards</a></li>\n    <li><a href=\"/openapi/work-with-products#tag/Creating-Product-Cards/paths/~1content~1v2~1cards~1upload~1add/post\">creating product cards with merge</a></li>\n    <li><a href=\"/openapi/work-with-products#tag/Product-Cards/paths/~1content~1v2~1cards~1update/post\">editing product cards</a></li>\n</ul>\n</div>\n"
            tags:
                - Media Files
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nmId:
                                    description: Wildberries article
                                    type: integer
                                data:
                                    description: Links to images in the order that they are on the card, and a video at any position of the array
                                    type: array
                                    items:
                                        type: string
                        example:
                            nmId: 213864079
                            data:
                                - https://basket-stage-02.dasec.ru/vol669/part66964/66964260/images/big/2.jpg
                                - https://sample-videos.com/video321/mp4/720/big_buck_bunny_720p_mb.mp4
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                    error:
                                        description: Error flag
                                        type: boolean
                                    errorText:
                                        description: Error description
                                        type: string
                                    additionalErrors:
                                        nullable: true
                                        description: Additional errors
                                        type: object
                            example:
                                data: {}
                                error: false
                                errorText: ''
                                additionalErrors: null
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/mediaErrors'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/mediaErrors'
                '409':
                    description: Error saving some of the links
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/mediaErrors'
                '422':
                    description: The parameter nmId is missing
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/mediaErrors'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v2/upload/task:
        servers:
            - url: https://discounts-prices-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            tags:
                - Prices and Discounts
            summary: Set prices and discounts
            description: |
                Sets prices and discounts

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Prices and Discounts</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 6 seconds | 10 requests | 600 milliseconds | 5 requests |

                </div>
            requestBody:
                $ref: '#/components/requestBodies/SupplierTaskRequest'
            responses:
                '200':
                    $ref: '#/components/responses/SuccessTaskResponse'
                '208':
                    $ref: '#/components/responses/Responses208'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseError'
                            examples:
                                UploadLimitExceeded:
                                    $ref: '#/components/examples/UploadLimitExceeded'
                                DuplicateItemNos:
                                    $ref: '#/components/examples/DuplicateItemNos'
                                TheSpecifiedPricesAndDiscountsAreAlreadySet:
                                    $ref: '#/components/examples/TheSpecifiedPricesAndDiscountsAreAlreadySet'
                                InvalidDataFormat:
                                    $ref: '#/components/examples/InvalidDataFormat'
                                PriceShouldBeAWholeNumber:
                                    $ref: '#/components/examples/PriceShouldBeAWholeNumber'
                                InvalidPriceValue:
                                    $ref: '#/components/examples/InvalidPriceValue'
                                InvalidDiscountValue:
                                    $ref: '#/components/examples/InvalidDiscountValue'
                                InvalidItemNo:
                                    $ref: '#/components/examples/InvalidItemNo'
                                PriceAndDiscountNotSpecified:
                                    $ref: '#/components/examples/PriceAndDiscountNotSpecified'
                                EmptyData:
                                    $ref: '#/components/examples/EmptyData'
                                AllItemNosAreSpecifiedIncorrectlyOrPricesAndDiscounts:
                                    $ref: '#/components/examples/AllItemNosAreSpecifiedIncorrectlyOrPricesAndDiscounts'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '422':
                    description: Unexpected result
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseError'
                            examples:
                                UnexpectedResult:
                                    $ref: '#/components/examples/UnexpectedResult'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v2/upload/task/size:
        servers:
            - url: https://discounts-prices-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            tags:
                - Prices and Discounts
            summary: Sets size prices
            description: |
                Sets different prices for different sizes.

                Only for products from categories where size price setting is available. For these products `editableSizePrice: true` in [Get product sizes](/openapi/work-with-products#tag/Prices-and-Discounts/paths/~1api~1v2~1list~1goods~1size~1nm/get) response.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Prices and Discounts</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 6 seconds | 10 requests | 600 milliseconds | 5 requests |

                </div>
            requestBody:
                $ref: '#/components/requestBodies/SupplierTaskRequestSize'
            responses:
                '200':
                    $ref: '#/components/responses/SuccessTaskResponse'
                '208':
                    $ref: '#/components/responses/Responses208'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseError'
                            examples:
                                UploadLimitExceeded:
                                    $ref: '#/components/examples/UploadLimitExceeded'
                                DuplicateItemNos:
                                    $ref: '#/components/examples/DuplicateItemNos'
                                DuplicateSizeIDs:
                                    $ref: '#/components/examples/DuplicateSizeIDs'
                                TheSpecifiedPricesAreAlreadySet:
                                    $ref: '#/components/examples/TheSpecifiedPricesAreAlreadySet'
                                InvalidDataFormat:
                                    $ref: '#/components/examples/InvalidDataFormat'
                                PriceShouldBeAWholeNumber:
                                    $ref: '#/components/examples/PriceShouldBeAWholeNumber'
                                InvalidPriceValue:
                                    $ref: '#/components/examples/InvalidPriceValue'
                                InvalidItemNo:
                                    $ref: '#/components/examples/InvalidItemNo'
                                InvalidSize:
                                    $ref: '#/components/examples/InvalidSize'
                                PriceNotSpecified:
                                    $ref: '#/components/examples/PriceNotSpecified'
                                EmptyData:
                                    $ref: '#/components/examples/EmptyData'
                                AllItemNosAreSpecifiedIncorrectlyOrPrices:
                                    $ref: '#/components/examples/AllItemNosAreSpecifiedIncorrectlyOrPrices'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '422':
                    description: Unexpected result
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseError'
                            examples:
                                UnexpectedResult:
                                    $ref: '#/components/examples/UnexpectedResult'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v2/upload/task/club-discount:
        servers:
            - url: https://discounts-prices-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            tags:
                - Prices and Discounts
            summary: Set WB Club discounts
            description: |
                Sets WB Club subscription discounts

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Prices and Discounts</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 6 seconds | 10 requests | 600 milliseconds | 5 requests |

                </div>
            requestBody:
                $ref: '#/components/requestBodies/SupplierTaskRequestClubDisc'
            responses:
                '200':
                    $ref: '#/components/responses/SuccessTaskResponse'
                '208':
                    $ref: '#/components/responses/Responses208'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseError'
                            examples:
                                CheckTheWBClubDiscount:
                                    $ref: '#/components/examples/CheckTheWBClubDiscount'
                                DiscountsAreTheSameAsThoseAlreadySet:
                                    $ref: '#/components/examples/DiscountsAreTheSameAsThoseAlreadySet'
                                AllItemNosAreSpecifiedIncorrectlyOrDiscounts:
                                    $ref: '#/components/examples/AllItemNosAreSpecifiedIncorrectlyOrDiscounts'
                                InvalidDiscountValue:
                                    $ref: '#/components/examples/InvalidDiscountValue'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '422':
                    description: Unexpected result
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseError'
                            examples:
                                UnexpectedResult:
                                    $ref: '#/components/examples/UnexpectedResult'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v2/history/tasks:
        servers:
            - url: https://discounts-prices-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            tags:
                - Prices and Discounts
            summary: Processed upload state
            description: |
                Returns the processed upload data

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Prices and Discounts</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 6 seconds | 10 requests | 600 milliseconds | 5 requests |

                </div>
            parameters:
                - $ref: '#/components/parameters/uploadID'
            responses:
                '200':
                    $ref: '#/components/responses/ResponseTaskHistory'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        nullable: true
                                    error:
                                        type: boolean
                                        example: true
                                    errorText:
                                        type: string
                                        example: Invalid request parameters
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v2/history/goods/task:
        servers:
            - url: https://discounts-prices-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            tags:
                - Prices and Discounts
            summary: Processed upload details
            description: |
                Returns products in processed upload including product errors

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Prices and Discounts</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 6 seconds | 10 requests | 600 milliseconds | 5 requests |

                </div>
            parameters:
                - $ref: '#/components/parameters/limit'
                - $ref: '#/components/parameters/offset'
                - $ref: '#/components/parameters/uploadID'
            responses:
                '200':
                    $ref: '#/components/responses/ResponseGoodHistories'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        nullable: true
                                    error:
                                        type: boolean
                                        example: true
                                    errorText:
                                        type: string
                                        example: Invalid request parameters
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v2/buffer/tasks:
        servers:
            - url: https://discounts-prices-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            tags:
                - Prices and Discounts
            summary: Unprocessed upload state
            description: |
                Returns the processing upload data

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Prices and Discounts</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 6 seconds | 10 requests | 600 milliseconds | 5 requests |

                </div>
            parameters:
                - $ref: '#/components/parameters/uploadID'
            responses:
                '200':
                    $ref: '#/components/responses/ResponseTaskBuffer'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        nullable: true
                                    error:
                                        type: boolean
                                        example: true
                                    errorText:
                                        type: string
                                        example: Invalid request parameters
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v2/buffer/goods/task:
        servers:
            - url: https://discounts-prices-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            tags:
                - Prices and Discounts
            summary: Unprocessed upload details
            description: |
                Returns products in processing upload including product errors

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Prices and Discounts</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 6 seconds | 10 requests | 600 milliseconds | 5 requests |

                </div>
            parameters:
                - $ref: '#/components/parameters/limit'
                - $ref: '#/components/parameters/offset'
                - $ref: '#/components/parameters/uploadID'
            responses:
                '200':
                    $ref: '#/components/responses/ResponseGoodBufferHistories'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        nullable: true
                                    error:
                                        type: boolean
                                        example: true
                                    errorText:
                                        type: string
                                        example: Invalid request parameters
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v2/list/goods/filter:
        servers:
            - url: https://discounts-prices-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            tags:
                - Prices and Discounts
            summary: Get products with prices
            description: |
                Returns product data by its article.<br> To get data for all products, do not set the article, set `limit=1000`, and use the `offset` field to set the data offset. The offset should be calculated using the formula: `offset` plus `limit` from the previous request. Repeat the request until you receive a response with an empty array.<br> To get data for the size of the product, use [a separate method](/openapi/work-with-products#tag/Prices-and-Discounts/paths/~1api~1v2~1list~1goods~1size~1nm/get)

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Prices and Discounts</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 6 seconds | 10 requests | 600 milliseconds | 5 requests |

                </div>
            parameters:
                - $ref: '#/components/parameters/limit'
                - $ref: '#/components/parameters/offset'
                - $ref: '#/components/parameters/filterNmID'
            responses:
                '200':
                    $ref: '#/components/responses/ResponseGoodsLists'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseError'
                            examples:
                                SortError:
                                    $ref: '#/components/examples/SortError'
                                InvalidRequestParameters:
                                    $ref: '#/components/examples/InvalidRequestParameters'
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v2/list/goods/size/nm:
        servers:
            - url: https://discounts-prices-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            tags:
                - Prices and Discounts
            summary: Get product sizes with prices
            description: |
                Returns sizes data for the product. Only for products from categories where size price setting is available. For these products `editableSizePrice: true`

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Prices and Discounts</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 6 seconds | 10 requests | 600 milliseconds | 5 requests |

                </div>
            parameters:
                - $ref: '#/components/parameters/limit'
                - $ref: '#/components/parameters/offset'
                - $ref: '#/components/parameters/nmID'
            responses:
                '200':
                    $ref: '#/components/responses/ResponseSizeLists'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseError'
                            examples:
                                InvalidRequestParameters:
                                    $ref: '#/components/examples/InvalidRequestParameters'
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v2/quarantine/goods:
        servers:
            - url: https://discounts-prices-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            tags:
                - Prices and Discounts
            summary: Get products in quarantine
            description: |
                Returns information about products in quarantine.
                <br><br>
                If the product new price with discount will be minimum 3 times less than the old price, the product will be placed [in quarantine](https://seller.wildberries.ru/discount-and-prices/quarantine) and will be sold at the old price. An error about this will be in [upload states](/openapi/work-with-products#tag/Prices-and-Discounts/paths/~1api~1v2~1history~1tasks/get) method response.
                <br><br>
                You can change price or discount via API or release product from quarantine [in personal account](https://seller.wildberries.ru/discount-and-prices/quarantine).
                <br><br>
                For products with [size-based pricing](/openapi/work-with-products#tag/Prices-and-Discounts/paths/~1api~1v2~1upload~1task~1size/post), quarantine does not apply

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Prices and Discounts</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 6 seconds | 10 requests | 600 milliseconds | 5 requests |

                </div>
            parameters:
                - $ref: '#/components/parameters/limit'
                - $ref: '#/components/parameters/offset'
            responses:
                '200':
                    $ref: '#/components/responses/ResponseQuarantineGoods'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseError'
                            examples:
                                InvalidRequestParameters:
                                    $ref: '#/components/examples/InvalidRequestParameters'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '422':
                    description: Unexpected result
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseError'
                            examples:
                                UnexpectedResult:
                                    $ref: '#/components/examples/UnexpectedResult'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/stocks/{warehouseId}:
        servers:
            - url: https://marketplace-api.wildberries.ru
        put:
            security:
                - HeaderApiKey: []
            tags:
                - Inventory
            summary: Update inventory
            description: |
                Updates product inventory

                <div class="description_important">
                  The names of the query parameters are not validated. If invalid names are sent, the response will be successful(204), but the remaining amounts will not be updated.
                </div>

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Warehouse'
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - stocks
                            properties:
                                stocks:
                                    type: array
                                    minItems: 1
                                    maxItems: 1000
                                    description: SKU array
                                    items:
                                        type: object
                                        properties:
                                            sku:
                                                type: string
                                                description: SKU
                                                example: SkuTest123
                                            amount:
                                                type: integer
                                                maximum: 100000
                                                description: Amount
                                                example: 10
            responses:
                '204':
                    description: Updated
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectRequestBody:
                                    $ref: '#/components/examples/IncorrectRequestBody'
                                IncorrectRequest:
                                    $ref: '#/components/examples/IncorrectRequest'
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                '406':
                    $ref: '#/components/responses/StatusNotAcceptable'
                '409':
                    description: Error updating inventory
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StocksWarehouseError'
                            examples:
                                SubjectDBSRestriction:
                                    $ref: '#/components/examples/SubjectDBSRestriction'
                                SubjectFBSRestriction:
                                    $ref: '#/components/examples/SubjectFBSRestriction'
                                UploadDataLimit:
                                    $ref: '#/components/examples/UploadDataLimit'
                                CargoWarehouseRestrictionMGT:
                                    $ref: '#/components/examples/CargoWarehouseRestrictionMGT'
                                CargoWarehouseRestrictionSGT:
                                    $ref: '#/components/examples/CargoWarehouseRestrictionSGT'
                                CargoWarehouseRestrictionSGTKGTPlus:
                                    $ref: '#/components/examples/CargoWarehouseRestrictionSGTKGTPlus'
                                CargoWarehouseRestrictionKGTPlus:
                                    $ref: '#/components/examples/CargoWarehouseRestrictionKGTPlus'
                                NotFound:
                                    $ref: '#/components/examples/NotFound'
                                StoreIsProcessing:
                                    $ref: '#/components/examples/StoreIsProcessing1'
                'Response429':
                    $ref: '#/components/responses/Response429'
        delete:
            security:
                - HeaderApiKey: []
            tags:
                - Inventory
            summary: Delete inventory
            description: |
                Deletes product inventory

                <div class="description_important">
                  <strong>This action is irreversible</strong>. Deleted stock will require re-uploading to continue sales
                </div>

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Warehouse'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                skus:
                                    type: array
                                    nullable: false
                                    minItems: 1
                                    maxItems: 1000
                                    description: SKUs array
                                    items:
                                        type: string
                                        nullable: false
                                        example: BarcodeTest123
            responses:
                '204':
                    description: Deleted
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectRequestBody:
                                    $ref: '#/components/examples/IncorrectRequestBody'
                                IncorrectRequest:
                                    $ref: '#/components/examples/IncorrectRequest'
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    description: Not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: Not Found
                '409':
                    description: Error deleting inventory
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                StoreIsProcessing:
                                    $ref: '#/components/examples/StoreIsProcessing'
                'Response429':
                    $ref: '#/components/responses/Response429'
        post:
            security:
                - HeaderApiKey: []
            tags:
                - Inventory
            summary: Get inventory
            description: |
                Returns product inventory

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Warehouse'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            nullable: false
                            properties:
                                skus:
                                    type: array
                                    description: SKUs array
                                    minItems: 1
                                    maxItems: 1000
                                    items:
                                        type: string
                                        example: BarcodeTest123
                            required:
                                - skus
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    stocks:
                                        type: array
                                        nullable: false
                                        items:
                                            type: object
                                            properties:
                                                sku:
                                                    type: string
                                                    nullable: false
                                                    description: SKU
                                                    example: SkuTest123
                                                amount:
                                                    type: integer
                                                    nullable: false
                                                    description: Amount
                                                    example: 10
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectRequestBody:
                                    $ref: '#/components/examples/IncorrectRequestBody'
                                IncorrectRequest:
                                    $ref: '#/components/examples/IncorrectRequest'
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/offices:
        servers:
            - url: https://marketplace-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            tags:
                - Seller Warehouses
            summary: Get offices
            description: |
                Returns a list of all offices to link to seller warehouse.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                nullable: false
                                description: Offices list
                                items:
                                    $ref: '#/components/schemas/Office'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/warehouses:
        servers:
            - url: https://marketplace-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            tags:
                - Seller Warehouses
            summary: Get warehouses
            description: |
                Returns a list of all seller's warehouses

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                nullable: false
                                description: Warehouses list
                                items:
                                    $ref: '#/components/schemas/Warehouse'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                'Response429':
                    $ref: '#/components/responses/Response429'
        post:
            security:
                - HeaderApiKey: []
            tags:
                - Seller Warehouses
            summary: Create warehouse
            description: |
                Creates a seller's warehouse. You cannot link an office that is already in use.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    nullable: false
                                    minLength: 1
                                    maxLength: 200
                                    description: Supplier's warehouse name
                                    example: Koledino 2
                                officeId:
                                    type: integer
                                    nullable: false
                                    minimum: 1
                                    description: Office ID
                                    example: 15
                            required:
                                - name
                                - officeId
            responses:
                '201':
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: integer
                                        nullable: false
                                        description: Warehouse ID
                                        example: 2
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectRequestBody:
                                    $ref: '#/components/examples/IncorrectRequestBody'
                                WarehouseNameInvalid:
                                    $ref: '#/components/examples/WarehouseNameInvalid'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                '409':
                    description: Error creating a new warehouse
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/warehouses/{warehouseId}:
        servers:
            - url: https://marketplace-api.wildberries.ru
        put:
            security:
                - HeaderApiKey: []
            tags:
                - Seller Warehouses
            summary: Update warehouse
            description: |
                Updates the seller's warehouse details. Changing the linked office is allowed once per day. You cannot link an office that is already in use

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Warehouse'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    nullable: false
                                    minLength: 1
                                    maxLength: 200
                                    description: Supplier's warehouse name
                                    example: Koledino
                                officeId:
                                    type: integer
                                    nullable: false
                                    minimum: 1
                                    description: Office ID
                                    example: 15
                            required:
                                - name
                                - officeId
            responses:
                '204':
                    description: Updated
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectRequestBody:
                                    $ref: '#/components/examples/IncorrectRequestBody'
                                WarehouseNameInvalid:
                                    $ref: '#/components/examples/WarehouseNameInvalid'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                '409':
                    description: Error updating a warehouse
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                'Response429':
                    $ref: '#/components/responses/Response429'
        delete:
            security:
                - HeaderApiKey: []
            tags:
                - Seller Warehouses
            summary: Delete warehouse
            description: |
                Deletes the supplier's warehouse.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Warehouse'
            responses:
                '204':
                    description: Deleted
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/passes/offices:
        servers:
            - url: https://marketplace-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            tags:
                - Passes
            summary: Get offices for pass
            description: |
                Returns a list of offices that require a pass.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                nullable: false
                                description: Offices list
                                items:
                                    $ref: '#/components/schemas/PassOffice'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/passes:
        servers:
            - url: https://marketplace-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            tags:
                - Passes
            summary: Get passes
            description: |
                Returns a list of all seller's passes.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                nullable: false
                                description: Passes list
                                items:
                                    $ref: '#/components/schemas/Pass'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                'Response429':
                    $ref: '#/components/responses/Response429'
        post:
            security:
                - HeaderApiKey: []
            tags:
                - Passes
            summary: Create pass
            description: |
                Creates a supplier pass. <br> The pass is valid for 48 hours from the time of creation.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 10 minutes | 1 request | 10 minutes | 1 request |
                </div>
            requestBody:
                required: true
                description: The total length of the full name is limited from 6 to 100 characters. The car number can contain only letters and numbers.
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                firstName:
                                    type: string
                                    nullable: false
                                    minLength: 1
                                    description: First name
                                    example: Alex
                                lastName:
                                    type: string
                                    nullable: false
                                    minLength: 1
                                    description: Last name
                                    example: Petrov
                                carModel:
                                    type: string
                                    nullable: false
                                    minLength: 1
                                    maxLength: 100
                                    description: Car model
                                    example: Lamborghini
                                carNumber:
                                    type: string
                                    nullable: false
                                    minLength: 6
                                    maxLength: 9
                                    description: Car number
                                    example: A456BC123
                                officeId:
                                    type: integer
                                    format: int64
                                    nullable: false
                                    minimum: 1
                                    description: Office ID
                                    example: 15
                            required:
                                - firstName
                                - lastName
                                - carModel
                                - carNumber
                                - officeId
            responses:
                '201':
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: integer
                                        nullable: false
                                        description: Pass ID
                                        example: 2
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectRequestBody:
                                    $ref: '#/components/examples/IncorrectRequestBody'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/passes/{passId}:
        servers:
            - url: https://marketplace-api.wildberries.ru
        put:
            security:
                - HeaderApiKey: []
            tags:
                - Passes
            summary: Update pass
            description: |
                Updates the seller's pass detail

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Pass'
            requestBody:
                required: true
                description: |
                    The total length of the full name is limited from 6 to 100 characters. The car number can contain only letters and numbers.
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                firstName:
                                    type: string
                                    nullable: false
                                    minLength: 1
                                    description: First name
                                    example: Alex
                                lastName:
                                    type: string
                                    nullable: false
                                    minLength: 1
                                    description: Last name
                                    example: Petrov
                                carModel:
                                    type: string
                                    nullable: false
                                    minLength: 1
                                    maxLength: 100
                                    description: Car model
                                    example: Lamborghini
                                carNumber:
                                    type: string
                                    nullable: false
                                    minLength: 6
                                    maxLength: 9
                                    description: Car number
                                    example: A456BC123
                                officeId:
                                    type: integer
                                    format: int64
                                    nullable: false
                                    minimum: 1
                                    description: Office ID
                                    example: 15
                            required:
                                - firstName
                                - lastName
                                - carModel
                                - carNumber
                                - officeId
            responses:
                '204':
                    description: Updated
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectRequestBody:
                                    $ref: '#/components/examples/IncorrectRequestBody'
                                WarehouseNameInvalid:
                                    $ref: '#/components/examples/WarehouseNameInvalid'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                'Response429':
                    $ref: '#/components/responses/Response429'
        delete:
            security:
                - HeaderApiKey: []
            tags:
                - Passes
            summary: Delete the pass
            description: |
                Deletes the seller's pass

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Pass'
            responses:
                '204':
                    description: Deleted
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/orders/new:
        servers:
            - url: https://marketplace-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            tags:
                - Assembly Orders
            summary: Get new orders
            description: |
                Returns a list of all new orders

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                nullable: false
                                properties:
                                    orders:
                                        type: array
                                        nullable: false
                                        description: New orders list
                                        items:
                                            $ref: '#/components/schemas/OrderNew'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/orders:
        servers:
            - url: https://marketplace-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            tags:
                - Assembly Orders
            summary: Get orders
            description: |
                Returns orders information without current status. <br>You can get data for a specified period, maximum of 30 calendar days per request.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Limit'
                - $ref: '#/components/parameters/Next'
                - name: dateFrom
                  in: query
                  schema:
                      type: integer
                  description: |
                      Period start date in Unix timestamp format. By default date is 30 days before the request
                - name: dateTo
                  in: query
                  schema:
                      type: integer
                  description: Period end date in Unix timestamp format
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                nullable: false
                                properties:
                                    next:
                                        $ref: '#/components/schemas/Next'
                                    orders:
                                        type: array
                                        nullable: false
                                        items:
                                            $ref: '#/components/schemas/Order'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/orders/status:
        servers:
            - url: https://marketplace-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            tags:
                - Assembly Orders
            summary: Get orders statuses
            description: |
                Returns the statuses of orders from the request.

                `supplierStatus` is a status of an order. Its change is always triggered only by the supplier.<br>

                Possible values of `supplierStatus`:
                | Status    | Description              | How to move the order to this status |
                |-----------|--------------------------|---------------------------------------------|
                | `new`       | **New order**        |                                             |
                | `confirm`   | **In assembly** <br>For delivery by Wildberries `fbs` | [Add order to the supply](/openapi/orders-fbs#tag/Supplies-FBS/paths/~1api~1v3~1supplies~1%7BsupplyId%7D~1orders~1%7BorderId%7D/patch)
                | `complete`  | **In delivery** <br> For delivery by Wildberries `fbs` and by WB courier `wbgo` | For `fbs` — [transfer the supply to delivery](/openapi/orders-fbs#tag/Supplies-FBS/paths/~1api~1v3~1supplies~1%7BsupplyId%7D~1deliver/patch) <br> For `wbgo` — [transfer the order to delivery](/openapi/orders-fbs#tag/WB-Courier-Delivery-(DBW)/paths/~1api~1v3~1orders~1%7BorderId%7D~1assemble/patch) |
                | `cancel`   | **Canceled by seller** | [Cancel the order](/openapi/orders-fbs#tag/Assembly-Orders/paths/~1api~1v3~1orders~1%7BorderId%7D~1cancel/patch)
                | `receive`  | **Received by the buyer**<br> For WB courier `wbgo` | The status changes automatically |
                | `reject`   | **Buyer rejection upon receipt**<br>  For WB courier `wbgo` | The status changes automatically |

                `wbStatus` — is a status of an order on the Wildberries side.

                Possible values for this field are:
                - `waiting` — the supplier confirmed the order, and the Wildberries has not received it yet
                - `sorted` — the Wildberries warehouse sorted the order
                - `sold` — the order is sold
                - `canceled` — the supplier canceled the order
                - `canceled_by_client` — the buyer canceled the order upon receipt
                - `declined_by_client` — the buyer canceled the order in the first hour <br> Cancellation is available to the buyer in the first hour from the moment of order, if the order is not transferred to confirm status.
                - `defect` — cancellation of the order due to a defect
                - `ready_for_pickup` — the order came at pickup point and waiting for the client
                - `postponed_delivery` — courier delivery is postponed

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - orders
                            properties:
                                orders:
                                    type: array
                                    minItems: 1
                                    maxItems: 1000
                                    description: Order IDs
                                    items:
                                        type: integer
                                        format: int64
                                        example: 5632423
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    orders:
                                        type: array
                                        nullable: false
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: integer
                                                    format: int64
                                                    nullable: false
                                                    description: Order ID
                                                    example: 5632423
                                                supplierStatus:
                                                    type: string
                                                    nullable: false
                                                    description: Order status (set by the supplier)
                                                    enum:
                                                        - new
                                                        - confirm
                                                        - complete
                                                        - cancel
                                                    example: new
                                                wbStatus:
                                                    type: string
                                                    nullable: false
                                                    description: Order status (on the Wildberries side)
                                                    enum:
                                                        - waiting
                                                        - sorted
                                                        - sold
                                                        - canceled
                                                        - canceled_by_client
                                                        - declined_by_client
                                                        - defect
                                                        - ready_for_pickup
                                                        - postponed_delivery
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                                IncorrectRequestBody:
                                    $ref: '#/components/examples/IncorrectRequestBody'
                                IncorrectRequest:
                                    $ref: '#/components/examples/IncorrectRequest'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/supplies/orders/reshipment:
        servers:
            - url: https://marketplace-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            tags:
                - Assembly Orders
            summary: Get all orders for re-shipment
            description: |
                Returns all orders that require re-shipment

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    orders:
                                        description: Orders list
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                supplyID:
                                                    description: Supply ID
                                                orderID:
                                                    description: Order ID
                            example:
                                orders:
                                    - supplyID: WB-GI-1234567
                                      orderID: 5632423
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/orders/{orderId}/cancel:
        servers:
            - url: https://marketplace-api.wildberries.ru
        patch:
            security:
                - HeaderApiKey: []
            tags:
                - Assembly Orders
            summary: Cancel the order
            description: |
                Moves the order to `cancel` ("Canceled by the supplier") status.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Order'
            responses:
                '204':
                    description: Canceled
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                '409':
                    description: Error updating a status
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                StatusMismatch:
                                    $ref: '#/components/examples/StatusMismatch'
                                StatusChangeNotAllowed:
                                    $ref: '#/components/examples/StatusChangeNotAllowed'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/orders/stickers:
        servers:
            - url: https://marketplace-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            tags:
                - Assembly Orders
            summary: Get orders stickers
            description: |
                Returns a list of stickers according to the requested orders.
                You can request a sticker in `svg`, `zplv` (vertical), `zplh` (horizontal) and `png` formats.

                **Method limitations**:
                - You cannot request more than 100 stickers at a time (no more than 100 order IDs in a request).
                - The method returns stickers only for orders that are in assembly (in `confirm` status).
                - Available dimensions:
                  - 580x400 px, with parameters `width` = 58, `height` = 40
                  - 400x300 px, with parameters `width` = 40, `height` = 30

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - name: type
                  in: query
                  required: true
                  description: Sticker format
                  schema:
                      type: string
                      enum:
                          - svg
                          - zplv
                          - zplh
                          - png
                - name: width
                  in: query
                  required: true
                  description: Sticker width
                  schema:
                      type: integer
                      enum:
                          - 58
                          - 40
                - name: height
                  in: query
                  required: true
                  description: Sticker height
                  schema:
                      type: integer
                      enum:
                          - 40
                          - 30
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                orders:
                                    type: array
                                    minItems: 1
                                    maxItems: 100
                                    description: Order IDs
                                    items:
                                        type: integer
                                        format: int64
                                        example: 5346346
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    stickers:
                                        type: array
                                        nullable: false
                                        items:
                                            type: object
                                            properties:
                                                orderId:
                                                    type: integer
                                                    format: int64
                                                    nullable: false
                                                    description: Order ID
                                                    example: 5346346
                                                partA:
                                                    type: string
                                                    nullable: false
                                                    description: The first part of the sticker identifier (for printing the signature)
                                                    example: '231648'
                                                partB:
                                                    type: string
                                                    nullable: false
                                                    description: The second part of the sticker identifier (for printing the signature)
                                                    example: '9753'
                                                barcode:
                                                    type: string
                                                    nullable: false
                                                    description: The encoded value of the sticker
                                                    example: '!uKEtQZVx'
                                                file:
                                                    type: string
                                                    format: byte
                                                    nullable: false
                                                    description: Base64 encoded representation of the sticker in a requested format
                                                    example: PD94bWwgdmVyc2lvbj0iMS4wIj8+CjwhLS0gR2VuZXJhdGVkIGJ5IFNWR28gLS0+Cjxzdmcgd2lkdGg9IjQwMCIgaGVpZ2h0PSIzMDAiCiAgICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICAgIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIj4KPHJlY3QgeD0iMCIgeT0iMCIgd2lkdGg9IjQwMCIgaGVpZQiIGhlaWdodD0iMTcwIiBzdHlsZT0iZmlsbDpibGFjayIgLz4KPHJlY3QgeD0iMzE4IiB5PSIyMCIgd2lkdGg9IjYiIGhlaWdodD0iMTcwIiBzdHlsZT0iZmlsbDpibGFjayIgLz4KPHJlY3QgeD0iMzI2IiB5PSIyMCIgd2lkdGg9IjIiIGhlaWdodD0iMTcwIiBzdHlsZT0iZmlsbDpibGFjayIgLz4KPHJlY3QgeD0iMzMwIiB5PSIyMCIgd2lkdGg9IjQiIGhlaWdodD0iMTcwIiBzdHlsZT0iZmlsbDpibGFjayIgLz4KPHJlY3QgeD0iMjAiIHk9IjIwMCIgd2lkdGg9IjM1MCIgaGVpZ2h0PSI5MCIgc3R5bGU9ImZpbGw6YmxhY2siIC8+Cjx0ZXh0IHg9IjMwIiB5PSIyNDAiIHN0eWxlPSJmaWxsOndoaXRlO2ZvbnQtc2l6ZTozMHB0O3RleHQtYW5jaG9yOnN0YXJ0IiA+MjMxNjQ4PC90ZXh0Pgo8dGV4dCB4PSIzNTAiIHk9IjI3MCIgc3R5bGU9ImZpbGw6d2hpdGU7Zm9udC1zaXplOjUwcHQ7dGV4dC1hbmNob3I6ZW5kIiA+OTc1MzwvdGV4dD4KPC9zdmc+Cg==
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectRequestBody:
                                    $ref: '#/components/examples/IncorrectRequestBody'
                                IncorrectRequest:
                                    $ref: '#/components/examples/IncorrectRequest'
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/orders/{orderId}/meta:
        servers:
            - url: https://marketplace-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            tags:
                - Metadata
            summary: Get order metadata
            description: |
                Returns order metadata.
                <br><br>
                Possible metadata are:
                  - `imei` — [IMEI](/openapi/orders-fbs#tag/Metadata/paths/~1api~1v3~1orders~1%7BorderId%7D~1meta~1imei/put)
                  - `uin` — [UIN](/openapi/orders-fbs#tag/Metadata/paths/~1api~1v3~1orders~1%7BorderId%7D~1meta~1uin/put)
                  - `gtin` — [GTIN](/openapi/orders-fbs#tag/Metadata/paths/~1api~1v3~1orders~1%7BorderId%7D~1meta~1gtin/put)
                  - `sgtin` — [Data matrix code](/openapi/orders-fbs#tag/Metadata/paths/~1api~1v3~1orders~1%7BorderId%7D~1meta~1sgtin/put)
                  - `expiration` — [Expiration date](/openapi/orders-fbs#tag/Metadata/paths/~1api~1v3~1orders~1%7BorderId%7D~1meta~1expiration/put)

                  If any of the metadata objects are not returned in the response, it means that the assembly order cannot have such metadata, and they cannot be added

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Order'
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                nullable: false
                                properties:
                                    meta:
                                        $ref: '#/components/schemas/Meta'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                'Response429':
                    $ref: '#/components/responses/Response429'
        delete:
            security:
                - HeaderApiKey: []
            tags:
                - Metadata
            summary: Delete order metadata
            description: |
                Removes all order metadata values for the passed key.
                <br><br>
                Possible metadata are:
                  - `imei` — [IMEI](/openapi/orders-fbs#tag/Metadata/paths/~1api~1v3~1orders~1%7BorderId%7D~1meta~1imei/put)
                  - `uin` — [UIN](/openapi/orders-fbs#tag/Metadata/paths/~1api~1v3~1orders~1%7BorderId%7D~1meta~1uin/put)
                  - `gtin` — [GTIN](/openapi/orders-fbs#tag/Metadata/paths/~1api~1v3~1orders~1%7BorderId%7D~1meta~1gtin/put)
                  - `sgtin` — [Data matrix code](/openapi/orders-fbs#tag/Metadata/paths/~1api~1v3~1orders~1%7BorderId%7D~1meta~1sgtin/put)

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Order'
                - name: key
                  in: query
                  schema:
                      type: string
                  description: Name of the metadata to remove (`imei`, `uin`, `gtin`, `sgtin`)
            responses:
                '204':
                    description: Deleted
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectRequest:
                                    $ref: '#/components/examples/IncorrectRequest'
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '409':
                    description: Error deleting metadata
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                FailedToUpdateMeta:
                                    $ref: '#/components/examples/FailedToUpdateMeta'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/orders/{orderId}/meta/sgtin:
        servers:
            - url: https://marketplace-api.wildberries.ru
        put:
            security:
                - HeaderApiKey: []
            tags:
                - Metadata
            summary: Add Data Matrix code to the order
            description: |
                The method allows attaching a Data Matrix code [Chestny ZNAK](https://chestnyznak.ru/en) to an order.

                Attaching a Data Matrix code to an order is only possible if this field is returned in the response of the method [to get the metadata of the order](/openapi/orders-fbs#tag/Metadata/paths/~1api~1v3~1orders~1%7BorderId%7D~1meta/get), and the order is in the confirm status.

                The loaded Data Matrix code can be retrieved through the method [to get the metadata of the order](/openapi/orders-fbs#tag/Metadata/paths/~1api~1v3~1orders~1%7BorderId%7D~1meta/get)

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods for <strong>adding metadata</strong>:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 1000 requests | 60 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Order'
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                sgtins:
                                    type: array
                                    description: List of Data Matrix codes.
                                    minItems: 1
                                    maxItems: 24
                                    items:
                                        type: string
                                        description: Label code on the package. From 16 to 135 characters.
                                        example: '1234567890123456'
            responses:
                '204':
                    description: Sent
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectRequestBody:
                                    $ref: '#/components/examples/IncorrectRequestBody'
                                IncorrectRequest:
                                    $ref: '#/components/examples/IncorrectRequest'
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                '409':
                    description: Error adding a Data Matrix code
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                FailedToUpdateMeta:
                                    $ref: '#/components/examples/FailedToUpdateMeta'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/orders/{orderId}/meta/uin:
        servers:
            - url: https://marketplace-api.wildberries.ru
        put:
            security:
                - HeaderApiKey: []
            tags:
                - Metadata
            summary: Add UIN (unique identification number) to the order
            description: |
                Sets the UIN for the order. The order can only have one UIN. You can add the code only for orders in the `confirm` status.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods for <strong>adding metadata</strong>:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 1000 requests | 60 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Order'
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                uin:
                                    type: string
                                    minLength: 16
                                    maxLength: 16
                                    description: UIN
                                    example: '1234567890123456'
                            required:
                                - uin
            responses:
                '204':
                    description: Updated
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectRequestBody:
                                    $ref: '#/components/examples/IncorrectRequestBody'
                                IncorrectRequest:
                                    $ref: '#/components/examples/IncorrectRequest'
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '409':
                    description: Error updating metadata
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                FailedToUpdateMeta:
                                    $ref: '#/components/examples/FailedToUpdateMeta'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/orders/{orderId}/meta/imei:
        servers:
            - url: https://marketplace-api.wildberries.ru
        put:
            security:
                - HeaderApiKey: []
            tags:
                - Metadata
            summary: Add IMEI to the order
            description: |
                Sets the IMEI for the order.
                <br><br>
                The order can have only one IMEI. If a device has two IMEIs — <strong>IMEI and IMEI2</strong> or <strong>IMEI1 and IMEI2</strong> — you should only specify <strong>IMEI</strong> or <strong>IMEI1</strong>. You don't need to specify <strong>IMEI2</strong>.
                <br><br>
                You can add the code only for orders in the `confirm` status.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods for <strong>adding metadata</strong>:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 1000 requests | 60 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Order'
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                imei:
                                    type: string
                                    minLength: 15
                                    maxLength: 15
                                    description: IMEI
                                    example: '123456789012345'
                            required:
                                - imei
            responses:
                '204':
                    description: Updated
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectRequestBody:
                                    $ref: '#/components/examples/IncorrectRequestBody'
                                IncorrectRequest:
                                    $ref: '#/components/examples/IncorrectRequest'
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '409':
                    description: Error updating metadata
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                FailedToUpdateMeta:
                                    $ref: '#/components/examples/FailedToUpdateMeta'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/orders/{orderId}/meta/gtin:
        servers:
            - url: https://marketplace-api.wildberries.ru
        put:
            security:
                - HeaderApiKey: []
            tags:
                - Metadata
            summary: Add GTIN to the order
            description: |
                Sets the GTIN (Belarus product unique identifier) for the order. The order can only have one GTIN. You can add the code only for orders in the `confirm` status.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods for <strong>adding metadata</strong>:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 1000 requests | 60 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Order'
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                gtin:
                                    type: string
                                    minLength: 13
                                    maxLength: 13
                                    description: GTIN
                                    example: '1234567890123'
                            required:
                                - gtin
            responses:
                '204':
                    description: Updated
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectRequestBody:
                                    $ref: '#/components/examples/IncorrectRequestBody'
                                IncorrectRequest:
                                    $ref: '#/components/examples/IncorrectRequest'
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '409':
                    description: Error updating metadata
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                FailedToUpdateMeta:
                                    $ref: '#/components/examples/FailedToUpdateMeta'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/orders/{orderId}/meta/expiration:
        servers:
            - url: https://marketplace-api.wildberries.ru
        put:
            security:
                - HeaderApiKey: []
            tags:
                - Metadata
            summary: Add expiration date to the order
            description: |
                Sets the expiration date for the order.
                <br>
                The expiration date can only be added for orders that are delivered by WB and are in the `confirm` status.
                <br>
                <br>
                You can get the uploaded data in the [metadata of the assembly order](/openapi/orders-fbs#tag/Metadata/paths/~1api~1v3~1orders~1%7BorderId%7D~1meta/get).
                <br>
                To change the expiration date, send a request with the new date.
                It is impossible to remove the expiration date from the metadata of the assembly order.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods for <strong>adding metadata</strong>:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 1000 requests | 60 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Order'
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                expiration:
                                    type: string
                                    description: The date until which the product is valid. No less than 30 days from the current date.
                                    format: date (dd.mm.yyyy)
                                    example: 12.09.2030
            responses:
                '204':
                    description: Sent
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                LowExpirationDate:
                                    $ref: '#/components/examples/LowExpirationDate'
                                IncorrectRequestBody:
                                    $ref: '#/components/examples/IncorrectRequestBody'
                                IncorrectRequest:
                                    $ref: '#/components/examples/IncorrectRequest'
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                '409':
                    description: Error updating metadata
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                FailedToUpdateMeta:
                                    $ref: '#/components/examples/FailedToUpdateMeta'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/files/orders/external-stickers:
        servers:
            - url: https://marketplace-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            tags:
                - Assembly Orders
            summary: Get a list of links to stickers that are required for cross-bordering
            description: |
                Returns a list of links to stickers that are required for cross-bordering.

                **Method limitations**:
                - You cannot request more than 100 stickers at a time (no more than 100 order IDs in a request).
                - The method returns stickers only for orders that are in delivery (in `complete` status).

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                orders:
                                    type: array
                                    minItems: 1
                                    maxItems: 100
                                    description: Order IDs
                                    items:
                                        type: integer
                                        format: int64
                                        example: 5346346
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    stickers:
                                        type: array
                                        nullable: false
                                        items:
                                            type: object
                                            properties:
                                                orderID:
                                                    type: integer
                                                    format: int64
                                                    nullable: false
                                                    description: Order ID
                                                    example: 5346346
                                                url:
                                                    type: string
                                                    nullable: false
                                                    description: A link to the order sticker
                                                    example: http://.../some-sticker
                                                parcelID:
                                                    type: string
                                                    nullable: false
                                                    description: Order tracking number in the sticker
                                                    example: WB0000000001
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectRequestBody:
                                    $ref: '#/components/examples/IncorrectRequestBody'
                                IncorrectRequest:
                                    $ref: '#/components/examples/IncorrectRequest'
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/orders/status/history:
        post:
            servers:
                - url: https://marketplace-api.wildberries.ru
            security:
                - HeaderApiKey: []
            tags:
                - Assembly Orders
            summary: Status history for cross-border orders
            description: |
                Returns status history for cross-border orders

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                orders:
                                    description: Orders IDs
                                    type: array
                                    items:
                                        type: integer
                                    maxItems: 100
                                    minItems: 1
                                    example:
                                        - 123456789
                                        - 987654321
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    orders:
                                        type: array
                                        description: Orders
                                        items:
                                            type: object
                                            properties:
                                                deliveryDate:
                                                    type: string
                                                    description: Planned delivery date, [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)
                                                statuses:
                                                    description: Statuses
                                                    type: array
                                                    items:
                                                        type: object
                                                        properties:
                                                            date:
                                                                type: string
                                                                description: Date of the status assignment
                                                                example: null
                                                            code:
                                                                type: string
                                                                description: |
                                                                    Order status code:
                                                                      - `accepted_by_carrier` — Product accepted by the carrier
                                                                      - `assembling` — Sent for assembly
                                                                      - `assembled` — Assembled at the warehouse
                                                                      - `sorted` — Sorted
                                                                      - `replaced_at_warehouse` — Replaced at the warehouse
                                                                      - `prepared_for_shipment` — Prepared for shipment
                                                                      - `in_search` — In search
                                                                      - `arrived_at_dct` — Arrived at the distribution center-transit
                                                                      - `arrived_at_sct` — Arrived at the sorting center-transit
                                                                      - `arrived_at_dc` — Arrived at the distribution center
                                                                      - `arrived_at_sc` — Arrived at the sorting center
                                                                      - `prepared_for_shipment_at_sc` — Prepared for shipment at the sorting center
                                                                      - `shipped_at_sc` — Shipped by the sorting center
                                                                      - `shipped_at_dct` — Shipped by the distribution center — transit
                                                                      - `shipped_at_dc` — Shipped by the distribution center
                                                                      - `delivered_at_sc` — Delivered to the SC/DC
                                                                      - `on_way_to_sc` — En route to the sorting center
                                                                      - `on_way_to_dc` — En route to the distribution center
                                                                      - `on_way_to_pp` — En route to the pickup point
                                                                      - `arrived_at_pp` — Arrived at the pickup point
                                                                      - `accepted_at_pp` — Received at the pickup point
                                                                      - `ready_for_pick_up` — Ready for pickup
                                                                      - `arrived_at_pp` — Arrived at the pickup point
                                                                      - `received_by_client` — Received by the client
                                                                      - `delivered_at_parcel_locker` — Delivered to the parcel locker
                                                                      - `canceled_by_client` — Buyer canceled the order upon receipt
                                                                      - `cancel_after_expiration` — Canceled due to storage time limit
                                                                      - `at_courier` — Transferred to the courier
                                                                      - `moved_to_return_box` — Moved to the return box
                                                                      - `accepted_for_return` — Accepted for return at the pickup point
                                                                      - `created` — Created
                                                                      - `canceled_by_seller` — Canceled by the seller
                                                                      - `dispatched_by_seller` — Shipped according to seller's data
                                                                      - `delivered` — Order issued
                                                                      - `on_way` — En route
                                                                      - `arrived_at_wb_wh` — Arrived at the WB warehouse
                                                                      - `dispatched_from_wh` — Sent from the warehouse
                                                                      - `customs_clearance` — Customs clearance
                                                                      - `customs_clearance_completed` — Released by customs
                                                                      - `departed_from_origin_country` — Sent from the seller's country
                                                                      - `arrived_in_destination_country` — Arrival in the destination country
                                                                      - `on_way_to_wb_sc` — Sent to the WB SC
                                                                      - `accepted_at_wb_sc` — Accepted by the WB SC
                                                                      - `canceled` — Canceled
                                                                      - `failed_to_reach_client` — Could not reach the client
                                                                example: SORTED
                                                orderID:
                                                    description: Order ID
                                                    type: integer
                                                    example: 123456789
                '400':
                    description: Bad request
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/orders/client:
        servers:
            - url: https://marketplace-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            summary: Orders with client information
            description: |
                The method allows getting information about the client by order ID. <br>Only for cross-border orders from **Turkey**

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            tags:
                - Assembly Orders
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OrdersRequestAPI'
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CrossborderTurkeyClientInfoResp'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/supplies:
        servers:
            - url: https://marketplace-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            tags:
                - FBS Supplies
            summary: Create a new supply
            description: |
                **Supplies limitations**:

                - Supplies applicable only for orders in the FBS (Fulfillment by Seller) delivery.
                - All orders added to supply automatically transferred from the `new` status to the `confirm` status.
                - Please note that if you will `cancel` (`Canceled by the seller`) the order, we will automatically remove it from the supply.
                - A supply can only be assembled from assembly jobs (orders) with the same dimensional type (cargoType). A new supply does not have a dimensional attribute. When the first order is added to a supply, the supply acquires the dimensional attribute of that order.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    minLength: 1
                                    maxLength: 128
                                    description: Supply name
                                    example: Some test supply
            responses:
                '201':
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: string
                                        nullable: false
                                        description: Supply ID
                                        example: WB-GI-1234567
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectRequestBody:
                                    $ref: '#/components/examples/IncorrectRequestBody'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                'Response429':
                    $ref: '#/components/responses/Response429'
        get:
            security:
                - HeaderApiKey: []
            tags:
                - FBS Supplies
            summary: Get a supplies list
            description: |
                Returns the supply list.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Limit'
                - $ref: '#/components/parameters/Next'
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                nullable: false
                                properties:
                                    next:
                                        $ref: '#/components/schemas/Next'
                                    supplies:
                                        type: array
                                        nullable: false
                                        description: Supplies list
                                        items:
                                            $ref: '#/components/schemas/Supply'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/supplies/{supplyId}/orders/{orderId}:
        servers:
            - url: https://marketplace-api.wildberries.ru
        patch:
            security:
                - HeaderApiKey: []
            tags:
                - FBS Supplies
            summary: Add the order to the supply
            description: |
                Adds an order to a supply and moves it to `confirm` status. <br> It can also move the order between active supplies. Or from a closed to an active supply, if the order requires reshipment.
                <div class="description_important">
                  You can add an order of any dimensional type to an empty supply. After adding the first task, the supply acquires the dimensional type of this task from the <code>cargoType</code> field <a href="/openapi/orders-fbs#tag/Supplies-FBS/paths/~1api~1v3~1supplies~1%7BsupplyId%7D/get">in the field</a>.<br>After that, you can only add tasks of the same dimensional type as the supply.
                </div>

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 1000 requests | 60 milliseconds | 20 requests |
                </div>
            parameters:
                - $ref: '#/components/parameters/Supply'
                - $ref: '#/components/parameters/Order'
            responses:
                '204':
                    description: The order assigned to the supply
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                '409':
                    description: Error adding the order to the supply
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                FailedToAddSupplyOrder:
                                    $ref: '#/components/examples/FailedToAddSupplyOrder'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/supplies/{supplyId}:
        servers:
            - url: https://marketplace-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            tags:
                - FBS Supplies
            summary: Get supply details
            description: |
                Returns supply details.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Supply'
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Supply'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                'Response429':
                    $ref: '#/components/responses/Response429'
        delete:
            security:
                - HeaderApiKey: []
            tags:
                - FBS Supplies
            summary: Delete the supply
            description: |
                Deleted the supply if it is active and does not contain any orders.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Supply'
            responses:
                '204':
                    description: Deleted
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                '409':
                    description: The supply contains orders
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                SupplyHasOrders:
                                    $ref: '#/components/examples/SupplyHasOrders'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/supplies/{supplyId}/orders:
        servers:
            - url: https://marketplace-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            tags:
                - FBS Supplies
            summary: Get the supply orders
            description: |
                Returns orders assigned to the supply.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Supply'
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                nullable: false
                                properties:
                                    orders:
                                        type: array
                                        nullable: false
                                        items:
                                            $ref: '#/components/schemas/SupplyOrder'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/supplies/{supplyId}/deliver:
        servers:
            - url: https://marketplace-api.wildberries.ru
        patch:
            security:
                - HeaderApiKey: []
            tags:
                - FBS Supplies
            summary: Move the supply to the delivery
            description: |
                Closes the supply and moves all orders to `complete` (`In Delivery`) status. You cannot add any orders to the supply after it is closed.

                If the supply wasn't handed over for delivery, than scanning its QR code or accepting the first product will automatically close the supply.

                You can transfer the supply to delivery only if it contains at least one order and no empty boxes.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Supply'
            responses:
                '204':
                    description: The supply moved to the delivery
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                '409':
                    description: Error closing supply
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                SupplyHasZeroOrders:
                                    $ref: '#/components/examples/SupplyHasZeroOrders'
                                UinIsNotFilled:
                                    $ref: '#/components/examples/UinIsNotFilled'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/supplies/{supplyId}/barcode:
        servers:
            - url: https://marketplace-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            tags:
                - FBS Supplies
            summary: Get the supply QR code
            description: |
                Returns the QR code in svg, zplv (vertical), zplh (horizontal), png. <br>
                Available only after the supply has been transferred to the delivery.
                Available dimensions:
                <dd>580x400 px

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Supply'
                - name: type
                  in: query
                  required: true
                  description: Sticker format
                  schema:
                      type: string
                      enum:
                          - svg
                          - zplv
                          - zplh
                          - png
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                nullable: false
                                properties:
                                    barcode:
                                        type: string
                                        nullable: false
                                        description: The encoded value of the sticker (supply id)
                                        example: WB-GI-12345678
                                    file:
                                        type: string
                                        format: byte
                                        nullable: false
                                        description: Base64 encoded sticker file in the requested format.
                                        example: U3dhZ2dlciByb2Nrcw==
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                '409':
                    description: Error requesting data
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                SupplyNotClosed:
                                    $ref: '#/components/examples/SupplyNotClosed'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/supplies/{supplyId}/trbx:
        servers:
            - url: https://marketplace-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            tags:
                - FBS Supplies
            summary: Get supply boxes list
            description: |
                Returns supply boxes list with assigned orders

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Supply'
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    trbxes:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/SupplyTrbx'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                'Response429':
                    $ref: '#/components/responses/Response429'
        post:
            security:
                - HeaderApiKey: []
            tags:
                - FBS Supplies
            summary: Add boxes to the supply
            description: |
                Adds the required number of boxes to the supply.
                <br>
                <br>
                Boxes should only be added to deliveries shipped to the pickup points.
                Available only while the supply is being assembled

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Supply'
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - amount
                            properties:
                                amount:
                                    type: integer
                                    minimum: 1
                                    maximum: 1000
                                    description: Boxes amount to add to the supply.
                                    example: 4
            responses:
                '201':
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    trbxIds:
                                        type: array
                                        description: List of IDs of created boxes.
                                        minItems: 1
                                        items:
                                            type: string
                                            example: WB-TRBX-1234567
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                'Response429':
                    $ref: '#/components/responses/Response429'
        delete:
            security:
                - HeaderApiKey: []
            tags:
                - FBS Supplies
            summary: Delete boxes from the supply
            description: |
                Removes orders from the listed delivery boxes and deletes the boxes. Available only while the supply is being assembled

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Supply'
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - trbxIds
                            properties:
                                trbxIds:
                                    type: array
                                    description: List of box IDs to delete from the supply.
                                    items:
                                        type: string
                                        example: WB-TRBX-1234567
            responses:
                '204':
                    description: Deleted
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/supplies/{supplyId}/trbx/{trbxId}:
        servers:
            - url: https://marketplace-api.wildberries.ru
        patch:
            security:
                - HeaderApiKey: []
            tags:
                - FBS Supplies
            summary: Add orders to the box
            description: |
                Add orders to the supply box. Available only while the supply is being assembled.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Supply'
                - $ref: '#/components/parameters/Trbx'
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - orderIds
                            properties:
                                orderIds:
                                    type: array
                                    description: List of orders to be added to the box.
                                    items:
                                        type: integer
                                        example: 1234567
            responses:
                '204':
                    description: Added
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/supplies/{supplyId}/trbx/{trbxId}/orders/{orderId}:
        servers:
            - url: https://marketplace-api.wildberries.ru
        delete:
            security:
                - HeaderApiKey: []
            tags:
                - FBS Supplies
            summary: Delete order from the box
            description: |
                Deletes order from the supply box. Available only while the supply is being assembled

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Supply'
                - $ref: '#/components/parameters/Trbx'
                - $ref: '#/components/parameters/Order'
            responses:
                '204':
                    description: Deleted
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/supplies/{supplyId}/trbx/stickers:
        servers:
            - url: https://marketplace-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            tags:
                - FBS Supplies
            summary: Get the supply box QR code stickers
            description: |
                Returns QR-code stickers in svg, zplv (vertical), zplh (horizontal), png.<br>
                Available only if there are orders in the box.
                <dt>Stickers dimensions: 580x400 px</dt>

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Supply'
                - name: type
                  in: query
                  required: true
                  description: Sticker format
                  schema:
                      type: string
                      enum:
                          - svg
                          - zplv
                          - zplh
                          - png
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - trbxIds
                            properties:
                                trbxIds:
                                    type: array
                                    description: List of supply box IDs for the sticker generation
                                    items:
                                        type: string
                                        example: WB-TRBX-1234567
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                nullable: false
                                properties:
                                    stickers:
                                        type: array
                                        minItems: 1
                                        items:
                                            $ref: '#/components/schemas/TrbxStickers'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/orders/{orderId}/confirm:
        servers:
            - url: https://marketplace-api.wildberries.ru
        patch:
            security:
                - HeaderApiKey: []
            tags:
                - WB Courier Delivery (DBW)
            summary: Transfer to assembly
            description: |
                Transfers the order to the status `confirm` (`On assembly`)

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/OrderID'
            responses:
                '204':
                    description: Confirmed
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                '409':
                    description: Status update error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                StatusMismatch:
                                    $ref: '#/components/examples/StatusMismatch'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/orders/{orderId}/assemble:
        servers:
            - url: https://marketplace-api.wildberries.ru
        patch:
            security:
                - HeaderApiKey: []
            tags:
                - WB Courier Delivery (DBW)
            summary: Transfer to delivery
            description: |
                Transfers order to the status `complete` — in delivery

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Order'
            responses:
                '204':
                    description: Confirmed
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                '404':
                    $ref: '#/components/responses/NotFound'
                '409':
                    description: Status update error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                StatusMismatch:
                                    $ref: '#/components/examples/StatusMismatch'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v3/warehouses/{warehouseId}/contacts:
        servers:
            - url: https://marketplace-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            tags:
                - WB Courier Delivery (DBW)
            summary: Contacts list
            description: |
                Returns a list of contacts linked to the seller's warehouse

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            parameters:
                - $ref: '#/components/parameters/Warehouse'
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                nullable: false
                                description: Seller's warehouse contact list
                                items:
                                    $ref: '#/components/schemas/StoreContactResponseBody'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                'Response429':
                    $ref: '#/components/responses/Response429'
        put:
            security:
                - HeaderApiKey: []
            tags:
                - WB Courier Delivery (DBW)
            summary: Update contacts list
            parameters:
                - $ref: '#/components/parameters/Warehouse'
            description: |
                Updates the seller's warehouse contact list. <br>

                <div class="description_important">
                  The contact list is overwritten upon update. Therefore, you need to include <strong>all</strong> contact list parameters in the request, including those you do not intend to update.
                </div>

                Only for warehouses with delivery type `3` — WB courier.<br>

                A maximum of 5 contacts can be added to the warehouse.
                To delete contacts, send an empty `contacts` array

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Requests limit</a> per one seller's account for all methods in the <strong>Marketplace</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 300 requests | 200 milliseconds | 20 requests |

                One request with a response code of <code>409</code> is counted as 5 requests
                </div>
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/StoreContactRequestBody'
            responses:
                '204':
                    description: Updated
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                IncorrectParameter:
                                    $ref: '#/components/examples/IncorrectParameter'
                                IncorrectRequestBody:
                                    $ref: '#/components/examples/IncorrectRequestBody'
                                UploadDataLimit:
                                    $ref: '#/components/examples/UploadDataLimit'
                                IncorrectRequest:
                                    $ref: '#/components/examples/IncorrectRequest'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    $ref: '#/components/responses/AccessDenied'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v1/promotion/count:
        servers:
            - url: https://advert-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Campaigns lists
            description: |
                Method allows to get campaigns lists grouped by type and status with information about last campaign change date.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 5 requests | 200 milliseconds | 5 requests |
                </div>
            tags:
                - Campaigns
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    adverts:
                                        type: array
                                        nullable: true
                                        description: Campaign data
                                        items:
                                            type: object
                                            properties:
                                                type:
                                                    description: Campaign type
                                                    type: integer
                                                status:
                                                    description: Campaign status
                                                    type: integer
                                                count:
                                                    description: Campaigns number
                                                    type: integer
                                                advert_list:
                                                    description: Campaigns list
                                                    type: array
                                                    items:
                                                        type: object
                                                        properties:
                                                            advertId:
                                                                description: Campaign ID
                                                                type: integer
                                                            changeTime:
                                                                description: Date and time of the last campaign change
                                                                type: string
                                                                format: date-time
                                    all:
                                        description: Total number of campaigns with all statuses and types
                                        type: integer
                            example:
                                adverts:
                                    - type: 4
                                      status: 8
                                      count: 3
                                      advert_list:
                                          - advertId: 6485174
                                            changeTime: '2023-05-10T12:12:52.676254+03:00'
                                          - advertId: 6500443
                                            changeTime: '2023-05-10T17:08:46.370656+03:00'
                                          - advertId: 7936341
                                            changeTime: '2023-07-12T15:51:08.367478+03:00'
                                all: 3
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v0/config:
        servers:
            - url: https://advert-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Promotional configuration values
            description: |
                The method provides acceptable values for the main configuration parameters of campaigns

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 1 request | 1 minute | 1 request |
                </div>
            tags:
                - Campaigns Creation
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    categories:
                                        type: array
                                        description: List of product categories (subjects) with minimum allowable rates
                                        items:
                                            $ref: '#/components/schemas/V0GetConfigCategoriesResponse'
                                    config:
                                        type: array
                                        description: List of the main configuration parameters with acceptable values
                                        items:
                                            type: object
                                            properties:
                                                description:
                                                    type: string
                                                    description: Parameter description
                                                name:
                                                    type: string
                                                    description: Parameter name
                                                value:
                                                    type: string
                                                    description: Value
                            example:
                                categories:
                                    - id: 760
                                      name: Автомобильные товары
                                      cpm_min: 112
                                config:
                                    - description: Минимальный бюджет кампании
                                      name: budget_min
                                      value: '1000'
                                    - description: Максимальный период в днях, за который можно получить статистику
                                      name: api_fullstat_day_depth
                                      value: '31'
                                    - description: Минимальная ставка CPM для автоматической кампании
                                      name: cpm_min_booster
                                      value: '100'
                                    - description: Минимальная ставка CPM для аукциона
                                      name: cpm_min_search_catalog
                                      value: '150'
                                    - description: Максимальное количество товаров для аукциона
                                      name: max_nm_count
                                      value: '50'
                                    - description: Максимальное количество товаров для автоматической кампании
                                      name: max_auto_nms
                                      value: '100'
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v1/promotion/adverts:
        servers:
            - url: https://advert-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            summary: Campaigns information
            description: |
                The method allows to retrieve information about campaigns via query parameters, or by a list of campaign IDs.<br>

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 5 requests | 200 milliseconds | 5 requests |
                </div>
            tags:
                - Campaigns
            parameters:
                - name: status
                  in: query
                  description: |
                      <dl>
                      <dt>Campaign status:</dt>
                      <dd><code>-1</code> - the campaign is in the process of being deleted</dd>
                      <dd><code>4</code> - ready to be launched</dd>
                      <dd><code>7</code> - completed</dd>
                      <dd><code>8</code> - declined</dd>
                      <dd><code>9</code> - active</dd>
                      <dd><code>11</code> - campaign is paused</dd>
                      </dl>
                      Campaign in the process of deletion. The status means that the campaign has been deleted and will disappear from the method's response within 3-10 minutes.
                  schema:
                      type: integer
                      enum:
                          - -1
                          - 4
                          - 7
                          - 8
                          - 9
                          - 11
                - name: type
                  in: query
                  description: |
                      <dl>
                      <dt>Campaign type:</dt>
                      <dd><code>4</code> - campaign in catalog (<strong>deprecated type</strong>)</dd>
                      <dd><code>5</code> - campaign in content (<strong>deprecated type</strong>)</dd>
                      <dd><code>6</code> - campaign in search (<strong>deprecated type</strong>)</dd>
                      <dd><code>7</code> - campaign in recommendations on the main page (<strong>deprecated type</strong>)</dd>
                      <dd><code>8</code> - automatic campaign </dd>
                      <dd><code>9</code> - Auction </dd>
                      </dl>
                  schema:
                      type: integer
                      enum:
                          - 4
                          - 5
                          - 6
                          - 7
                          - 8
                          - 9
                - name: order
                  in: query
                  description: |
                      <dl>
                      <dt>Order:</dt>
                      <dd><code>create</code> (by the time of campaign creation)</dd>
                      <dd><code>change</code> (by the time of the last change to the campaign)</dd>
                      <dd><code>id</code> (by the campaign identifier)</dd>
                      </dl>
                  schema:
                      type: string
                      enum:
                          - create
                          - change
                          - id
                - name: direction
                  in: query
                  description: |
                      <dl>
                      <dt>Direction:</dt>
                      <dd><code>desc</code> (from greater to lesser)</dd>
                      <dd><code>asc</code> (from lesser to greater)</dd>
                      </dl>
                      <br>For example: <code>/adv/v1/promotion/adverts?type=6&order=change&<b>direction=asc</b></code>
                  schema:
                      type: string
                      enum:
                          - desc
                          - asc
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: integer
                                description: List of campaign IDs. A Maximum of of 50. <br> <br> You can get campaign IDs using the <b>Campaign Lists</b> method.
                        example:
                            - 1234567
                            - 63453471
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    anyOf:
                                        - $ref: '#/components/schemas/ResponseInfoAdvert'
                                        - $ref: '#/components/schemas/ResponseInfoAdvertType8'
                                        - $ref: '#/components/schemas/ResponseInfoAdvertType9'
                            examples:
                                ResponseInfoAdvert:
                                    $ref: '#/components/examples/ResponseInfoAdvert'
                                ResponseInfoAdvertType8:
                                    $ref: '#/components/examples/ResponseInfoAdvertType8'
                                ResponseInfoAdvertType9:
                                    $ref: '#/components/examples/ResponseInfoAdvertType9'
                                ResponseInfoAdvertsAll:
                                    $ref: '#/components/examples/ResponseInfoAdvertsAll'
                '204':
                    description: Campaigns not found
                '400':
                    description: Bad request
                    content:
                        text/plain:
                            schema:
                                type: string
                            examples:
                                IncorrectTypeAdv:
                                    $ref: '#/components/examples/IncorrectTypeAdv'
                                IncorrectSupplierIdAdv:
                                    $ref: '#/components/examples/IncorrectSupplierIdAdv'
                                IncorrectUsingMethods:
                                    $ref: '#/components/examples/IncorrectUsingMethods'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '422':
                    description: Error processing request parameters
                    content:
                        text/plain:
                            schema:
                                type: string
                            examples:
                                ErrorProcessRequestParam:
                                    $ref: '#/components/examples/ErrorProcessRequestParam'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v1/save-ad:
        servers:
            - url: https://advert-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            summary: Creating automatic campaign
            description: |
                Creates an automatic campaign.<br>

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 20 seconds | 1 request | 20 seconds | 5 requests |
                </div>
            tags:
                - Campaigns Creation
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                type:
                                    description: |
                                        <dl>
                                        <dt>Type of automatic campaign:</dt>
                                        <dd><code>8</code></dd>
                                        </dl>
                                    type: integer
                                    example: 8
                                name:
                                    description: Campaign name (max. 128 characters)
                                    type: string
                                    example: Парашюты
                                subjectId:
                                    description: |
                                        ID of the item for which the campaign is created.<br>
                                        Seller's existing IDs can be received by "Content / View - "Nomenclature list" method, response field is `subjectID`.
                                    type: integer
                                    example: 270
                                sum:
                                    description: Top-up amount
                                    type: integer
                                    example: 500
                                btype:
                                    description: |
                                        <dl>
                                        <dt>Type of write-off.</dt>
                                        <dd><code>0</code> - Account</dd>
                                        <dd><code>1</code> - Balance</dd>
                                        <dd><code>3</code> - Bonuses</dd>
                                        </dl>
                                    type: integer
                                    example: 1
                                on_pause:
                                    description: |
                                        <dl>
                                        <dt>After creating campaign:</dt>
                                        <dl>
                                          <dt><code>true</code> - Will be suspended.</dt>
                                          <dd>The campaign launch will be available within 3 minutes after the campaign is created.</dd>
                                        </dl>
                                        <dd><code>false</code> - Will be launched</dd>
                                        </dl>
                                    type: boolean
                                    example: true
                                nms:
                                    description: |
                                        WB articles array.  <br>
                                        Maximum of 100 articles
                                    type: array
                                    items:
                                        type: integer
                                cpm:
                                    description: |
                                        Bid. <br>
                                        If a bid is specified that is less than the allowed size, the bid of the minimum allowed size will be automatically set.
                                    type: integer
                        example:
                            type: 8
                            name: Парашюты
                            subjectId: 270
                            sum: 500
                            btype: 1
                            on_pause: true
                            nms:
                                - 9178363
                                - 9178364
                            cpm: 10
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                description: ID of created campaign
                                type: string
                            example: '9008917'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                            examples:
                                IncorrectId:
                                    summary: ''
                                    description: ''
                                    value:
                                        error: Некорректный ID предмета
                                BaseBudget500:
                                    value:
                                        error: базовый бюджет должен быть больше 500р
                                InvalidWriteOffType:
                                    value:
                                        error: Некорректный тип списания
                                DepositAmount50:
                                    value:
                                        error: Сумма пополнения должна быть кратна 50р
                                InsufficientFundsInAccount:
                                    value:
                                        error: недостаточно средств на счете
                                IncorrectCompanyName:
                                    value:
                                        error: Некорректное название кампании
                                NoProductsSelectedCategory:
                                    value:
                                        error: Товары выбранной категории не в наличии
                                PlacementIsNotPossible:
                                    value:
                                        error: размещение невозможно
                'Response401':
                    $ref: '#/components/responses/Response401'
                '422':
                    description: Error processing request parameters
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                            examples:
                                ReceivingRecommendationsOnMainPage:
                                    value:
                                        error: Ошибка получения размещения в рекомендациях на главной
                                NotGetSupplierBalance:
                                    value:
                                        error: Не удалось получить баланс поставщика
                                CreatingSinglePlacement:
                                    value:
                                        error: Ошибка создания единственного размещения
                                ReceivingInProductCard:
                                    value:
                                        error: Ошибка получения размещения в карточке товара
                                GettingCpmCalculation:
                                    value:
                                        error: Ошибка получения расчета ставок
                                SavingPlacementInCard:
                                    value:
                                        error: Ошибка сохранения размещения в карточке
                                SavingPlacementInRecommend:
                                    value:
                                        error: Ошибка сохранения размещения в рекомендациях
                                FailedPutCampaignInCache:
                                    value:
                                        error: не удалось положить кампанию в кеш
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v2/seacat/save-ad:
        servers:
            - url: https://advert-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            summary: Create Auction campaign
            description: |
                Creates Auction campaign. <br>

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 5 requests | 12 seconds | 5 requests |
                </div>
            tags:
                - Campaigns Creation
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                campaignName:
                                    description: Campaign name
                                    type: string
                                nms:
                                    type: array
                                    description: "Nomenclature for this campaign. You can available nomenclatures with [Nomenclatures for campaigns](./promotion#tag/Nomenclatures/paths/~1adv~1v2~1supplier~1nms/post) method. Maximum of 50\_products (`nm`)\n"
                                    items:
                                        type: integer
                                        description: WB article (`nmId`)
                        example:
                            campaignName: Телефоны
                            nms:
                                - 146168367
                                - 200425104
            responses:
                '200':
                    description: Success
                    content:
                        text/plain:
                            schema:
                                type: integer
                                description: Campaign ID
                                example: 1234567
                '400':
                    description: Bad request
                    content:
                        text/plain:
                            schema:
                                type: string
                            example: Нет доступных категорий для рк. Создайте новую кампанию для попадания в текущие категории
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v1/supplier/subjects:
        servers:
            - url: https://advert-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Subjects for campaigns
            description: |
                Returns subjects nomenclatures from which are available for all campaigns

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 12 seconds | 1 request | 12 seconds | 5 requests |
                </div>
            tags:
                - Campaigns Creation
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                nullable: true
                                x-nullable: true
                                items:
                                    type: object
                                    properties:
                                        id:
                                            description: Subject ID
                                            type: integer
                                        name:
                                            description: Subject
                                            type: string
                                        count:
                                            description: Number of WB Articles (`nmId`) in this subject
                                            type: integer
                            examples:
                                Array:
                                    value:
                                        - name: 3D очки
                                          id: 2560
                                          count: 1899
                                'null':
                                    value: null
                'Response401':
                    $ref: '#/components/responses/Response401'
                '404':
                    description: Not found
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v2/supplier/nms:
        servers:
            - url: https://advert-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            summary: Product cards for campaigns
            description: |
                Returns product cards that are available for all campaigns.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 5 requests | 12 seconds | 5 requests |
                </div>
            tags:
                - Campaigns Creation
            requestBody:
                description: ID of subjects to get nomenclatures
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: integer
                        example:
                            - 123
                            - 456
                            - 765
                            - 321
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                description: Nomenclatures for campaigns
                                items:
                                    type: object
                                    properties:
                                        title:
                                            type: string
                                            description: Product name
                                            example: Плед
                                        nm:
                                            type: integer
                                            description: WB article (`nmId`)
                                            example: 146168367
                                        subjectId:
                                            type: integer
                                            description: Subject ID
                                            example: 765
                '400':
                    description: Bad request
                    content:
                        text/plain:
                            schema:
                                type: string
                            example: Error processing request body
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v0/cpm:
        servers:
            - url: https://advert-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            summary: Bid update
            deprecated: true
            description: |
                The changed bid will appear in the campaign information within 3 minutes.<br>
                <div class="description_important">
                  If the rate to be set is less than the allowable rate, the status code 422 (Rate size not changed) will be returned.
                  </div>

                The procedure for filling in the parameters `type`, `instrument`, `param` when changing the rate for a campaign with type 9 (Auction):
                <br> For 'type' it is necessary to specify the value 9 (always).
                <br> A value of 4 or 6 should be specified for `instrument`, depending on whether the rate is to be changed in the catalogue (<strong>deprecated campaign type</strong>) or in the search (<strong>deprecated campaign type</strong>).
                <br> For 'param' it is necessary to specify the value of the <b>id</b> field from the <b>subject</b> structure response of the [Information about campaign](/openapi/promotion#tag/Campaign-Management/paths/~1adv~1v1~1promotion~1adverts/post) method.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 5 requests | 200 milliseconds | 5 requests |
                </div>
            tags:
                - Campaigns Management
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - advertId
                                - type
                                - cpm
                                - param
                            properties:
                                advertId:
                                    description: Campaign ID where the bid is changing
                                    type: integer
                                    example: 789
                                type:
                                    description: |
                                        <dl>
                                        <dt>Campaign type to change the price:</dt>
                                        <dd><code>5</code> - campaign in content (<strong>deprecated type</strong>)</dd>
                                        <dd><code>6</code> - campaign in search (<strong>deprecated type</strong>)</dd>
                                        <dd><code>7</code> - campaign on main page recommendations (<strong>deprecated type</strong>)</dd>
                                        <dd><code>8</code> - automatic campaign</dd>
                                        <dd><code>9</code> - Auction campaign </dd>
                                        </dl>
                                    type: integer
                                    enum:
                                        - 5
                                        - 6
                                        - 7
                                        - 8
                                        - 9
                                cpm:
                                    description: New bid value
                                    type: integer
                                    example: 456
                                param:
                                    description: |
                                        The parameter for which the change will be made is the value of `subjectId` (for search and recommendation campaigns (<strong>deprecated campaign types</strong>)), `setId` (for product card campaigns (<strong>deprecated campaign type</strong>)), or `menuId` (for catalog campaigns (<strong>deprecated campaign type</strong>)).
                                        <br> For automated campaigns, this parameter is not required.
                                    type: integer
                                    example: 23
                                instrument:
                                    description: Campaign type for bid change in Auction
                                    type: integer
                                    example: 4
            responses:
                '200':
                    description: Success
                '400':
                    description: Bad request
                    content:
                        text/plain:
                            schema:
                                type: string
                            examples:
                                IncorrectParamAdv:
                                    $ref: '#/components/examples/IncorrectParamAdv'
                                IncorrectTypeAdv:
                                    $ref: '#/components/examples/IncorrectTypeAdv'
                                IncorrectCpmAdv:
                                    $ref: '#/components/examples/IncorrectCpmAdv'
                                IncorrectSupplierIdAdv:
                                    $ref: '#/components/examples/IncorrectSupplierIdAdv'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '422':
                    description: Bid size not changed
                    content:
                        text/plain:
                            schema:
                                type: string
                            examples:
                                RequestBodyProcessErrorAdv:
                                    $ref: '#/components/examples/RequestBodyProcessErrorAdv'
                                AmountNotChanged:
                                    $ref: '#/components/examples/AmountNotChanged'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v0/bids:
        servers:
            - url: https://advert-api.wildberries.ru
        patch:
            summary: Change product cards bids
            description: |
                The method changes the bids of product cards by WB articles in automatic campaigns and Auctions.
                <br><br>
                For campaigns in any status except `-1`, `7` and `8`
                <br>
                Minimum allowable bids can be found in the response of the method for obtaining [configuration values](/openapi/promotion#tag/Sozdanie-kampanij/paths/~1adv~1v0~1config/get)

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 5 requests | 200 milliseconds | 5 requests |
                </div>
            tags:
                - Campaigns Management
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - bids
                            properties:
                                bids:
                                    type: array
                                    maxItems: 20
                                    items:
                                        $ref: '#/components/schemas/V0AdvertMultibid'
            responses:
                '204':
                    description: Success
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    detail:
                                        type: string
                                        description: Error details
                                    origin:
                                        type: string
                                        description: WB internal service ID
                                    request_id:
                                        type: string
                                        description: Unique request ID
                                    status:
                                        type: integer
                                        description: HTTP status code
                                    title:
                                        type: string
                                        description: Error title
                                    errors:
                                        type: array
                                        description: Error details
                                        items:
                                            type: object
                                            properties:
                                                detail:
                                                    type: string
                                                    description: Error description
                                                field:
                                                    type: string
                                                    description: Field containing error
                                    type:
                                        type: string
                                        description: Error type
                            examples:
                                CampaignIsNotUnique:
                                    $ref: '#/components/examples/CampaignIsNotUnique'
                                CanNotDeserializeResponseBody:
                                    $ref: '#/components/examples/CanNotDeserializeResponseBody'
                                CampaignNotFound:
                                    $ref: '#/components/examples/CampaignNotFoundBids'
                                NmNotFound:
                                    $ref: '#/components/examples/NmNotFound'
                                WrongCampaignID:
                                    $ref: '#/components/examples/WrongCampaignID'
                                WrongCampaignStatus:
                                    $ref: '#/components/examples/WrongCampaignStatus'
                                WrongBidValue:
                                    $ref: '#/components/examples/WrongBidValue'
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v0/delete:
        servers:
            - url: https://advert-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Delete campaign
            description: |
                The method allows to delete campaigns in the status <b>4 - ready to launch</b>. <br>

                After deleting, the campaign will be in <b>-1</b> status for a while.<br>

                It takes between 3 and 10 minutes to completely delete the campaign.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 5 requests | 200 milliseconds | 5 requests |
                </div>
            tags:
                - Campaigns Management
            parameters:
                - name: id
                  in: query
                  description: Campaign ID
                  schema:
                      type: integer
                  required: true
            responses:
                '200':
                    description: Success
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseAdvError1'
                            examples:
                                ResponseInvalidCampaignID:
                                    $ref: '#/components/examples/ResponseInvalidCampaignID'
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v0/rename:
        servers:
            - url: https://advert-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            summary: Rename campaign
            description: |
                The method allows to rename a campaign. <br>

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 5 requests | 200 milliseconds | 5 requests |
                </div>
            tags:
                - Campaigns Management
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - advertId
                                - name
                            properties:
                                advertId:
                                    type: integer
                                    description: ID of the campaign that has the name change
                                name:
                                    type: string
                                    description: New name (max 100 characters)
                        example:
                            advertId: 2233344
                            name: newnmame
            responses:
                '200':
                    description: Success
                '400':
                    description: Bad request
                    content:
                        text/plain:
                            schema:
                                type: string
                            examples:
                                InvalidRcIdAdv:
                                    $ref: '#/components/examples/InvalidRcIdAdv'
                                IncorrectName:
                                    $ref: '#/components/examples/IncorrectName'
                                IncorrectSupplierIdAdv:
                                    $ref: '#/components/examples/IncorrectSupplierIdAdv'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '422':
                    description: Error processing request parameters
                    content:
                        text/plain:
                            schema:
                                type: string
                            examples:
                                RequestBodyProcessErrorAdv:
                                    $ref: '#/components/examples/RequestBodyProcessErrorAdv'
                                CompanyNameChangeErr:
                                    $ref: '#/components/examples/CompanyNameChangeErr'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v0/start:
        servers:
            - url: https://advert-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Launch campaign
            description: |
                The method allows to run campaigns that are in statuses <b>4 - ready to launch</b> or <b>11 - paused campaign</b>. <br>

                To run an ad campaign with status <b>11</b>, check its budget. If the budget is insufficient, replenish it.<br>
                <dl>
                <dt>To run a campaign with status <b>4</b>, it is necessary to do following (the order of actions does not matter):</dt>
                <dd>1. After creating a campaign in the WB. Promotion cabinet click the `Apply changes` button.</dd>
                <dd>2. Set the budget.</dd>

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 5 requests | 200 milliseconds | 5 requests |
                </div>
            tags:
                - Campaigns Management
            parameters:
                - name: id
                  in: query
                  description: Campaign ID
                  schema:
                      type: integer
                      example: 1234
                  required: true
            responses:
                '200':
                    description: Success
                '400':
                    description: Bad request
                    content:
                        text/plain:
                            schema:
                                type: string
                            examples:
                                InvalidRcIdAdv:
                                    $ref: '#/components/examples/InvalidRcIdAdv'
                                IncorrectSupplierIdAdv:
                                    $ref: '#/components/examples/IncorrectSupplierIdAdv'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '422':
                    description: Status not changed
                    content:
                        text/plain:
                            schema:
                                type: string
                            examples:
                                StatusNoChangeAdv:
                                    $ref: '#/components/examples/StatusNoChangeAdv'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v0/pause:
        servers:
            - url: https://advert-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Pause campaign
            description: |
                Campaign in status `9` - active - can be paused

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 5 requests | 200 milliseconds | 5 requests |
                </div>
            tags:
                - Campaigns Management
            parameters:
                - name: id
                  in: query
                  description: Campaign ID
                  schema:
                      type: integer
                      example: 1234
                  required: true
            responses:
                '200':
                    description: Success
                '400':
                    description: Bad request
                    content:
                        text/plain:
                            schema:
                                type: string
                            examples:
                                InvalidRcIdAdv:
                                    $ref: '#/components/examples/InvalidRcIdAdv'
                                IncorrectSupplierIdAdv:
                                    $ref: '#/components/examples/IncorrectSupplierIdAdv'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '422':
                    description: Status not changed
                    content:
                        text/plain:
                            schema:
                                type: string
                            examples:
                                StatusNoChangeAdv:
                                    $ref: '#/components/examples/StatusNoChangeAdv'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v0/stop:
        servers:
            - url: https://advert-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Stop campaign
            description: |-
                The method allows to end campaigns that are in status 9, 11 or 4.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 5 requests | 200 milliseconds | 5 requests |
                </div>
            tags:
                - Campaigns Management
            parameters:
                - name: id
                  in: query
                  description: Campaign ID
                  schema:
                      type: integer
                      example: 1234
                  required: true
            responses:
                '200':
                    description: Success
                '400':
                    description: Bad request
                    content:
                        text/plain:
                            schema:
                                type: string
                            examples:
                                InvalidRcIdAdv:
                                    $ref: '#/components/examples/InvalidRcIdAdv'
                                IncorrectSupplierIdAdv:
                                    $ref: '#/components/examples/IncorrectSupplierIdAdv'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '422':
                    description: Status not changed
                    content:
                        text/plain:
                            schema:
                                type: string
                            examples:
                                StatusNoChangeAdv:
                                    $ref: '#/components/examples/StatusNoChangeAdv'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v1/balance:
        servers:
            - url: https://advert-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Balance
            description: |
                The method allows to get information about the seller's net, balance and bonuses<br>

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 1 request | 1 second | 5 requests |
                </div>
            tags:
                - Finances
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    balance:
                                        description: Account, russian ruble
                                        type: integer
                                    net:
                                        description: Balance, russian ruble
                                        type: integer
                                    bonus:
                                        description: Bonuses, russian ruble
                                        type: integer
                            example:
                                balance: 11083
                                net: 0
                                bonus: 15187
                '400':
                    description: Bad request
                    content:
                        text/plain:
                            schema:
                                type: string
                            examples:
                                IncorrectSupplierIdAdv:
                                    $ref: '#/components/examples/IncorrectSupplierIdAdv'
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v1/budget:
        servers:
            - url: https://advert-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Campaign budget
            description: |
                The method allows to get information about the budget of a campaign.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 4 requests | 250 milliseconds | 4 requests |
                </div>
            tags:
                - Finances
            parameters:
                - name: id
                  in: query
                  description: Campaign ID
                  schema:
                      type: integer
                      example: 1
                  required: true
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    cash:
                                        description: The field is not used. The value is always equal to 0.
                                        type: integer
                                    netting:
                                        description: The field is not used. The value is always equal to 0.
                                        type: integer
                                    total:
                                        description: Campaign budget, RUB
                                        type: integer
                            example:
                                cash: 0
                                netting: 0
                                total: 500
                '400':
                    description: Bad request
                    content:
                        text/plain:
                            schema:
                                type: string
                            examples:
                                CampaignNotBelongSeller:
                                    $ref: '#/components/examples/CampaignNotBelongSeller'
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v1/budget/deposit:
        servers:
            - url: https://advert-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            summary: Top-up of the campaign budget
            description: |
                The method allows to top up the budget of the campaign.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 1 request | 1 second | 5 requests |
                </div>
            tags:
                - Finances
            parameters:
                - name: id
                  in: query
                  description: Campaign ID
                  schema:
                      type: integer
                      example: 1234567
                  required: true
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                sum:
                                    description: Top-up amount
                                    type: integer
                                    example: 5000
                                type:
                                    description: |
                                        <dl>
                                        <dt>Type of top-up source:</dt>
                                        <dd><code>0</code> - Account</dd>
                                        <dd><code>1</code> - Balance</dd>
                                        <dd><code>3</code> - Bonuses</dd>
                                        </dl>
                                    type: integer
                                    example: 1
                                return:
                                    type: boolean
                                    description: Response return flag (`true` means updated campaign budget size will be returned in the response, `false` or empty means nothing will be returned).
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: '#/components/schemas/ResponseWithReturn'
                            examples:
                                ResponseWithReturn:
                                    $ref: '#/components/examples/ResponseWithReturn'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                            examples:
                                DepositAmountMultiple50:
                                    description: The top-up amount must be a multiple of 50 roubles
                                    value:
                                        error: Сумма пополнения должна быть кратна 50 руб
                                MinimumDepositAmountIs500:
                                    description: Minimum top-up amount is 1000 RUB
                                    value:
                                        error: Минимальная сумма пополнения 1000 рублей
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v1/upd:
        servers:
            - url: https://advert-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Receiving costs history
            description: |
                The method allows to get a costs history

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 1 request | 1 second | 5 requests |
                </div>
            tags:
                - Finances
            parameters:
                - name: from
                  in: query
                  description: Beginning of the interval
                  schema:
                      type: string
                      format: date
                      example: '2023-07-31'
                  required: true
                - name: to
                  in: query
                  description: |
                      End of interval. <br>
                      (Minimum interval is 1 day, maximum is 31)
                  schema:
                      type: string
                      format: date
                      example: '2023-08-02'
                  required: true
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        updNum:
                                            description: Billing document number (if any)
                                            type: integer
                                        updTime:
                                            nullable: true
                                            description: Time of charge-off
                                            type: string
                                            format: time-date
                                        updSum:
                                            description: Amount invoiced
                                            type: integer
                                        advertId:
                                            description: Campaign ID
                                            type: integer
                                        campName:
                                            description: Campaign name
                                            type: string
                                        advertType:
                                            description: Type of campaign
                                            type: integer
                                        paymentType:
                                            description: |
                                                Source of charge-off:
                                                 - `Баланс` - Balance
                                                 - `Бонусы` - Bonuses
                                                 - `Счет` - Money account
                                                 - `Кэшбэк` - Debit card cashback
                                            type: string
                                        advertStatus:
                                            description: |
                                                <dl>
                                                  <dt>Campaign status:</dt>
                                                  <dd><code>4</code> - ready to run </dd>
                                                  <dd><code>7</code> - is over</dd>
                                                  <dd><code>8</code> - refused</dd>
                                                  <dd><code>9</code> - active</dd>
                                                  <dd><code>11</code> - paused</dd>
                                                </dl>
                                            type: integer
                            example:
                                - updNum: 0
                                  updTime: '2023-07-31T12:12:54.060536+03:00'
                                  updSum: 24
                                  advertId: 3355881
                                  campName: лук лучок
                                  advertType: 6
                                  paymentType: Баланс
                                  advertStatus: 9
                                - updNum: 0
                                  updTime: null
                                  updSum: 107
                                  advertId: 3366882
                                  campName: золотая луковица
                                  advertType: 8
                                  paymentType: Счет
                                  advertStatus: 11
                '400':
                    description: Bad request
                    content:
                        text/plain:
                            schema:
                                type: string
                            examples:
                                IncorrectSupplierIdAdv:
                                    $ref: '#/components/examples/IncorrectSupplierIdAdv'
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v1/payments:
        servers:
            - url: https://advert-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Receiving the history of account top-ups
            description: |
                The method allows you to get a history of top-ups.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 1 request | 1 second | 5 requests |
                </div>
            tags:
                - Finances
            parameters:
                - name: from
                  in: query
                  description: Beginning of the interval
                  schema:
                      type: string
                      format: date
                      example: '2023-07-31'
                - name: to
                  in: query
                  description: |
                      End of interval. <br>
                      (Minimum interval is 1 day, maximum is 31)
                  schema:
                      type: string
                      format: date
                      example: '2023-08-02'
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        id:
                                            description: Payment ID
                                            type: integer
                                        date:
                                            description: Payment date
                                            type: string
                                            format: time-date
                                        sum:
                                            description: Payment amount
                                            type: integer
                                        type:
                                            description: |
                                                <dl>
                                                <dt>Type of charge-off source:</dt>
                                                <dd><code>0</code> - Account</dd>
                                                <dd><code>1</code> - Balance</dd>
                                                <dd><code>3</code> - Card</dd>
                                                </dl>
                                            type: integer
                                        statusId:
                                            description: |
                                                <dl>
                                                <dt>Status:</dt>
                                                <dd><code>0</code> - error</dd>
                                                <dd><code>1</code> - processed</dd>
                                                </dl>
                                            type: integer
                                        cardStatus:
                                            description: |
                                                <dl>
                                                <dt>Transaction status (when paying by card):</dt>
                                                <dd><b>success</b> - success</dd>
                                                <dd><b>fail</b> - not success</dd>
                                                <dd><b>pending</b> - waiting for response</dd>
                                                <dd><b>unknown</b> - unknown</dd>
                                                </dl>
                                            type: string
                            example:
                                - id: 1036666
                                  date: '2022-02-04T09:06:47.985843Z'
                                  sum: 600
                                  type: 0
                                  statusId: 1
                                  cardStatus: ''
                                - id: 55261296
                                  date: '2023-04-13T10:07:42'
                                  sum: 1500
                                  type: 3
                                  statusId: 1
                                  cardStatus: succeeded
                '400':
                    description: Bad request
                    content:
                        text/plain:
                            schema:
                                type: string
                            examples:
                                IncorrectSupplierIdAdv:
                                    $ref: '#/components/examples/IncorrectSupplierIdAdv'
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v1/search/set-plus:
        servers:
            - url: https://advert-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Managing the activity of fixed phrases
            description: |
                The method allows to change the activity of fixed phrases. Only for Auction campaigns.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 500 milliseconds | 1 request | 500 milliseconds | 5 requests |
                </div>
            tags:
                - Campaigns Parameters
            parameters:
                - name: id
                  in: query
                  description: Campaign ID
                  schema:
                      type: integer
                      example: 1234567
                  required: true
                - name: fixed
                  in: query
                  description: New state (`false` - make inactive, `true` - make active)
                  schema:
                      type: boolean
            responses:
                '200':
                    description: Success
                '400':
                    description: Bad request
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Bad request
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
        post:
            security:
                - HeaderApiKey: []
            summary: Setting/deleting fixed phrases
            description: |
                The method allows to set and delete fixed phrases.Only for Auction campaigns.

                Sending an empty array removes all fixed phrases and disables fixed phrase activity in the campaign.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 500 milliseconds | 1 request | 500 milliseconds | 5 requests |
                </div>
            tags:
                - Campaigns Parameters
            parameters:
                - name: id
                  in: query
                  description: Campaign ID
                  schema:
                      type: integer
                      example: 1234567
                  required: true
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                pluse:
                                    description: Fixed phrase list (max. 100)
                                    type: array
                                    items:
                                        type: string
                        example:
                            pluse:
                                - Фраза 1
                                - Фраза 2
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            example:
                                - Фраза 1
                                - Фраза 2
                '400':
                    description: Bad request
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: 'json: cannot unmarshal number into Go struct field request.pluse of type string'
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v1/search/set-phrase:
        servers:
            - url: https://advert-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            summary: Setting/removing minus-phrases of phrase matching
            description: |
                Sets/removes minus-phrases of a phrase match. Only for Auction campaigns.<br>
                The Maximum of allowed number of minus-phrases in a campaign is 1000 pcs.<br>
                Posting an empty array removes all minus-phrase of phrase matching from the campaign.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 2 requests | 500 milliseconds | 2 requests |
                </div>
            tags:
                - Campaigns Parameters
            parameters:
                - name: id
                  in: query
                  description: Campaign ID
                  schema:
                      type: integer
                      example: 1234567
                  required: true
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                phrase:
                                    description: Minus-phrases (max. 1000 pcs.)
                                    type: array
                                    items:
                                        type: string
                        example:
                            phrase:
                                - сло
                                - гу
            responses:
                '200':
                    description: Success
                '400':
                    description: Bad request
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Bad request
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v1/search/set-strong:
        servers:
            - url: https://advert-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            summary: Setting/removing minus of exact match phrases
            description: |
                Sets/removes minus-phrases of exact match. Only for Auction campaigns.<br>

                The Maximum of allowed number of minus-phrases in a campaign is 1000 pcs.<br>

                Sending an empty array removes all minus-phrases of the exact match from the ad campaign.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 2 requests | 500 milliseconds | 2 requests |
                </div>
            tags:
                - Campaigns Parameters
            parameters:
                - name: id
                  in: query
                  description: Campaign ID
                  schema:
                      type: integer
                      example: 1234567
                  required: true
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                strong:
                                    description: Minus-phrases (max. 1000 pcs.)
                                    type: array
                                    items:
                                        type: string
                        example:
                            strong:
                                - стоять
                                - лопата
            responses:
                '200':
                    description: Success
                '400':
                    description: Bad request
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Bad request
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v1/search/set-excluded:
        servers:
            - url: https://advert-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            summary: Setting/removing minus phrases from search
            description: |
                Sets/removes minus-phrases for search. Only for Auction campaigns.<br>
                The Maximum of allowed number of minus-phrases in a campaign is 1000 pcs.<br>
                Sending an empty array removes all minus-phrases from the Search ad campaign.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 2 requests | 500 milliseconds | 2 requests |
                </div>
            tags:
                - Campaigns Parameters
            parameters:
                - name: id
                  in: query
                  description: Campaign ID
                  schema:
                      type: integer
                      example: 1234567
                  required: true
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                excluded:
                                    description: Minus-phrases (max. 1000 pcs.)
                                    type: array
                                    items:
                                        type: string
                        example:
                            excluded:
                                - что-то синее
                                - картошечка
            responses:
                '200':
                    description: Success
                '400':
                    description: Bad request
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Bad request
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v1/auto/set-excluded:
        servers:
            - url: https://advert-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            summary: Setting/removing minus-phrases for automatic campaigns
            description: |
                The method allows to set or remove minus phrases.<br>
                Sending an empty array removes all minus phrases from the campaign.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 6 seconds | 1 request | 6 seconds | 5 requests |
                </div>
            tags:
                - Campaigns Parameters
            parameters:
                - name: id
                  in: query
                  description: Campaign ID
                  schema:
                      type: integer
                      example: 1234567
                  required: true
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                excluded:
                                    description: List of phrases (Maximum of 1000 pcs.)
                                    type: array
                                    items:
                                        type: string
                        examples:
                            SettingMinusPhrase:
                                $ref: '#/components/examples/SettingMinusPhrase'
                            RemovingMinusPhrase:
                                $ref: '#/components/examples/RemovingMinusPhrase'
            responses:
                '200':
                    description: Success
                '400':
                    description: Bad request
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Bad request
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v1/auto/getnmtoadd:
        servers:
            - url: https://advert-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: List of product cards for automatic campaign
            description: |
                The method allows to get the list of product cards available for adding to the campaign. <br>

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 1 request | 1 second | 5 requests |
                </div>
            tags:
                - Campaigns Parameters
            parameters:
                - name: id
                  in: query
                  description: Campaign ID
                  schema:
                      type: integer
                      example: 1
                  required: true
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: integer
                            example:
                                - 1111111111
                                - 2222222222
                                - 3333333333
                                - 4444444444
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v1/auto/updatenm:
        servers:
            - url: https://advert-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            summary: Changing the list of nomenclatures in an automatic campaign
            description: |
                The method allows you to add and remove nomenclatures.

                <div class="description_important">
                  It is possible to add only those nomenclatures that will be returned in the method response <a href="/openapi/promotion#tag/Automated-Campaign-Parameters/paths/~1adv~1v1~1auto~1getnmtoadd/get">List of nomenclatures in an automatic campaign</a>.<br>You cannot delete a one single nomenclature from a campaign.
                </div>

                There is no validation by the `delete` parameter.

                If you receive a response with a status code of 200 and no change has occurred, check the request for documentation compliance

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 60 requests | 1 second | 5 requests |
                </div>
            tags:
                - Campaigns Parameters
            parameters:
                - name: id
                  in: query
                  description: Campaign ID
                  schema:
                      type: integer
                      example: 1
                  required: true
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                add:
                                    description: The nomenclatures that need to be added
                                    type: array
                                    items:
                                        type: integer
                                delete:
                                    description: The nomenclatures that need to be deleted
                                    type: array
                                    items:
                                        type: integer
                        example:
                            add:
                                - 11111111
                                - 44444444
                            delete:
                                - 55555555
            responses:
                '200':
                    description: Success
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responseAdvError1'
                            examples:
                                CampaignNotFoundAdv:
                                    $ref: '#/components/examples/CampaignNotFoundAdv'
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v1/count:
        servers:
            - url: https://advert-media-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Media campaigns number
            description: |
                Method allows you to get the number of the seller's media campaigns.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 10 requests | 100 milliseconds | 10 requests |
                </div>
            tags:
                - Media
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    all:
                                        description: Total number of media campaigns with all statuses and types
                                        type: integer
                                    adverts:
                                        type: object
                                        properties:
                                            type:
                                                description: |
                                                    <dl>
                                                    <dt>Media campaign type:</dt>
                                                    <dd><code>1</code> — daily basis</dd>
                                                    <dd><code>2</code> — views basis</dd>
                                                    </dl>
                                                type: integer
                                            status:
                                                description: |
                                                    <dl>
                                                    <dt>Media campaign status:</dt>
                                                      <dd><code>1</code> — template</dd>
                                                      <dd><code>2</code> — moderation
                                                      <dd><code>3</code> — rejected (with the possibility to resubmit for moderation)</dd>
                                                      <dd><code>4</code> — ready for launch</dd>
                                                      <dd><code>5</code> — scheduled</dd>
                                                      <dd><code>6</code> — running</dd>
                                                      <dd><code>7</code> — completed</dd>
                                                      <dd><code>8</code> — refused</dd>
                                                      <dd><code>9</code> — paused by seller</dd>
                                                      <dd><code>10</code> — paused due to daily limit</dd>
                                                      <dd><code>11</code> — paused</dd>
                                                    </dl>
                                                type: integer
                                            count:
                                                description: Number of media campaigns
                                                type: integer
                            example:
                                all: 6
                                adverts:
                                    type: 2
                                    status: 7
                                    count: 2
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v1/adverts:
        servers:
            - url: https://advert-media-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: List of media campaigns
            description: |
                The method allows to get the list of media campaigns of the seller

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 10 requests | 100 milliseconds | 10 requests |
                </div>
            tags:
                - Media
            parameters:
                - name: status
                  in: query
                  description: |
                      <dl>
                      <dt>Media campaign status:</dt>
                        <dd><code>1</code> — template</dd>
                        <dd><code>2</code> — moderation
                        <dd><code>3</code> — rejected (with the possibility to resubmit for moderation)</dd>
                        <dd><code>4</code> — ready for launch</dd>
                        <dd><code>5</code> — scheduled</dd>
                        <dd><code>6</code> — running</dd>
                        <dd><code>7</code> — completed</dd>
                        <dd><code>8</code> — refused</dd>
                        <dd><code>9</code> — paused by seller</dd>
                        <dd><code>10</code> — paused due to daily limit</dd>
                        <dd><code>11</code> — paused</dd>
                      </dl>
                  schema:
                      type: integer
                      example: 1
                - name: type
                  in: query
                  description: |
                      <dl>
                      <dt>Media campaign type:</dt>
                      <dd><code>1</code> — daily basis</dd>
                      <dd><code>2</code> — views basis</dd>
                      </dl>
                  schema:
                      type: integer
                      example: 1
                - name: limit
                  in: query
                  description: Number of campaigns in the response
                  schema:
                      type: integer
                      example: 1
                - name: offset
                  in: query
                  description: Offset relative to the first media campaign
                  schema:
                      type: integer
                      example: 1
                - name: order
                  in: query
                  description: |
                      <dl>
                      <dt>The order in which the response is displayed:</dt>
                      <dd><code>create</code> — by time of media campaign creation</dd>
                      <dd><code>id</code> — by ID of media campaign creation</dd>
                      </dl>
                  schema:
                      type: string
                      example: id
                - name: direction
                  in: query
                  description: |
                      <dl>
                      <dt>Sorting order:</dt>
                      <dd><code>desc</code> — upward</dd>
                      <dd><code>asc</code> — smaller to larger</dd>
                      </dl>
                  schema:
                      type: string
                      example: desc
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        advertId:
                                            description: Media campaign ID
                                            type: integer
                                        name:
                                            description: Media campaign name
                                            type: string
                                        brand:
                                            description: Brand name
                                            type: string
                                        type:
                                            description: |
                                                <dl>
                                                <dt>Media campaign type:</dt>
                                                <dd><code>1</code> — daily basis</dd>
                                                <dd><code>2</code> — views basis</dd>
                                                </dl>
                                            type: integer
                                        status:
                                            description: |
                                                <dl>
                                                <dt>Media campaign status:</dt>
                                                  <dd><code>1</code> — template</dd>
                                                  <dd><code>2</code> — moderation
                                                  <dd><code>3</code> — rejected (with the possibility to resubmit for moderation)</dd>
                                                  <dd><code>4</code> — ready for launch</dd>
                                                  <dd><code>5</code> — scheduled</dd>
                                                  <dd><code>6</code> — running</dd>
                                                  <dd><code>7</code> — completed</dd>
                                                  <dd><code>8</code> — refused</dd>
                                                  <dd><code>9</code> — paused by seller</dd>
                                                  <dd><code>10</code> — paused due to daily limit</dd>
                                                  <dd><code>11</code> — paused</dd>
                                                </dl>
                                            type: integer
                                        createTime:
                                            description: Time of media campaign creation
                                            type: string
                                            format: date-time
                                        endTime:
                                            description: 'Time of completion of the media campaign '
                                            type: string
                                            format: date-time
                            example:
                                - advertId: 123456
                                  name: тост
                                  brand: goosb
                                  type: 2
                                  status: 8
                                  createTime: '2023-03-25T20:35:57.116943+03:00'
                                - advertId: 54321
                                  name: тест
                                  brand: bobr
                                  type: 1
                                  status: 7
                                  createTime: '2023-07-24T16:48:20.935599+03:00'
                                  endTime: '2023-07-25T20:35:50.104978Z'
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /adv/v1/advert:
        servers:
            - url: https://advert-media-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Information about media campaign
            description: |
                The method allows to get information about a single media campaign

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 10 requests | 100 milliseconds | 10 requests |
                </div>
            tags:
                - Media
            parameters:
                - name: id
                  in: query
                  description: Media campaign ID
                  schema:
                      type: integer
                      example: 23569
                  required: true
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    advertId:
                                        description: Media campaign ID
                                        type: integer
                                    name:
                                        description: Media campaign name
                                        type: string
                                    brand:
                                        description: Brand name
                                        type: string
                                    type:
                                        description: |
                                            <dl>
                                            <dt>Media campaign type:</dt>
                                            <dd><code>1</code> — daily basis</dd>
                                            <dd><code>2</code> — views basis</dd>
                                            </dl>
                                        type: integer
                                    status:
                                        description: |
                                            <dl>
                                            <dt>Media campaign status:</dt>
                                              <dd><code>1</code> — template</dd>
                                              <dd><code>2</code> — moderation
                                              <dd><code>3</code> — rejected (with the possibility to resubmit for moderation)</dd>
                                              <dd><code>4</code> — ready for launch</dd>
                                              <dd><code>5</code> — scheduled</dd>
                                              <dd><code>6</code> — running</dd>
                                              <dd><code>7</code> — completed</dd>
                                              <dd><code>8</code> — refused</dd>
                                              <dd><code>9</code> — paused by seller</dd>
                                              <dd><code>10</code> — paused due to daily limit</dd>
                                              <dd><code>11</code> — paused</dd>
                                            </dl>
                                        type: integer
                                    createTime:
                                        description: Time of media campaign creation
                                        type: string
                                        format: date-time
                                    extended:
                                        type: object
                                        properties:
                                            reason:
                                                description: Moderator's remark
                                                nullable: true
                                                type: string
                                            expenses:
                                                description: Expenses
                                                type: integer
                                            from:
                                                description: Start of media campaign displays
                                                type: string
                                                format: date-time
                                            to:
                                                description: End of media campaign displays
                                                type: string
                                                format: date-time
                                            updated_at:
                                                description: Time of change in media campaign
                                                type: string
                                                format: date-time
                                            price:
                                                description: Cost of placement by day (for type 1)
                                                type: integer
                                            budget:
                                                description: Budget balance (for type 2)
                                                type: integer
                                            operation:
                                                description: Source of charge-off (1 - Balance Sheet, 2 - Account)
                                                type: integer
                                            contract_id:
                                                description: Contract ID (for contracted sellers)
                                                type: integer
                                    items:
                                        description: |
                                            Banner information.
                                            <br>
                                            The response may not contain all fields, it depends on your media campaign configuration.
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    description: Banner ID
                                                    type: integer
                                                name:
                                                    description: Brand
                                                    type: string
                                                status:
                                                    description: Status (same as media campaign status)
                                                    type: integer
                                                place:
                                                    description: Placement on the page
                                                    type: integer
                                                budget:
                                                    description: Budget
                                                    type: integer
                                                daily_limit:
                                                    description: Daily limit (for display banners)
                                                    type: integer
                                                category_name:
                                                    description: Category name
                                                    type: string
                                                cpm:
                                                    description: Bid
                                                    type: integer
                                                url:
                                                    description: The URL of the page the user lands on when they click on the banner
                                                    type: string
                                                advert_type:
                                                    description: |
                                                        <dl>
                                                        <dt>Campaign type:</dt>
                                                        <dd><code>1</code> — banner</dd>
                                                        <dd><code>2</code> — pop-up menu</dd>
                                                        <dd><code>3</code> — mailings</dd>
                                                        <dd><code>4</code> — social networks</dd>
                                                        <dd><code>5</code> — push notification in WB app</dd>
                                                        </dl>
                                                    type: integer
                                                created_at:
                                                    description: Banner creation date
                                                    format: date-time
                                                    type: string
                                                updated_at:
                                                    description: Banner update date
                                                    format: date-time
                                                    type: string
                                                date_from:
                                                    description: Banner start date
                                                    format: date-time
                                                    type: string
                                                date_to:
                                                    description: Banner stop date
                                                    format: date-time
                                                    type: string
                                                nms:
                                                    description: WB articles
                                                    type: array
                                                    items:
                                                        type: integer
                                                bottomText1:
                                                    description: Text under the banner
                                                    type: string
                                                bottomText2:
                                                    description: Text under the banner, second string
                                                    type: string
                                                message:
                                                    description: Notification or mailing text
                                                    type: string
                                                additionalSettings:
                                                    description: |
                                                        Additional information.
                                                        <dl>
                                                        <dt>Mailing format:</dt>
                                                        <dd><code>1</code> — common</dd>
                                                        <dd><code>2</code> — segment</dd>
                                                        <dd><code>3</code> — unique</dd>
                                                        </dl>
                                                        <dl>
                                                        <dt>Social network:</dt>
                                                        <dd><code>1</code> — VK (<a href="vk.ru">vk.ru</a>)</dd>
                                                        <dd><code>2</code> — OK (<a href="ok.ru">ok.ru</a>)</dd>
                                                        </dl>
                                                    type: integer
                                                receiversCount:
                                                    description: Number of push notification recipients
                                                    type: integer
                                                subject_id:
                                                    description: Parent category ID for the good
                                                    type: integer
                                                subject_name:
                                                    description: Parent category name for the good
                                                    type: string
                                                action_name:
                                                    description: Promo name
                                                    type: string
                                                show_hours:
                                                    description: Display time
                                                    type: array
                                                    items:
                                                        type: object
                                                        properties:
                                                            From:
                                                                description: Start time
                                                                type: integer
                                                            To:
                                                                description: End time
                                                                type: integer
                                                Erid:
                                                    description: Unique campaign ID for the ad data operator
                                                    type: string
                                example:
                                    advertId: 23569
                                    name: Реклама денег принеси
                                    brand: Plank
                                    type: 2
                                    status: 11
                                    createTime: '2023-07-19T11:13:41.195138+03:00'
                                    extended:
                                        reason: Для возобновления показов пополните бюджет медиакампании
                                        expenses: 10000
                                        from: '2023-07-19T12:05:35.847348Z'
                                        to: '2123-07-20T08:14:13.079176+03:00'
                                        updated_at: '2023-07-21T13:25:31.129766+03:00'
                                        price: 0
                                        budget: 0
                                        operation: 1
                                        contract_id: 0
                                    items:
                                        - id: 68080
                                          name: Унисон
                                          status: 7
                                          place: 2
                                          budget: 650000
                                          daily_limit: 500
                                          category_name: Главная
                                          cpm: 351
                                          url: https://www.wildberries.ru/promotions/ssylka-na-akciyou
                                          advert_type: 1
                                          created_at: '2023-11-01T15:40:46.86165+03:00'
                                          updated_at: '2023-11-08T23:44:33.248229+03:00'
                                          date_from: '2023-11-01T16:05:22.286002Z'
                                          date_to: '2023-11-09T17:27:32.745869+03:00'
                                          nms:
                                              - 123456
                                              - 11111111
                                          bottomText1: string
                                          bottomText2: string
                                          message: string
                                          additionalSettings: 1
                                          receiversCount: 1
                                          subject_id: 6945
                                          subject_name: Бельё
                                          action_name: Распродажа! Создай себе домашний уют!
                                          show_hours:
                                              - From: 7
                                                To: 8
                                          Erid: string
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/calendar/promotions:
        servers:
            - url: https://dp-calendar-api.wildberries.ru
        get:
            tags:
                - Promotions Calendar
            security:
                - HeaderApiKey: []
            summary: Promotions List
            description: |
                Returns a promotions list with dates and times of occurrence

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Promotions Calendar</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 6 seconds | 10 requests | 600 milliseconds | 5 requests |

                </div>
            parameters:
                - $ref: '#/components/parameters/startDateTime'
                - $ref: '#/components/parameters/endDateTime'
                - $ref: '#/components/parameters/allPromo'
                - $ref: '#/components/parameters/limitPromotion'
                - $ref: '#/components/parameters/offset'
            responses:
                '200':
                    $ref: '#/components/responses/PromotionsSuccessResponse'
                '400':
                    $ref: '#/components/responses/ErrorFailedParseData'
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/calendar/promotions/details:
        servers:
            - url: https://dp-calendar-api.wildberries.ru
        get:
            tags:
                - Promotions Calendar
            security:
                - HeaderApiKey: []
            summary: Promotions Details
            description: |
                Returns detailed information about the selected promotions

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Promotions Calendar</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 6 seconds | 10 requests | 600 milliseconds | 5 requests |

                </div>
            parameters:
                - $ref: '#/components/parameters/promotionIDs'
            responses:
                '200':
                    $ref: '#/components/responses/PromotionsGetByIDSuccessResponse'
                '400':
                    $ref: '#/components/responses/ErrorFailedParseData'
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/calendar/promotions/nomenclatures:
        servers:
            - url: https://dp-calendar-api.wildberries.ru
        get:
            tags:
                - Promotions Calendar
            security:
                - HeaderApiKey: []
            summary: List of Products for Participating in the Promotion
            description: |
                Returns a list of products suitable for participation in the promotion.

                Not applicable for auto promotions

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Promotions Calendar</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 6 seconds | 10 requests | 600 milliseconds | 5 requests |

                </div>
            parameters:
                - $ref: '#/components/parameters/promotionID'
                - $ref: '#/components/parameters/inAction'
                - $ref: '#/components/parameters/limitNomenclature'
                - $ref: '#/components/parameters/offset'
            responses:
                '200':
                    $ref: '#/components/responses/ResponsePromotionsGoodsLists'
                '400':
                    $ref: '#/components/responses/ErrorWrongParameters'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '422':
                    $ref: '#/components/responses/ErrParameterValuesIncorrect'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/calendar/promotions/upload:
        servers:
            - url: https://dp-calendar-api.wildberries.ru
        post:
            tags:
                - Promotions Calendar
            security:
                - HeaderApiKey: []
            summary: Add Product to the Promotion
            description: |
                Creates a product upload for the promotion.<br>The upload status can be checked using [separate methods](/openapi/work-with-products#tag/Prices-and-Discounts/paths/~1api~1v2~1history~1tasks/get).

                Not applicable for auto promotions

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Promotions Calendar</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 6 seconds | 10 requests | 600 milliseconds | 5 requests |

                </div>
            requestBody:
                $ref: '#/components/requestBodies/PromotionsSupplierTaskRequest'
            responses:
                '200':
                    $ref: '#/components/responses/UploadSuccessResponse'
                '400':
                    $ref: '#/components/responses/ErrorWrongParameters'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '422':
                    $ref: '#/components/responses/UnprocessableEntity'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/new-feedbacks-questions:
        servers:
            - url: https://feedbacks-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Unseen feedbacks and questions
            description: |
                The method displays information about the seller's unseen feedbacks and questions

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Feedbacks and Questions</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 3 requests | 333 milliseconds | 6 requests |

                </div>
            tags:
                - Questions
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        properties:
                                            hasNewQuestions:
                                                type: boolean
                                                description: Existence of unseen questions  (`true` exist, `false` doesn't exist)
                                                example: true
                                            hasNewFeedbacks:
                                                type: boolean
                                                description: Existence of unseen feedbacks (`true` exist, `false` doesn't exist)
                                                example: false
                                    error:
                                        type: boolean
                                        description: Error presence
                                        example: false
                                    errorText:
                                        type: string
                                        description: Error description
                                        example: ''
                                    additionalErrors:
                                        description: Additional errors
                                        nullable: true
                                        type: array
                                        items:
                                            type: string
                                        example: null
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responsefeedbackErr'
                            examples:
                                FeedbackErr403:
                                    $ref: '#/components/examples/FeedbackErr403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/questions/count-unanswered:
        servers:
            - url: https://feedbacks-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Unanswered questions
            description: |
                The method allows you to get the number of unanswered questions for today and for all time

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Feedbacks and Questions</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 3 requests | 333 milliseconds | 6 requests |

                </div>
            tags:
                - Questions
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        properties:
                                            countUnanswered:
                                                type: integer
                                                description: Number of unanswered questions
                                                example: 24
                                            countUnansweredToday:
                                                type: integer
                                                description: Number of unanswered questions for today
                                                example: 0
                                    error:
                                        type: boolean
                                        description: Error presence
                                        example: false
                                    errorText:
                                        type: string
                                        description: Error description
                                        example: ''
                                    additionalErrors:
                                        description: Additional errors
                                        nullable: true
                                        type: array
                                        items:
                                            type: string
                                        example: null
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responsefeedbackErr'
                            examples:
                                FeedbackErr403:
                                    $ref: '#/components/examples/FeedbackErr403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/questions/count:
        servers:
            - url: https://feedbacks-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Number of questions
            description: |
                The method allows to get the number of questions for requested period

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Feedbacks and Questions</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 3 requests | 333 milliseconds | 6 requests |

                </div>
            tags:
                - Questions
            parameters:
                - name: dateFrom
                  in: query
                  description: The start date of the period in Unix timestamp format
                  schema:
                      type: integer
                      example: 1688465092
                - name: dateTo
                  in: query
                  description: The end date of the period in Unix timestamp format
                  schema:
                      type: integer
                      example: 1688465092
                - name: isAnswered
                  in: query
                  description: |
                      Processed questions (`true`) or unprocessed questions (`false`).<br> If a query parameter is not specified, processed feedbacks will be returned.
                  schema:
                      type: boolean
                      example: false
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: integer
                                        description: Number of questions
                                        example: 77
                                    error:
                                        type: boolean
                                        description: Error presence
                                        example: false
                                    errorText:
                                        type: string
                                        description: Error description
                                        example: ''
                                    additionalErrors:
                                        description: Additional errors
                                        nullable: true
                                        type: array
                                        items:
                                            type: string
                                        example: null
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responsefeedbackErr'
                            examples:
                                IsAnsweredErr400:
                                    $ref: '#/components/examples/IsAnsweredErr400'
                                DateFromErr400:
                                    $ref: '#/components/examples/DateFromErr400'
                                DateToErr400:
                                    $ref: '#/components/examples/DateToErr400'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responsefeedbackErr'
                            examples:
                                FeedbackErr403:
                                    $ref: '#/components/examples/FeedbackErr403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/questions:
        servers:
            - url: https://feedbacks-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Question list
            description: |
                The method allows you to get a list of questions by the specified parameters with pagination and sorting.<br> It is possible to get a maximum of 10,000 questions per query

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Feedbacks and Questions</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 3 requests | 333 milliseconds | 6 requests |

                </div>
            tags:
                - Questions
            parameters:
                - name: isAnswered
                  in: query
                  description: |
                      Answered questions (`true`) or unanswered questions(`false`)
                  schema:
                      type: boolean
                  required: true
                - name: nmId
                  in: query
                  description: WB article
                  schema:
                      type: integer
                - name: take
                  in: query
                  description: |
                      Number of requested questions (the maximum possible value for the parameter is 10,000, and the total amount of `take` and `skip` parameters must not exceed 10,000)
                  schema:
                      type: integer
                  required: true
                - name: skip
                  in: query
                  description: |
                      Number of questions to skip (maximum possible value for the parameter is 10,000, and the total amount of `take` and `skip` parameters must not exceed 10,000)
                  schema:
                      type: integer
                  required: true
                - name: order
                  in: query
                  description: Sorting questions by date (`dateAsc`/`dateDesc`)
                  schema:
                      type: string
                - name: dateFrom
                  in: query
                  description: The start date of the period in Unix timestamp format
                  schema:
                      type: integer
                      example: 1688465092
                - name: dateTo
                  in: query
                  description: The end date of the period in Unix timestamp format
                  schema:
                      type: integer
                      example: 1688465092
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        properties:
                                            countUnanswered:
                                                type: integer
                                                description: Number of pending questions
                                            countArchive:
                                                type: integer
                                                description: Number of questions processed
                                            questions:
                                                description: Array of question structures
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        id:
                                                            type: string
                                                            description: question id
                                                        text:
                                                            type: string
                                                            description: question text
                                                        createdDate:
                                                            type: string
                                                            format: date-time
                                                            description: Date and time the question was created
                                                        state:
                                                            type: string
                                                            description: |
                                                                Question status:
                                                                  - `none` - question rejected by seller (this question doesn't appear on the buyer portal)
                                                                  - `wbRu` - answer provided, the question is displayed on the buyers site
                                                                  - `suppliersPortalSynch` - new question
                                                        answer:
                                                            description: Answer structure
                                                            nullable: true
                                                            type: object
                                                            properties:
                                                                text:
                                                                    type: string
                                                                    description: Answer text
                                                                editable:
                                                                    type: boolean
                                                                    description: Ability to edit answer (`false` - unable, `true` - able to)
                                                                createDate:
                                                                    type: string
                                                                    format: date-time
                                                                    description: Date and time the answer was created
                                                        productDetails:
                                                            type: object
                                                            description: Product structure
                                                            properties:
                                                                nmId:
                                                                    type: integer
                                                                    description: WB article
                                                                imtId:
                                                                    type: integer
                                                                    description: Product card ID
                                                                productName:
                                                                    type: string
                                                                    description: Product name
                                                                supplierArticle:
                                                                    type: string
                                                                    description: Seller's article
                                                                supplierName:
                                                                    type: string
                                                                    description: Seller's name
                                                                brandName:
                                                                    type: string
                                                                    description: Brand name
                                                        wasViewed:
                                                            type: boolean
                                                            description: Check that question was viewed
                                                        isWarned:
                                                            type: boolean
                                                            description: |
                                                                Suspicious question indicator.<br>
                                                                If `true`, the question is published, but on the seller portal, you will see a banner saying **Suspicious message**
                                    error:
                                        type: boolean
                                        description: Error presence
                                        example: false
                                    errorText:
                                        type: string
                                        description: Error description
                                        example: ''
                                    additionalErrors:
                                        description: Additional errors
                                        nullable: true
                                        type: array
                                        items:
                                            type: string
                            example:
                                data:
                                    countUnanswered: 24
                                    countArchive: 508
                                    questions:
                                        - id: 2ncBtX4B9I0UHoornoqG
                                          text: Question text
                                          createdDate: '2022-02-01T11:18:08.769513469Z'
                                          state: suppliersPortalSynch
                                          answer: null
                                          productDetails:
                                              imtId: 11157265
                                              nmId: 14917842
                                              productName: Coffee
                                              supplierArticle: '123401'
                                              supplierName: ' ГП Реклама и услуги'
                                              brandName: Nescafe
                                          wasViewed: false
                                          isWarned: false
                                error: false
                                errorText: ''
                                additionalErrors: null
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responsefeedbackErr'
                            examples:
                                FeedbackErr400:
                                    $ref: '#/components/examples/FeedbackErr400'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responsefeedbackErr'
                            examples:
                                FeedbackErr403:
                                    $ref: '#/components/examples/FeedbackErr403'
                'Response429':
                    $ref: '#/components/responses/Response429'
        patch:
            security:
                - HeaderApiKey: []
            summary: Working with questions
            description: |
                Depending on the request body, you can:
                - View question.
                - Reject question.
                - Answer question or edit the answer.

                It is possible to edit a response to a question within 2 months (60 days), after the response has been submitted and only once.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Feedbacks and Questions</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 3 requests | 333 milliseconds | 6 requests |

                </div>
            tags:
                - Questions
            requestBody:
                content:
                    application/json:
                        schema:
                            oneOf:
                                - type: object
                                  required:
                                      - id
                                      - wasViewed
                                  properties:
                                      id:
                                          description: Question ID
                                          type: string
                                          example: n5um6IUBQOOSTxXoo0gV
                                      wasViewed:
                                          description: Viewed (`true`), not viewed (`false`)
                                          type: boolean
                                          example: true
                                - type: object
                                  required:
                                      - id
                                      - answer
                                      - state
                                  properties:
                                      id:
                                          type: string
                                          description: Question ID
                                          example: n5um6IUBQOOSTxXoo0gV
                                      answer:
                                          type: object
                                          required:
                                              - text
                                          properties:
                                              text:
                                                  type: string
                                                  description: Answer text
                                                  example: answer text
                                      state:
                                          type: string
                                          description: |
                                              - `none` - question rejected by seller (this question doesn't appear on the buyer portal).
                                              - `wbRu` - answer provided, the question is displayed on the buyers site.
                        examples:
                            ViewQuestion:
                                description: View question
                                value:
                                    id: n5um6IUBQOOSTxXoo0gV
                                    wasViewed: true
                            RejectQuestion:
                                description: Reject question
                                value:
                                    id: n5um6IUBQOOSTxXoo0gV
                                    answer:
                                        text: текст ответа
                                    state: none
                            AnswerQuestionOrEditAnswer:
                                description: Answer question or edit the answer
                                value:
                                    id: n5um6IUBQOOSTxXoo0gV
                                    answer:
                                        text: текст ответа
                                    state: wbRu
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        nullable: true
                                    error:
                                        type: boolean
                                        description: Error flag
                                    errorText:
                                        type: string
                                        description: Error description
                                    additionalErrors:
                                        description: Additional errors
                                        nullable: true
                                        type: array
                                        items:
                                            type: string
                            example:
                                data: null
                                error: false
                                errorText: ''
                                additionalErrors: null
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responsefeedbackErr'
                            examples:
                                FeedbackErr400:
                                    $ref: '#/components/examples/FeedbackErr400'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responsefeedbackErr'
                            examples:
                                FeedbackErr403:
                                    $ref: '#/components/examples/FeedbackErr403'
                '404':
                    description: Not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responsefeedbackErr'
                            examples:
                                FeedbackErr404:
                                    $ref: '#/components/examples/FeedbackErr404'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/question:
        servers:
            - url: https://feedbacks-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Get the question by ID
            description: |
                The method allows you to get a question by its ID

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Feedbacks and Questions</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 3 requests | 333 milliseconds | 6 requests |

                </div>
            tags:
                - Questions
            parameters:
                - name: id
                  in: query
                  required: true
                  description: Question ID
                  schema:
                      type: string
                      example: ljAVapEBL38RyMdRln61
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                description: Question ID
                                            text:
                                                type: string
                                                description: Question text
                                            createdDate:
                                                type: string
                                                format: date-time
                                                description: Date and time the question was created
                                            state:
                                                type: string
                                                description: |
                                                    Question status:
                                                      - `none` - on the buyer portal
                                                      - `wbRu` - answer provided, the question is displayed on the buyers site
                                                      - `suppliersPortalSynch`- new question
                                            answer:
                                                description: Answer structure
                                                type: object
                                                properties:
                                                    text:
                                                        type: string
                                                        description: Answer text
                                                    editable:
                                                        type: boolean
                                                        description: Ability to edit answer (`false` - unable, `true` - able to)
                                                    createDate:
                                                        type: string
                                                        format: date-time
                                                        description: Date and time the answer was created
                                            productDetails:
                                                type: object
                                                description: Product structure
                                                properties:
                                                    nmId:
                                                        type: integer
                                                        description: WB article
                                                    imtId:
                                                        type: integer
                                                        description: Product card ID
                                                    productName:
                                                        type: string
                                                        description: Product name
                                                    supplierArticle:
                                                        type: string
                                                        description: Seller's article
                                                    supplierName:
                                                        type: string
                                                        description: Seller's name
                                                    brandName:
                                                        type: string
                                                        description: Brand name
                                            wasViewed:
                                                type: boolean
                                                description: Check that question was viewed
                                            isWarned:
                                                type: boolean
                                                description: |
                                                    Suspicious question indicator.<br>
                                                    If `true`, the question is published, but on the seller portal, you will see a banner saying **Suspicious message**
                                    error:
                                        type: boolean
                                        description: Error presence
                                        example: false
                                    errorText:
                                        type: string
                                        description: Error description
                                        example: ''
                                    additionalErrors:
                                        description: Additional errors
                                        nullable: true
                                        type: array
                                        items:
                                            type: string
                                        example: null
                            example:
                                data:
                                    countUnanswered: 24
                                    countArchive: 508
                                    questions:
                                        - id: 2ncBtX4B9I0UHoornoqG
                                          text: Question text
                                          createdDate: '2022-02-01T11:18:08.769513469Z'
                                          state: suppliersPortalSynch
                                          answer: null
                                          productDetails:
                                              imtId: 11157265
                                              nmId: 14917842
                                              productName: Coffee
                                              supplierArticle: '123401'
                                              supplierName: ' ГП Реклама и услуги'
                                              brandName: Nescafe
                                          wasViewed: false
                                          isWarned: false
                                error: false
                                errorText: ''
                                additionalErrors: null
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responsefeedbackErr'
                            examples:
                                FeedbackErr403:
                                    $ref: '#/components/examples/FeedbackErr403'
                '422':
                    description: Error processing request parameters
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responsefeedbackErr'
                            examples:
                                responseGetQestionByIdErrEx:
                                    $ref: '#/components/examples/ResponseGetQestionByIdErrEx'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/feedbacks/count-unanswered:
        servers:
            - url: https://feedbacks-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Unanswered feedbacks
            description: |
                The method allows you to get the number of unanswered feedbacks for today, for all time and get an estimate of all feedbacks

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Feedbacks and Questions</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 3 requests | 333 milliseconds | 6 requests |

                </div>
            tags:
                - Feedbacks
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        properties:
                                            countUnanswered:
                                                type: integer
                                                description: Number of unanswered feedbacks
                                                example: 1
                                            countUnansweredToday:
                                                type: integer
                                                description: Number of unanswered feedbacks for today
                                                example: 0
                                            valuation:
                                                type: string
                                                description: Average rating of all feedbacks
                                                example: '4.7'
                                    error:
                                        type: boolean
                                        description: Error presence
                                        example: false
                                    errorText:
                                        type: string
                                        description: Error description
                                        example: ''
                                    additionalErrors:
                                        description: Additional errors
                                        nullable: true
                                        type: array
                                        items:
                                            type: string
                                        example: null
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responsefeedbackErr'
                            examples:
                                FeedbackErr403:
                                    $ref: '#/components/examples/FeedbackErr403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/feedbacks/count:
        servers:
            - url: https://feedbacks-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Number of feedbacks
            description: |
                The method allows to get the number of feedbacks

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Feedbacks and Questions</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 3 requests | 333 milliseconds | 6 requests |

                </div>
            tags:
                - Feedbacks
            parameters:
                - name: dateFrom
                  in: query
                  description: The start date of the period in Unix timestamp format
                  schema:
                      type: integer
                      example: 1688465092
                - name: dateTo
                  in: query
                  description: The end date of the period in Unix timestamp format
                  schema:
                      type: integer
                      example: 1688465092
                - name: isAnswered
                  in: query
                  description: |
                      Processed feedbacks (`true`) or unprocessed feedbacks (`false`). If a query parameter is not specified, processed feedbacks s will be returned.
                  schema:
                      type: boolean
                      example: false
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: integer
                                        description: Number of feedbacks
                                        example: 724583
                                    error:
                                        type: boolean
                                        description: Error presence
                                        example: false
                                    errorText:
                                        type: string
                                        description: Error description
                                        example: ''
                                    additionalErrors:
                                        description: Additional errors
                                        nullable: true
                                        type: array
                                        items:
                                            type: string
                                        example: null
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responsefeedbackErr'
                            examples:
                                IsAnsweredErr400:
                                    $ref: '#/components/examples/IsAnsweredErr400'
                                DateFromErr400:
                                    $ref: '#/components/examples/DateFromErr400'
                                DateToErr400:
                                    $ref: '#/components/examples/DateToErr400'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responsefeedbackErr'
                            examples:
                                FeedbackErr403:
                                    $ref: '#/components/examples/FeedbackErr403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/feedbacks:
        servers:
            - url: https://feedbacks-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Feedbacks list
            description: |
                The method allows you to get a list of feedbacks by the specified parameters with pagination and sorting

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Feedbacks and Questions</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 3 requests | 333 milliseconds | 6 requests |

                </div>
            tags:
                - Feedbacks
            parameters:
                - name: isAnswered
                  in: query
                  required: true
                  description: Answered feedbacks (`true`) or unanswered feedbacks (`false`)
                  schema:
                      type: boolean
                      example: false
                - name: nmId
                  in: query
                  description: WB article
                  schema:
                      type: integer
                      example: 5870243
                - name: take
                  in: query
                  required: true
                  description: Number of feedbacks (max. 5 000)
                  schema:
                      type: integer
                      example: 1
                - name: skip
                  in: query
                  required: true
                  description: Number of feedbacks for skip (max. 199990)
                  schema:
                      type: integer
                      example: 0
                - name: order
                  in: query
                  description: Sorting of feedbacks by date (dateAsc/dateDesc)
                  schema:
                      type: string
                      enum:
                          - dateAsc
                          - dateDesc
                - name: dateFrom
                  in: query
                  description: The start date of the period in Unix timestamp format
                  schema:
                      type: integer
                      example: 1688465092
                - name: dateTo
                  in: query
                  description: The end date of the period in Unix timestamp format
                  schema:
                      type: integer
                      example: 1688465092
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        properties:
                                            countUnanswered:
                                                type: integer
                                                description: Number of unanswered feedbacks
                                            countArchive:
                                                type: integer
                                                description: Number of archived feedbacks
                                            feedbacks:
                                                $ref: '#/components/schemas/responseFeedback'
                                    error:
                                        type: boolean
                                        description: Error presence
                                    errorText:
                                        type: string
                                        description: Error description
                                    additionalErrors:
                                        description: Additional errors
                                        nullable: true
                                        type: array
                                        items:
                                            type: string
                            example:
                                data:
                                    countUnanswered: 52
                                    countArchive: 1000
                                    feedbacks:
                                        - id: YX52RZEBhH9mrcYdEJuD
                                          text: Спасибо, всё подошло
                                          pros: Удобный
                                          cons: Нет
                                          productValuation: 5
                                          createdDate: '2024-09-26T10:20:48+03:00'
                                          answer:
                                              text: Пожалуйста. Ждём вас снова!
                                              state: wbRu
                                              editable: false
                                          state: wbRu
                                          productDetails:
                                              imtId: 123456789
                                              nmId: 987654321
                                              productName: ВАЗ
                                              supplierArticle: DP02/черный
                                              supplierName: ГП Реклама и услуги
                                              brandName: Бест Трикотаж
                                              size: '0'
                                          video:
                                              previewImage: https://videofeedback01.wbbasket.ru/8defc853-7f62-4d6d-b236-8a16cfb63128/preview.webp
                                              link: https://videofeedback01.wbbasket.ru/8defc853-7f62-4d6d-b236-8a16cfb63128/index.m3u8
                                              durationSec: 10
                                          wasViewed: true
                                          photoLinks:
                                              - fullSize: https://feedback04.wbbasket.ru/vol1333/part133337/123456789/photos/fs.jpg
                                                miniSize: https://feedback04.wbbasket.ru/vol1333/part133337/123456789/photos/ms.jpg
                                              - fullSize: https://feedback04.wbbasket.ru/vol1508/part150887/123456789/photos/fs.jpg
                                                miniSize: https://feedback04.wbbasket.ru/vol1508/part150887/123456789/photos/ms.jpg
                                              - fullSize: https://feedback04.wbbasket.ru/vol1486/part148682/123456789/photos/fs.jpg
                                                miniSize: https://feedback04.wbbasket.ru/vol1486/part148682/123456789/photos/ms.jpg
                                          userName: Николай
                                          matchingSize: ok
                                          isAbleSupplierFeedbackValuation: false
                                          supplierFeedbackValuation: 1
                                          isAbleSupplierProductValuation: false
                                          supplierProductValuation: 2
                                          isAbleReturnProductOrders: false
                                          returnProductOrdersDate: '2024-08-20T16:39:49Z'
                                          bables:
                                              - цена
                                          lastOrderShkId: 123456789
                                          lastOrderCreatedAt: '2024-08-12T10:20:48+03:00'
                                          color: colorless
                                          subjectId: 219
                                          subjectName: Футболки-поло
                                          parentFeedbackId: null
                                          childFeedbackId: bIjTCZDvJni7NGnLbUlf
                                error: false
                                errorText: ''
                                additionalErrors: null
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responsefeedbackErr'
                            examples:
                                FeedbackErr400:
                                    $ref: '#/components/examples/FeedbackErr400'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responsefeedbackErr'
                            examples:
                                FeedbackErr403:
                                    $ref: '#/components/examples/FeedbackErr403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/supplier-valuations:
        servers:
            - url: https://feedbacks-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Get lists of reasons for complaints about the feedback and product issues
            description: |
                Returns lists of reasons for complaints and product issues

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Feedbacks and Questions</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 3 requests | 333 milliseconds | 6 requests |

                </div>
            tags:
                - Feedbacks
            parameters:
                - name: X-Locale
                  in: header
                  schema:
                      type: string
                      example: ru
                  description: Choose the language for the response fields values (`ru` - Russian, `en` - English, `zh` - Chinese)
            responses:
                '200':
                    description: Lists of reasons for complaints and product issues
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        description: Data
                                        type: object
                                        properties:
                                            feedbackValuations:
                                                description: Reasons for complaints. Look Response samples
                                                type: object
                                                properties:
                                                    '1':
                                                        type: string
                                                    '2':
                                                        type: string
                                                    '3':
                                                        type: string
                                                    '4':
                                                        type: string
                                                    '5':
                                                        type: string
                                                    '6':
                                                        type: string
                                                    '7':
                                                        type: string
                                            productValuations:
                                                description: Product issues. Look Response samples
                                                type: object
                                                properties:
                                                    '1':
                                                        type: string
                                                    '2':
                                                        type: string
                                                    '3':
                                                        type: string
                                                    '4':
                                                        type: string
                                    error:
                                        type: boolean
                                        description: Error presence
                                    errorText:
                                        type: string
                                        description: Error description
                                    additionalErrors:
                                        description: Additional errors
                                        nullable: true
                                        type: array
                                        items:
                                            type: string
                            example:
                                data:
                                    feedbackValuations:
                                        '1': Отзыв не относится к товару
                                        '2': Отзыв оставили конкуренты
                                        '3': Спам
                                        '4': Нецензурное содержимое в фото
                                        '5': Нецензурная лексика
                                        '6': Фото не имеет отношения к товару
                                        '7': Отзыв с политическим контекстом
                                    productValuations:
                                        '1': Повредили при доставке
                                        '2': Товар подменили
                                        '3': Случайно отправил не тот товар и хочу его вернуть
                                        '4': Товар вернули после эксплуатации
                                error: false
                                errorText: ''
                                additionalErrors: null
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responsefeedbackErr'
                            examples:
                                FeedbackErr403:
                                    $ref: '#/components/examples/FeedbackErr403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/feedbacks/actions:
        servers:
            - url: https://feedbacks-api.wildberries.ru
        post:
            tags:
                - Feedbacks
            security:
                - HeaderApiKey: []
            summary: File a complaint about the feedback, report a product issue
            description: |
                Allows submitting a complaint about the feedback and/or reporting a product issue from the feedback.
                <br>
                There is no validation by <b>feedback ID</b>: if an incorrect value is provided in the request, you will not receive an error.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Feedbacks and Questions</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 3 requests | 333 milliseconds | 6 requests |

                </div>
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - id
                            properties:
                                id:
                                    type: string
                                    description: Feedback ID
                                    example: J2FMRjUj6hwvwCElqssz
                                supplierFeedbackValuation:
                                    type: integer
                                    description: Reason for feedback complaint <br> Can be obtained from the `feedbackValuations` field, a method for <a href="./user-communication#tag/Feedbacks/paths/~1api~1v1~1supplier-valuations/get">obtaining lists of product issues and reasons for complaint about the feedback</a>.
                                    example: 1
                                supplierProductValuation:
                                    type: integer
                                    description: Description of the product problem <br> Can be obtained from the `productValuations` field, a method for <a href="./user-communication#tag/Feedbacks/paths/~1api~1v1~1supplier-valuations/get">obtaining lists of product issues and reasons for complaint about the feedback</a>
                                    example: 1
            responses:
                '204':
                    description: Success
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/feedbacks/answer:
        servers:
            - url: https://feedbacks-api.wildberries.ru
        post:
            tags:
                - Feedbacks
            security:
                - HeaderApiKey: []
            summary: Reply to feedback
            description: |
                Allows you to respond to the feedback.
                 <br>
                 There is no validation by <b>feedback ID</b>: if an incorrect value is provided in the request, you will not receive an error.

                 <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Feedbacks and Questions</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 3 requests | 333 milliseconds | 6 requests |

                </div>
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - id
                                - text
                            properties:
                                id:
                                    type: string
                                    description: Feedback ID
                                    example: J2FMRjUj6hwvwCElqssz
                                text:
                                    type: string
                                    description: Reply text
                                    example: Спасибо за Ваш отзыв!
                                    minimum: 2
                                    maximum: 5000
            responses:
                '204':
                    description: Success
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
        patch:
            tags:
                - Feedbacks
            security:
                - HeaderApiKey: []
            summary: Edit response to feedback
            description: |
                Allows you to edit an already sent response to the feedback.
                <br>
                You can edit the response only once within 60 days.
                <br>
                There is no validation by <b>feedback ID</b>: if an incorrect value is provided in the request, you will not receive an error.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Feedbacks and Questions</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 3 requests | 333 milliseconds | 6 requests |

                </div>
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - id
                                - text
                            properties:
                                id:
                                    type: string
                                    description: Feedback ID
                                    example: J2FMRjUj6hwvwCElqssz
                                text:
                                    type: string
                                    description: Reply text
                                    example: Спасибо за Ваш отзыв, он очень важен для нас!
                                    minimum: 2
                                    maximum: 5000
            responses:
                '204':
                    description: Success
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/feedbacks/order/return:
        servers:
            - url: https://feedbacks-api.wildberries.ru
        post:
            security:
                - HeaderApiKey: []
            summary: Return product by feedback ID
            description: |
                The method allows requesting a return for a product for which a feedback has been left.
                <br>Return is available for feedbacks with `"isAbleReturnProductOrders": true`

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Feedbacks and Questions</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 3 requests | 333 milliseconds | 6 requests |

                </div>
            tags:
                - Feedbacks
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                feedbackId:
                                    type: string
                                    description: Feedback ID
                        example:
                            feedbackId: absdfgerrrfff1234
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        nullable: true
                                    error:
                                        type: boolean
                                        description: Error presence
                                    errorText:
                                        type: string
                                        description: Error description
                                    additionalErrors:
                                        description: Additional errors
                                        nullable: true
                                        type: array
                                        items:
                                            type: string
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responsefeedbackErr'
                            examples:
                                FeedbackErr400:
                                    $ref: '#/components/examples/ResponseDoNotGetFeedback400'
                                RequestBodyErr400:
                                    $ref: '#/components/examples/RequestBodyErr400'
                                RequestIDErr400:
                                    $ref: '#/components/examples/RequestIDErr400'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '422':
                    description: Error processing request parameters
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responsefeedbackErr'
                            examples:
                                responseInaccessibleBackGoodError422:
                                    $ref: '#/components/examples/responseInaccessibleBackGoodError422'
                                responseUnsuccessfullyBackGoodError422:
                                    $ref: '#/components/examples/responseUnsuccessfullyBackGoodError422'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/feedback:
        servers:
            - url: https://feedbacks-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Get the feedback by ID
            description: |
                The method allows you to get a feedback by its ID

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Feedbacks and Questions</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 3 requests | 333 milliseconds | 6 requests |

                </div>
            tags:
                - Feedbacks
            parameters:
                - name: id
                  in: query
                  required: true
                  description: Feedback ID
                  schema:
                      type: string
                      example: G7Y9Y1kBAtKOitoBT_lV
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                description: Feedback ID
                                            userName:
                                                type: string
                                                description: Name of the feedback author
                                                nullable: false
                                            pros:
                                                type: string
                                                description: Product pros
                                                nullable: false
                                            cons:
                                                type: string
                                                description: Product cons
                                                nullable: false
                                            matchingSize:
                                                type: string
                                                description: |
                                                    Compliance of the declared size with the real one.
                                                    <br>Possible values:
                                                    - ` ` - for dimensionless goods
                                                    - `ок` - matches to the size
                                                    - `smaller` - size is smaller
                                                    - `bigger` - size is bigger
                                            text:
                                                type: string
                                                description: Feedback text
                                            productValuation:
                                                type: integer
                                                description: Product rate
                                            createdDate:
                                                type: string
                                                format: date-time
                                                description: Date and time the feedback was created
                                            answer:
                                                nullable: true
                                                type: object
                                                description: Reply structure
                                                properties:
                                                    text:
                                                        type: string
                                                        description: Reply text
                                                    state:
                                                        type: string
                                                        description: |
                                                            Status:
                                                              - `none` - new
                                                              - `wbRu` - displayed on the site
                                                              - `reviewRequired` - response being reviewed
                                                              - `rejected` - response rejected
                                                    editable:
                                                        type: boolean
                                                        description: Whether the answer can be edited.<br>  <code>false</code> - can't be, <code>true</code> - can be
                                            state:
                                                type: string
                                                description: |
                                                    Feedback state:
                                                      - `none` - not processed (new)
                                                      - `wbRu` - processed
                                            productDetails:
                                                description: Product structure
                                                type: object
                                                properties:
                                                    nmId:
                                                        type: integer
                                                        description: WB article
                                                    imtId:
                                                        type: integer
                                                        description: Product card ID
                                                    productName:
                                                        type: string
                                                        description: Product name
                                                    supplierArticle:
                                                        type: string
                                                        nullable: true
                                                        description: Seller's article
                                                    supplierName:
                                                        type: string
                                                        nullable: true
                                                        description: Seller's name
                                                    brandName:
                                                        type: string
                                                        nullable: true
                                                        description: Brand name
                                                    size:
                                                        type: string
                                                        description: Product size (`techSize' in the product card)
                                            photoLinks:
                                                nullable: true
                                                description: Array of structure of images
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        fullSize:
                                                            type: string
                                                            description: Link of full-size images
                                                        miniSize:
                                                            type: string
                                                            description: Link of small-size images
                                            video:
                                                nullable: true
                                                description: Video structure
                                                type: object
                                                properties:
                                                    previewImage:
                                                        type: string
                                                        description: Video preview image link
                                                    link:
                                                        type: string
                                                        description: Link to the playlist video file (available through hls protocol)
                                                    duration_sec:
                                                        type: integer
                                                        description: Video duration
                                            wasViewed:
                                                type: boolean
                                                description: Presence of feedback viewed
                                            isAbleSupplierFeedbackValuation:
                                                description: Is the feedback rating available to the seller (`true` - available, `false` - not available)
                                                type: boolean
                                            supplierFeedbackValuation:
                                                description: Feedback rating left by the seller
                                                type: integer
                                            isAbleSupplierProductValuation:
                                                description: Is the product rating available to the seller (`true` - available, `false` - not available)
                                                type: boolean
                                            supplierProductValuation:
                                                description: Product rating left by the seller
                                                type: integer
                                            isAbleReturnProductOrders:
                                                description: Is the product return option available (false - no, true - yes)
                                                type: boolean
                                            returnProductOrdersDate:
                                                description: Date and time when a response with status code 200 was received for the return request.
                                                type: string
                                            bables:
                                                nullable: true
                                                description: List of customer tags
                                                type: array
                                                items:
                                                    type: string
                                            lastOrderShkId:
                                                type: integer
                                                description: Barcode of the product
                                            lastOrderCreatedAt:
                                                type: string
                                                description: Date of purchase
                                            color:
                                                type: string
                                                description: Product color
                                            subjectId:
                                                type: integer
                                                description: Subject ID
                                            subjectName:
                                                type: string
                                                description: Subject name
                                            parentFeedbackId:
                                                type: string
                                                description: ID of the original feedback (`null` if this feedback is original)
                                                nullable: true
                                            childFeedbackId:
                                                type: string
                                                nullable: true
                                                description: ID of the updated feedback (`null` if this feedback is updated)
                                    error:
                                        type: boolean
                                        description: Error presence
                                    errorText:
                                        type: string
                                        description: Error description
                                    additionalErrors:
                                        description: Additional errors
                                        nullable: true
                                        type: array
                                        items:
                                            type: string
                            example:
                                data:
                                    id: YX52RZEBhH9mrcYdEJuD
                                    text: Спасибо, всё подошло
                                    pros: Удобный
                                    cons: Нет
                                    productValuation: 5
                                    createdDate: '2024-09-26T10:20:48+03:00'
                                    answer:
                                        text: Пожалуйста. Ждём вас снова!
                                        state: wbRu
                                        editable: false
                                    state: wbRu
                                    productDetails:
                                        imtId: 123456789
                                        nmId: 987654321
                                        productName: ВАЗ
                                        supplierArticle: DP02/черный
                                        supplierName: ГП Реклама и услуги
                                        brandName: Бест Трикотаж
                                        size: '0'
                                    video:
                                        previewImage: https://videofeedback01.wbbasket.ru/8defc853-7f62-4d6d-b236-8a16cfb63128/preview.webp
                                        link: https://videofeedback01.wbbasket.ru/8defc853-7f62-4d6d-b236-8a16cfb63128/index.m3u8
                                        durationSec: 10
                                    wasViewed: true
                                    photoLinks:
                                        - fullSize: https://feedback04.wbbasket.ru/vol1333/part133337/123456789/photos/fs.jpg
                                          miniSize: https://feedback04.wbbasket.ru/vol1333/part133337/123456789/photos/ms.jpg
                                        - fullSize: https://feedback04.wbbasket.ru/vol1508/part150887/123456789/photos/fs.jpg
                                          miniSize: https://feedback04.wbbasket.ru/vol1508/part150887/123456789/photos/ms.jpg
                                        - fullSize: https://feedback04.wbbasket.ru/vol1486/part148682/123456789/photos/fs.jpg
                                          miniSize: https://feedback04.wbbasket.ru/vol1486/part148682/123456789/photos/ms.jpg
                                    userName: Николай
                                    matchingSize: ok
                                    isAbleSupplierFeedbackValuation: false
                                    supplierFeedbackValuation: 1
                                    isAbleSupplierProductValuation: false
                                    supplierProductValuation: 2
                                    isAbleReturnProductOrders: false
                                    returnProductOrdersDate: '2024-08-20T16:39:49Z'
                                    bables:
                                        - цена
                                    lastOrderShkId: 123456789
                                    lastOrderCreatedAt: '2024-08-12T10:20:48+03:00'
                                    color: colorless
                                    subjectId: 219
                                    subjectName: Футболки-поло
                                    parentFeedbackId: null
                                    childFeedbackId: bIjTCZDvJni7NGnLbUlf
                                error: false
                                errorText: ''
                                additionalErrors: null
                'Response401':
                    $ref: '#/components/responses/Response401'
                '422':
                    description: Error processing request parameters
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responsefeedbackErr'
                            examples:
                                ResponseGetFeedbackByIdErrEx:
                                    $ref: '#/components/examples/ResponseGetFeedbackByIdErrEx'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/feedbacks/archive:
        servers:
            - url: https://feedbacks-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: List of archived feedbacks
            description: |
                The method allows you to get a list of archived feedbacks. <br>
                The feedback becomes archived if:
                  - A response to the feedback is received.
                  - No response to the feedback is received within 30 days.
                  - The feedback contains no text or photos.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Feedbacks and Questions</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 3 requests | 333 milliseconds | 6 requests |

                </div>
            tags:
                - Feedbacks
            parameters:
                - name: nmId
                  in: query
                  description: WB article
                  schema:
                      type: integer
                      example: 14917842
                - name: take
                  in: query
                  required: true
                  description: Number of feedbacks (max. 5 000)
                  schema:
                      type: integer
                      example: 1
                - name: skip
                  in: query
                  required: true
                  description: Number of feedbacks for skip
                  schema:
                      type: integer
                      example: 0
                - name: order
                  in: query
                  description: Sorting of feedbacks by date (dateAsc/dateDesc)
                  schema:
                      type: string
                      enum:
                          - dateAsc
                          - dateDesc
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        properties:
                                            feedbacks:
                                                $ref: '#/components/schemas/responseFeedback'
                                    error:
                                        type: boolean
                                        description: Error presence
                                    errorText:
                                        type: string
                                        description: Error description
                                    additionalErrors:
                                        description: Additional errors
                                        nullable: true
                                        type: array
                                        items:
                                            type: string
                            example:
                                data:
                                    feedbacks:
                                        - id: YX52RZEBhH9mrcYdEJuD
                                          text: Спасибо, всё подошло
                                          pros: Удобный
                                          cons: Нет
                                          productValuation: 5
                                          createdDate: '2024-09-26T10:20:48+03:00'
                                          answer:
                                              text: Пожалуйста. Ждём вас снова!
                                              state: wbRu
                                              editable: false
                                          state: wbRu
                                          productDetails:
                                              imtId: 123456789
                                              nmId: 987654321
                                              productName: ВАЗ
                                              supplierArticle: DP02/черный
                                              supplierName: ГП Реклама и услуги
                                              brandName: Бест Трикотаж
                                              size: '0'
                                          video:
                                              previewImage: https://videofeedback01.wbbasket.ru/8defc853-7f62-4d6d-b236-8a16cfb63128/preview.webp
                                              link: https://videofeedback01.wbbasket.ru/8defc853-7f62-4d6d-b236-8a16cfb63128/index.m3u8
                                              durationSec: 10
                                          wasViewed: true
                                          photoLinks:
                                              - fullSize: https://feedback04.wbbasket.ru/vol1333/part133337/123456789/photos/fs.jpg
                                                miniSize: https://feedback04.wbbasket.ru/vol1333/part133337/123456789/photos/ms.jpg
                                              - fullSize: https://feedback04.wbbasket.ru/vol1508/part150887/123456789/photos/fs.jpg
                                                miniSize: https://feedback04.wbbasket.ru/vol1508/part150887/123456789/photos/ms.jpg
                                              - fullSize: https://feedback04.wbbasket.ru/vol1486/part148682/123456789/photos/fs.jpg
                                                miniSize: https://feedback04.wbbasket.ru/vol1486/part148682/123456789/photos/ms.jpg
                                          userName: Николай
                                          matchingSize: ok
                                          isAbleSupplierFeedbackValuation: false
                                          supplierFeedbackValuation: 1
                                          isAbleSupplierProductValuation: false
                                          supplierProductValuation: 2
                                          isAbleReturnProductOrders: false
                                          returnProductOrdersDate: '2024-08-20T16:39:49Z'
                                          bables:
                                              - цена
                                          lastOrderShkId: 123456789
                                          lastOrderCreatedAt: '2024-08-12T10:20:48+03:00'
                                          color: colorless
                                          subjectId: 219
                                          subjectName: Футболки-поло
                                          parentFeedbackId: null
                                          childFeedbackId: bIjTCZDvJni7NGnLbUlf
                                error: false
                                errorText: ''
                                additionalErrors: null
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responsefeedbackErr'
                            examples:
                                FeedbackErr400:
                                    $ref: '#/components/examples/FeedbackErr400'
                'Response401':
                    $ref: '#/components/responses/Response401'
                '403':
                    description: Access denied
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/responsefeedbackErr'
                            examples:
                                FeedbackErr403:
                                    $ref: '#/components/examples/FeedbackErr403'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/templates:
        servers:
            - url: https://feedbacks-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Get response templates
            description: |
                The method allows to get templates of responses to feedbacks/questions

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Feedbacks and Questions</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 3 requests | 333 milliseconds | 6 requests |

                </div>
            tags:
                - Response Templates
            parameters:
                - name: templateType
                  in: query
                  schema:
                      type: integer
                      example: 1
                  description: |
                      `1` - templates for feedbacks<br> `2` - templates for questions
                  required: true
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: '#/components/schemas/Response200'
                                    - $ref: '#/components/schemas/ResponseErrorTemplate'
                            examples:
                                Response200:
                                    $ref: '#/components/examples/Response200'
                                IncorrectTemplateType:
                                    $ref: '#/components/examples/IncorrectTemplateType'
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
        post:
            security:
                - HeaderApiKey: []
            summary: Create a template
            description: |
                The method allows to create a response template for feedback/question. <br>
                A total of 20 templates can be created, 10 for feedback and 10 for questions.<br>
                Any characters are acceptable

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Feedbacks and Questions</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 3 requests | 333 milliseconds | 6 requests |

                </div>
            tags:
                - Response Templates
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - name
                                - templateType
                                - text
                            properties:
                                name:
                                    type: string
                                    description: Template name (1 to 100 characters)
                                templateType:
                                    type: integer
                                    description: |
                                        Templates type <br> `1` - templates for feedback<br> `2` - templates for questions
                                text:
                                    type: string
                                    description: Template text (from 2 to 1000 characters)
                            example:
                                name: name
                                templateType: 1
                                text: text
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: '#/components/schemas/PostTemplateOK'
                                    - $ref: '#/components/schemas/ResponseErrorTemplate'
                            examples:
                                PostTemplateOK:
                                    $ref: '#/components/examples/PostTemplateOK'
                                TemplateLimitExceeded:
                                    $ref: '#/components/examples/TemplateLimitExceeded'
                                InvalidTemplateNameLen:
                                    $ref: '#/components/examples/InvalidTemplateNameLen'
                                InvalidCommentLenTemplate:
                                    $ref: '#/components/examples/InvalidCommentLenTemplate'
                                InvalidRequest:
                                    $ref: '#/components/examples/InvalidRequest'
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
        patch:
            security:
                - HeaderApiKey: []
            summary: Edit template
            description: |
                The method allows to edit the template. <br> Any characters are acceptable.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Feedbacks and Questions</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 3 requests | 333 milliseconds | 6 requests |

                </div>
            tags:
                - Response Templates
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - name
                                - templateID
                                - text
                            properties:
                                name:
                                    type: string
                                    description: Template name (1 to 100 characters)
                                templateID:
                                    type: string
                                    description: Template ID
                                text:
                                    type: string
                                    description: Template text (from 2 to 1000 characters)
                            example:
                                name: newname
                                templateID: 1234fhbf34ew2
                                text: newtext
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: '#/components/schemas/PatchDelRespOK'
                                    - $ref: '#/components/schemas/ResponseErrorTemplate'
                            examples:
                                PatchDelRespOK:
                                    $ref: '#/components/examples/PatchDelRespOK'
                                EditTemplateError:
                                    $ref: '#/components/examples/EditTemplateError'
                                InvalidRequest:
                                    $ref: '#/components/examples/InvalidRequest'
                                InvalidTemplateNameLen:
                                    $ref: '#/components/examples/InvalidTemplateNameLen'
                                InvalidCommentLenTemplate:
                                    $ref: '#/components/examples/InvalidCommentLenTemplate'
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
        delete:
            security:
                - HeaderApiKey: []
            summary: Delete the template
            description: |
                The method allows to delete the template

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account for all methods in the <strong>Feedbacks and Questions</strong> category:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 second | 3 requests | 333 milliseconds | 6 requests |

                </div>
            tags:
                - Response Templates
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - templateID
                            properties:
                                templateID:
                                    type: string
                                    description: Template ID (max. 1)
                        example:
                            templateID: 1234fhbf34ew2
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: '#/components/schemas/PatchDelRespOK'
                                    - $ref: '#/components/schemas/ResponseErrorTemplate'
                            examples:
                                PatchDelRespOK:
                                    $ref: '#/components/examples/PatchDelRespOK'
                                InvalidRequest:
                                    $ref: '#/components/examples/InvalidRequest'
                                ErrorDeleteBD:
                                    $ref: '#/components/examples/ErrorDeleteBD'
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/seller/chats:
        servers:
            - url: https://buyer-chat-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            summary: Chat list
            description: |
                Returns a list of all seller's chats.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 10 seconds | 10 requests | 1 second | 10 requests |
                </div>
            tags:
                - Buyers Chat
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ChatsResponse'
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/seller/events:
        get:
            servers:
                - url: https://buyer-chat-api.wildberries.ru
            security:
                - HeaderApiKey: []
            summary: Chat events
            description: |
                Returns an event list for all chats.

                To retrieve all events:
                  1. Make the first request without a `next` parameter.
                  2. Repeat the request with the `next` parameter value from the previous response until `totalEvents` becomes `0`. This will indicate that you have received all events.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 10 seconds | 10 requests | 1 second | 10 requests |
                </div>
            tags:
                - Buyers Chat
            parameters:
                - name: next
                  in: query
                  description: |
                      Paginator. Retrieve the next data packet starting from this moment. <br>Format: Unix timestamp **with milliseconds**
                  schema:
                      type: integer
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EventsResponse'
                            example:
                                result:
                                    next: 1698045576000
                                    newestEventTime: '2023-10-23T07:19:36Z'
                                    oldestEventTime: '2023-10-23T05:02:20Z'
                                    totalEvents: 4
                                    events:
                                        - chatID: 1:1e265a58-a120-b178-008c-60af2460207c
                                          eventID: 55adee45-11f0-33b6-a847-6ccc7c78b2ec
                                          eventType: message
                                          isNewChat: true
                                          message:
                                              attachments:
                                                  goodCard:
                                                      date: '2023-10-18T11:46:01.528526Z'
                                                      needRefund: false
                                                      nmID: 12345678
                                                      price: 500
                                                      priceCurrency: RUB
                                                      rid: 2fb52cd9e25e52538a5f05994e688ae5
                                                      size: '0'
                                                      statusID: 11
                                                  files:
                                                      - contentType: application/pdf
                                                        date: '2023-10-23T08:02:19.594Z'
                                                        downloadID: ecaeb056-a4ee-45b4-ae45-666811755d38
                                                        name: Чек.pdf
                                                        url: https://chat-basket-01.wbbasket.ru/vol0/part3265/fb25c9e9-cae8-52db-b68e-736c1896a3f5/pdf/0380e781-281e-41b5-8ae1-ce281f15a4a7.pdf
                                                        size: 1046143
                                                  images:
                                                      - date: '2023-10-23T08:02:20.717Z'
                                                        downloadID: fd6be4e3-5447-41d7-a1e6-b2d3e06c3b05
                                                        url: https://chat-basket-01.wbbasket.ru/vol0/part2345/fb89c9e9-cae8-52db-b68e-736c1466a3f5/jpg/0823ff24-821e-40e9-8cdf-0a2b5fd86a32.jpg
                                              text: Здравствуйте! У меня вопрос по товару "Альбом, бренд Эконом, артикул 13480414, товар получен 18.10.2023"
                                          source: rusite
                                          addTimestamp: 1698037340000
                                          addTime: '2023-10-23T05:02:20Z'
                                          replySign: 1:1e265a58-a120-b178-008c-60af2460207c:66f136e919a8207e136757754f253189bfb9ae1ad9da9170c9d5c478626663908888c370216525bef51c0ca8d77952e05c9c17f9b63ab00374c5555b42efc07d
                                          sender: client
                                          clientID: '186132'
                                          clientName: Алёна
                                        - chatID: 1:1e265a58-a120-b178-008c-60af2460207c
                                          eventID: cef95d3c-0345-4dc9-b6df-4c8c57a176a9
                                          eventType: message
                                          message:
                                              text: Здравствуйте! Пришёл не тот цвет. Можно вернуть и заказать другой товар?
                                          source: rusite
                                          addTimestamp: 1698037387000
                                          addTime: '2023-10-23T05:03:07Z'
                                          sender: client
                                          clientID: '186132'
                                          clientName: Алёна
                                        - chatID: 1:1e265a58-a120-b178-008c-60af2460207c
                                          eventID: fd22e5bf-64fd-43f7-b3a0-ad29uu027f97
                                          eventType: message
                                          message:
                                              text: Здравствуйте. Да, сейчас оформим возврат.
                                          source: seller-public-api
                                          addTimestamp: 1698038124000
                                          addTime: '2023-10-23T05:15:24Z'
                                          sender: seller
                                        - chatID: 1:1e265a58-a120-b178-008c-60af2460207c
                                          eventID: cef95d3c-0345-4dc9-b6df-4c8c75a176a7
                                          eventType: message
                                          refund:
                                              actionType: sellerRequestRefund
                                              price: 500
                                              priceCurrency: RUB
                                              rid: 2fb52cd9e25e52538a5f05994e688ae5
                                          addTimestamp: 1698045576000
                                          addTime: '2023-10-23T07:19:36Z'
                                          sender: seller
                                errors: null
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        description: HTTP status code
                                    title:
                                        type: string
                                        description: Error title
                                    origin:
                                        type: string
                                        description: WB internal service ID
                                    detail:
                                        type: string
                                        description: Error details
                                    requestId:
                                        type: string
                                        description: Unique request ID
                                    error:
                                        type: string
                                        description: Error text
                            examples:
                                IncorrectNextParameter:
                                    description: The type of the value or its magnitude is incorrect
                                    value:
                                        status: 400
                                        title: Bad Request
                                        origin: proxy-chats
                                        detail: Invalid number
                                        requestId: 62f59a4ce21064f20b1bbc28c85f38d8
                                        error: Invalid number
                                IncorrectNextParameter1:
                                    description: Invalid value 0
                                    value:
                                        status: 400
                                        title: Bad Request
                                        origin: proxy-chats
                                        detail: Invalid value for "next"
                                        requestId: 62f59a4ce21064f20b1bbc28c85f38d8
                                        error: Invalid value for "next"
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/seller/message:
        post:
            servers:
                - url: https://buyer-chat-api.wildberries.ru
            security:
                - HeaderApiKey: []
            summary: Send message
            description: |
                Sends message to the buyer.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 10 seconds | 10 requests | 1 second | 10 requests |
                </div>
            tags:
                - Buyers Chat
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            required:
                                - replySign
                            type: object
                            properties:
                                replySign:
                                    maxLength: 255
                                    type: string
                                    description: |
                                        Chat signature. Can be obtained from [chat information](./user-communication#tag/Buyers-Chat/paths/~1api~1v1~1seller~1chats/get) or [event data](./user-communication#tag/Buyers-Chat/paths/~1api~1v1~1seller~1events/get) if the event contains the `"isNewChat": true` field.
                                message:
                                    maxLength: 1000
                                    type: string
                                    description: Message text. Maximum of 1000 symbols.
                                file:
                                    type: array
                                    description: |
                                        Files, in JPEG, PDF, or PNG format, maximum size — 5 MB each. Maximum of total file size — 30 MB.
                                    items:
                                        type: string
                                        format: binary
                required: true
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MessageResponse'
                            example:
                                result:
                                    addTime: 1712848270018
                                    chatID: 1:641b623c-5c0e-295b-db03-3d5b4d484c32
                                errors: []
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        description: HTTP status code
                                    title:
                                        type: string
                                        description: Error title
                                    origin:
                                        type: string
                                        description: WB internal service ID
                                    detail:
                                        type: string
                                        description: Error details
                                    requestId:
                                        type: string
                                        description: Unique request ID
                                    error:
                                        type: string
                                        description: Error text
                            examples:
                                InvalidSignature:
                                    description: Invalid signature
                                    value:
                                        status: 400
                                        title: Bad Request
                                        origin: proxy-chats
                                        detail: Invalid signature
                                        requestId: 1b21cad4833a0c9244dc294a000f6149
                                        error: Invalid signature
                                InvalidFileSize:
                                    description: File attachment size is too big
                                    value:
                                        status: 400
                                        title: Bad Request
                                        origin: proxy-chats
                                        detail: 'A24FA09844E: attachment too big. Max size: 5MiB'
                                        requestId: 1b21cad4833a0c9244dc294a000f6149
                                        error: 'A24FA09844E: attachment too big. Max size: 5MiB'
                                UnsupportedFilesType:
                                    description: Unsupported file type
                                    value:
                                        status: 400
                                        title: Bad Request
                                        origin: proxy-chats
                                        detail: '4A9F2544E29: "video_2023-07-25_10-54-09.mp4" has unsupported mime type'
                                        requestId: 1b21cad4833a0c9244dc294a000f6149
                                        error: '4A9F2544E29: "video_2023-07-25_10-54-09.mp4" has unsupported mime type'
                                InvalidMessage:
                                    description: Invalid value for the message parameter
                                    value:
                                        status: 400
                                        title: Bad Request
                                        origin: proxy-chats
                                        detail: Invalid value for "message"
                                        requestId: 1b21cad4833a0c9244dc294a000f6149
                                        error: Invalid value for "message"
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/seller/download/{id}:
        get:
            servers:
                - url: https://buyer-chat-api.wildberries.ru
            security:
                - HeaderApiKey: []
            tags:
                - Buyers Chat
            summary: Get file from the message
            description: |
                The method provides a file or image from the message by its ID.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 10 seconds | 10 requests | 1 second | 10 requests |
                </div>
            parameters:
                - name: id
                  in: path
                  description: File ID from the `downloadID` field in the [chat events](./user-communication#tag/Buyers-Chat/paths/~1api~1v1~1seller~1events/get) method
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: Success
                    content:
                        application/pdf:
                            schema:
                                type: string
                                format: binary
                        image/jpeg:
                            schema:
                                type: string
                                format: binary
                        image/png:
                            schema:
                                type: string
                                format: binary
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        description: HTTP status code
                                    title:
                                        type: string
                                        description: Error title
                                    origin:
                                        type: string
                                        description: WB internal service ID
                                    detail:
                                        type: string
                                        description: Error details
                                    requestId:
                                        type: string
                                        description: Unique request ID
                                    error:
                                        type: string
                                        description: Error text
                            examples:
                                IncorrectNextParameter:
                                    description: Invalid file ID
                                    value:
                                        status: 400
                                        title: invalid fileID
                                        origin: proxy-chats
                                        detail: invalid fileID
                                        requestId: 62f59a4ce21064f20b1bbc28c85f38d8
                                        error: invalid fileID
    /api/v1/claims:
        servers:
            - url: https://returns-api.wildberries.ru
        get:
            security:
                - HeaderApiKey: []
            tags:
                - Buyers Returns
            summary: Buyers return applications
            description: |
                Returns buyers applications for product returns for the current 14 days.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 20 requests | 3 seconds | 10 requests |
                </div>
            parameters:
                - $ref: '#/components/parameters/is_archive'
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/limit'
                - $ref: '#/components/parameters/offset'
                - $ref: '#/components/parameters/nm_id'
            responses:
                '200':
                    $ref: '#/components/responses/GetClaimsSuccessResponse'
                '400':
                    $ref: '#/components/responses/Error400GetClaims'
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
    /api/v1/claim:
        servers:
            - url: https://returns-api.wildberries.ru
        patch:
            security:
                - HeaderApiKey: []
            tags:
                - Buyers Returns
            summary: Answer buyers application
            description: |
                Sends an answer to the buyers application for product return.

                <div class="description_limit">
                <a href="/openapi/api-information#tag/Introduction/Rate-Limits">Request limit</a> per one seller's account:

                | Period | Limit | Interval | Burst |
                | --- | --- | --- | --- |
                | 1 minute | 20 requests | 3 seconds | 10 requests |
                </div>
            requestBody:
                $ref: '#/components/requestBodies/PatchClaimReq'
            responses:
                '200':
                    description: Success
                '400':
                    $ref: '#/components/responses/Error400PatchClaim'
                'Response401':
                    $ref: '#/components/responses/Response401'
                'Response429':
                    $ref: '#/components/responses/Response429'
components:
    schemas:
        responseCardCreate:
            type: object
            properties:
                data:
                    type: object
                    nullable: true
                    example: null
                error:
                    description: Error flag
                    type: boolean
                errorText:
                    description: Error description
                    type: string
                additionalErrors:
                    description: Any additional errors
                    oneOf:
                        - type: object
                          nullable: true
                          properties:
                              string:
                                  type: string
                          additionalProperties: false
                        - type: string
                          nullable: true
                        - type: object
                          properties:
                              error:
                                  type: string
                          required:
                              - error
        requestMoveNmsImtConn:
            type: object
            required:
                - targetIMT
                - nmIDs
            properties:
                targetIMT:
                    description: Seller's existing `imtID`, in which product cards have to be merged
                    type: integer
                    example: 123
                nmIDs:
                    description: |
                        `nmID` to be merged, maximum 30
                    type: array
                    items:
                        type: integer
                    example:
                        - 837459235
                        - 828572090
        requestMoveNmsImtDisconn:
            type: object
            required:
                - nmIDs
            properties:
                nmIDs:
                    description: |
                        `nmID` to be separated, maximum 30
                    type: array
                    items:
                        type: integer
                    example:
                        - 837459235
                        - 828572090
            additionalProperties: false
        responseIncorrectDate:
            type: object
            properties:
                error:
                    type: string
            additionalProperties: false
        responseBodyContentError400:
            type: object
            properties:
                data:
                    type: object
                    nullable: true
                error:
                    description: Error flag
                    type: boolean
                errorText:
                    description: Error description
                    type: string
                additionalErrors:
                    nullable: true
                    description: Additional errors
                    type: object
                    properties:
                        MoveNmsToTrash:
                            type: string
            example:
                data: null
                error: true
                errorText: Error text
                additionalErrors:
                    MoveNmsToTrash: Bad request
        responseBodyContentError403:
            type: object
            properties:
                data:
                    type: object
                    nullable: true
                error:
                    description: Error flag
                    type: boolean
                errorText:
                    description: Error description
                    type: string
                additionalErrors:
                    nullable: true
                    description: Additional errors
                    type: string
            example:
                data: null
                error: true
                errorText: Access denied
                additionalErrors: Access denied
        responseContentError4:
            type: object
            properties:
                data:
                    type: object
                    nullable: true
                error:
                    description: Error flag
                    type: boolean
                errorText:
                    description: Error description
                    type: string
                additionalErrors:
                    description: Additional errors
                    nullable: true
                    type: object
                    properties:
                        description:
                            type: string
        responseContentError5:
            type: object
            properties:
                data:
                    type: object
                    nullable: true
                error:
                    description: Error flag
                    type: boolean
                errorText:
                    description: Error description
                    type: string
                additionalErrors:
                    nullable: true
                    description: Additional errors
                    type: object
                    properties:
                        tagID:
                            type: string
        responseContentError6:
            type: object
            properties:
                data:
                    type: object
                    nullable: true
                error:
                    description: Error flag
                    type: boolean
                errorText:
                    description: Error description
                    type: string
                additionalErrors:
                    description: Additional errors
                    type: string
                    nullable: true
            example:
                data: null
                error: false
                errorText: ''
                additionalErrors: null
        mediaErrors:
            type: object
            properties:
                additionalErrors:
                    description: Additional errors
                    nullable: true
                    type: object
                data:
                    type: object
                error:
                    description: Error flag
                    type: boolean
                errorText:
                    description: Error description
                    type: string
            example:
                additionalErrors: null
                data: null
                error: true
                errorText: Error text
        ResponseError:
            type: object
            properties:
                data:
                    type: object
                    nullable: true
                error:
                    type: boolean
                errorText:
                    type: string
        RequestAlreadyExistsError:
            type: object
            properties:
                data:
                    type: object
                    properties:
                        id:
                            description: Upload ID
                            type: integer
                        alreadyExists:
                            description: "Upload duplication: `true`\_— upload already exists\n"
                            type: boolean
                error:
                    description: Error flag
                    type: boolean
                errorText:
                    description: Error text
                    type: string
        StocksWarehouseError:
            type: array
            items:
                type: object
                properties:
                    code:
                        description: Error code
                        type: string
                    data:
                        description: Additional data enriching the error
                        nullable: true
                        type: object
                    message:
                        description: Error description
                        type: string
        TaskCreated:
            type: object
            properties:
                data:
                    type: object
                    properties:
                        id:
                            type: integer
                            description: Upload ID
                        alreadyExists:
                            type: boolean
                            description: "Upload duplication: `true`\_— upload already exists\n"
                            example: false
                error:
                    description: Error flag
                    type: boolean
                    example: false
                errorText:
                    description: Error text
                    type: string
                    example: ''
        Goods:
            type: array
            description: "Products, prices and discounts. Maximum 1,000\_products. Both price and discount can not be empty\n<br><br>\nIf the new price with discount is at least 3 times less than the previous one, the price will go [into price quarantine](https://seller.wildberries.ru/discount-and-prices/quarantine) and will not change. You will get the error in the response of upload states methods.\n<br><br>\nYou can edit price/discount using API or remove the price out of quarantine [in\_your account](https://seller.wildberries.ru/discount-and-prices/quarantine)\n"
            items:
                $ref: '#/components/schemas/Good'
        Good:
            type: object
            required:
                - nmID
            properties:
                nmID:
                    type: integer
                    example: 123
                    description: WB article
                price:
                    type: integer
                    example: 999
                    description: |
                        Price. You can get the currency with [Get products](./work-with-products#tag/Prices-and-Discounts/paths/~1api~1v2~1list~1goods~1filter/get)
                        method, field `currencyIsoCode4217`
                discount:
                    type: integer
                    example: 30
                    description: "Discount,\_%"
        SizeGoodsBody:
            description: "Sizes and prices. Maximum 1,000 sizes\n<br><br>\nIf the new price with discount is at least 3 times less than the previous one, the price will go [into price quarantine](https://seller.wildberries.ru/discount-and-prices/quarantine) and will not change. You will get the error in the response of [Upload states](./work-with-products#tag/Prices-and-Discounts) methods.\n<br><br>\nYou can edit price/discount using API or remove the price out of quarantine [in\_your account](https://seller.wildberries.ru/discount-and-prices/quarantine)\n"
            type: array
            items:
                $ref: '#/components/schemas/SizeGoodReq'
        SizeGoodReq:
            type: object
            required:
                - nmID
                - sizeID
                - price
            properties:
                nmID:
                    type: integer
                    example: 123
                    description: WB article
                sizeID:
                    type: integer
                    example: 98989887
                    description: Size ID. You can get the ID with [Get products](./work-with-products#tag/Prices-and-Discounts/paths/~1api~1v2~1list~1goods~1filter/get) method, field `sizeID`. In content methods this is `chrtID` field
                price:
                    type: integer
                    example: 999
                    description: Price. You can get the currency with [Get products](./work-with-products#tag/Prices-and-Discounts/paths/~1api~1v2~1list~1goods~1filter/get) method, field `currencyIsoCode4217`
        ClubDisc:
            type: array
            description: "Products and WB Club discounts. Maximum 1,000\_products.\n"
            items:
                $ref: '#/components/schemas/ClubDiscReq'
        ClubDiscReq:
            type: object
            required:
                - nmID
                - clubDiscount
            properties:
                nmID:
                    type: integer
                    example: 123
                    description: WB article
                clubDiscount:
                    type: integer
                    example: 5
                    description: "WB Club discount,\_%"
        GoodsList:
            type: object
            description: Product sizes
            properties:
                nmID:
                    type: integer
                    description: WB article
                    example: 98486
                vendorCode:
                    type: string
                    description: Seller's article
                    example: '07326060'
                sizes:
                    type: array
                    description: Size
                    items:
                        type: object
                        properties:
                            sizeID:
                                type: integer
                                description: Size ID. In content methods this is `chrtID` field
                                format: int64
                                example: 3123515574
                            price:
                                type: integer
                                description: Price
                                example: 500
                            discountedPrice:
                                type: number
                                description: Price with discount
                                example: 350
                            clubDiscountedPrice:
                                type: number
                                description: Price with discount including WB Club discount
                                example: 332.5
                            techSizeName:
                                description: Product size
                                type: string
                                example: '42'
                currencyIsoCode4217:
                    type: string
                    description: Currency, according to ISO 4217
                    example: RUB
                discount:
                    type: integer
                    description: "Discount,\_%"
                    example: 30
                clubDiscount:
                    type: integer
                    example: 5
                    description: "WB Club discount,\_%"
                editableSizePrice:
                    description: "Setting of size prices: `true`\_— available, `false`\_— unavailable. Depends on product category\n"
                    type: boolean
                    example: true
        SizeGood:
            type: object
            description: Size information
            properties:
                nmID:
                    type: integer
                    example: 123
                    description: WB article
                sizeID:
                    description: Size ID. You can get this ID with [Get products](./work-with-products#tag/Prices-and-Discounts/paths/~1api~1v2~1list~1goods~1filter/get) method, field `sizeID`. In content methods this is `chrtID` field
                    type: integer
                    example: 98989887
                vendorCode:
                    type: string
                    example: '34552332'
                    description: Seller's article
                price:
                    type: integer
                    example: 1000
                    description: Price
                currencyIsoCode4217:
                    type: string
                    description: Currency, according to ISO 4217
                    example: RUB
                discountedPrice:
                    type: number
                    example: 700
                    description: Price with discount
                clubDiscountedPrice:
                    type: number
                    description: Price with discount including WB Club discount
                    example: 665
                discount:
                    description: "Discount,\_%"
                    type: integer
                    example: 30
                clubDiscount:
                    type: integer
                    example: 5
                    description: "WB Club discount,\_%"
                techSizeName:
                    description: Size
                    type: string
                    example: '42'
                editableSizePrice:
                    description: "Setting of size prices: `true`\_— available, `false`\_— unavailable. Depends on product category\n"
                    type: boolean
                    example: true
        GoodBufferHistory:
            type: object
            properties:
                nmID:
                    type: integer
                    example: 544833232
                    description: WB article
                vendorCode:
                    type: string
                    example: '34552332'
                    description: Seller's article
                sizeID:
                    type: integer
                    example: 54483342
                    description: Size ID. In content methods this is `chrtID` field
                techSizeName:
                    type: string
                    example: XXL
                    description: Size
                price:
                    type: integer
                    example: 1500
                    description: Price
                currencyIsoCode4217:
                    type: string
                    example: RUB
                    description: Currency, according to ISO 4217
                discount:
                    type: integer
                    example: 25
                    description: "Discount,\_%"
                clubDiscount:
                    type: integer
                    example: 5
                    description: "WB Club discount,\_%"
                status:
                    $ref: '#/components/schemas/GoodStatusBuffer'
                errorText:
                    type: string
                    example: null
                    description: Error text
        GoodHistory:
            type: object
            properties:
                nmID:
                    type: integer
                    example: 544833232
                    description: WB article
                vendorCode:
                    type: string
                    example: '34552332'
                    description: Seller's article
                sizeID:
                    type: integer
                    example: 54483342
                    description: Size ID. In content methods this is `chrtID` field
                techSizeName:
                    type: string
                    example: '42'
                    description: Size
                price:
                    type: integer
                    example: 1500
                    description: Price
                currencyIsoCode4217:
                    type: string
                    example: RUB
                    description: Currency, according to ISO 4217
                discount:
                    type: integer
                    example: 25
                    description: "Discount,\_%"
                clubDiscount:
                    type: integer
                    example: 5
                    description: "WB Club discount,\_%"
                    nullable: true
                status:
                    $ref: '#/components/schemas/GoodStatus'
                errorText:
                    type: string
                    example: The new price is several times lower than the current price. Item has been moved to Price Quarantine
                    description: "Error text\n\n<div class=\"description_important\">\n  <p class=\"descr\"><code>The new price is several times lower than the current price. Item has been moved to Price Quarantine</code> error means that new price with discount is at least 3 times less than the previous one. You can edit price/discount using API or remove the price out of quarantine <a href=\"https://seller.wildberries.ru/discount-and-prices/quarantine\">in\_your account</a>\n</div>\n"
        SupplierTaskMetadata:
            type: object
            nullable: true
            properties:
                uploadID:
                    type: integer
                    example: 395643565
                    description: Upload ID
                status:
                    $ref: '#/components/schemas/TaskStatus'
                uploadDate:
                    $ref: '#/components/schemas/Date'
                activationDate:
                    $ref: '#/components/schemas/Date1'
                overAllGoodsNumber:
                    description: "Total number of\_products"
                    type: integer
                successGoodsNumber:
                    description: Number products without errors
                    type: integer
        SupplierTaskMetadataBuffer:
            nullable: true
            type: object
            properties:
                uploadID:
                    type: integer
                    example: 395643565
                    description: Upload ID
                status:
                    $ref: '#/components/schemas/TaskStatusBuffer'
                uploadDate:
                    $ref: '#/components/schemas/Date'
                activationDate:
                    $ref: '#/components/schemas/Date1'
                overAllGoodsNumber:
                    description: "Total number of\_products"
                    type: integer
                    example: 100
                successGoodsNumber:
                    description: Number products without errors (`0` because the upload is processing)
                    type: integer
                    example: 0
        Date:
            type: string
            example: '2022-08-21T22:00:13+02:00'
            format: date-time
            description: Date and time of the upload creation
        Date1:
            type: string
            example: '2022-08-21T22:00:13+02:00'
            format: date-time
            description: Date and time when the upload processing was started
        TaskStatus:
            description: "Upload status:\n  * `3`\_— processed, no errors in products, prices and discounts were updated\n  * `4`\_— canceled\n  * `5`\_— processed, but some product have errors. For other products prices and discounts were updated. You can get errors with [Processed upload details](./work-with-products#tag/Prices-and-Discounts/paths/~1api~1v2~1history~1goods~1task/get) method\n  * `6`\_— processed, but all product have errors. You can get them with [Processed upload details](./work-with-products#tag/Prices-and-Discounts/paths/~1api~1v2~1history~1goods~1task/get) method\n"
            type: integer
            example: 3
        TaskStatusBuffer:
            description: "Upload status: `1`\_— processing\n"
            type: integer
            example: 1
        GoodStatus:
            description: "Product status:\n  * `2`\_— no errors, price and/or discount were updated\n  * `3`\_— product has errors, data were not updated\n"
            type: integer
            example: 1
        GoodStatusBuffer:
            description: "Product status: `1`\_— processing\n"
            type: integer
            example: 1
        Error:
            type: object
            nullable: false
            properties:
                code:
                    type: string
                    description: Error code
                    nullable: false
                message:
                    type: string
                    description: Error description
                    nullable: false
                data:
                    type: object
                    description: Additional data enriching the error
                    nullable: true
        QuarantineGoods:
            type: object
            properties:
                nmID:
                    type: integer
                    example: 206025152
                    description: WB article
                sizeID:
                    description: Not used
                    type: integer
                    example: null
                techSizeName:
                    description: Not used
                    type: string
                    example: ''
                currencyIsoCode4217:
                    type: string
                    description: Currency, according to ISO 4217
                    example: RUB
                newPrice:
                    type: number
                    format: float
                    example: 134
                    description: New seller's price before discount
                oldPrice:
                    type: number
                    format: float
                    example: 4000
                    description: Current seller's price before discount
                newDiscount:
                    type: integer
                    example: 25
                    description: New seller's discount, %
                oldDiscount:
                    type: integer
                    example: 25
                    description: Current seller's discount, %
                priceDiff:
                    type: number
                    format: float
                    description: 'Difference: `newPrice` * (1 - `newDiscount` / 100) - `oldPrice` * (1 - `oldDiscount` / 100)'
                    example: -2899.5
        Office:
            type: object
            description: Office details
            properties:
                address:
                    type: string
                    nullable: false
                    description: Address
                    example: ул. Троицкая, Подольск, Московская обл.
                name:
                    type: string
                    nullable: false
                    description: Name
                    example: Коледино
                city:
                    type: string
                    nullable: false
                    description: City
                    example: Москва
                id:
                    type: integer
                    format: int64
                    nullable: false
                    description: ID
                    example: 15
                longitude:
                    type: number
                    format: float64
                    nullable: false
                    description: Longitude
                    example: 55.386871
                latitude:
                    type: number
                    format: float64
                    nullable: false
                    description: Latitude
                    example: 37.588898
                cargoType:
                    description: |
                        <dl> <dt>The type of goods a warehouse can accept:</dt> <dd>1 - small-sized goods</dd> <dd>2 - ODC (Over dimensional cargo)</dd> <dd>3 - CD+ (Dimensional cargo+)</dd> </dl>
                    type: integer
                    enum:
                        - 1
                        - 2
                        - 3
                    example: 1
                deliveryType:
                    type: integer
                    description: |
                        The type of deliveries:
                          - `1` — Fulfillment By Wildberries (FBS)
                          - `2` — Delivery By Supplier (DBS)
                          - `3` — Delivery by WB courier (DBW)
                          - `5` — In-Store Pickup (C&C)
                          - `6` — Express Delivery By Supplier (EDBS)
                    enum:
                        - 1
                        - 2
                        - 3
                        - 5
                        - 6
                    example: 1
                federalDistrict:
                    type: string
                    nullable: true
                    example: Центральный
                    description: Federal district of the WB office. If `null`, the office is located outside the Russian Federation or the federal district is not specified
                selected:
                    type: boolean
                    nullable: false
                    description: The flag indicating that the office has already been selected by the supplier
        Warehouse:
            type: object
            description: Supplier's warehouse details
            properties:
                name:
                    type: string
                    nullable: false
                    description: Name
                    example: Kosmonavtov 14
                officeId:
                    type: integer
                    format: int64
                    nullable: false
                    description: Office ID
                    example: 15
                id:
                    type: integer
                    format: int64
                    nullable: false
                    description: ID
                    example: 1
                cargoType:
                    description: |
                        <dl> <dt>The type of goods:</dt> <dd>1 - small-sized goods</dd> <dd>2 - ODC (Over dimensional cargo)</dd> <dd>3 - CD+ (Dimensional cargo+)</dd> </dl>
                    type: integer
                    enum:
                        - 1
                        - 2
                        - 3
                    example: 1
                deliveryType:
                    type: integer
                    description: |
                        The type of deliveries:
                          - `1` — Fulfillment By Wildberries (FBS)
                          - `2` — Delivery By Supplier (DBS)
                          - `3` — Delivery by WB courier (DBW)
                          - `5` — In-Store Pickup (C&C)
                          - `6` — Express Delivery By Supplier (EDBS)
                    enum:
                        - 1
                        - 2
                        - 3
                        - 5
                        - 6
                    example: 1
        PassOffice:
            type: object
            description: Office details, for which a pass is required
            properties:
                name:
                    type: string
                    nullable: false
                    description: Name
                    example: Koledino
                address:
                    type: string
                    nullable: false
                    description: Address
                    example: Kosmonavtov 10А
                id:
                    type: integer
                    format: int64
                    nullable: false
                    description: ID
                    example: 1
        Next:
            type: integer
            format: int64
            nullable: false
            description: Pagination parameter. Sets the value from which to retrieve the next batch
            example: 13833711
        Order:
            type: object
            properties:
                address:
                    type: object
                    nullable: true
                    description: Detailed address of the buyer for delivery (if applicable). Some of the fields may be empty due to the specifics of the address.
                    properties:
                        fullAddress:
                            description: Delivery address
                            type: string
                            example: Chelyabinsk Region, Chelyabinsk, 51st Arabkir Street, Building 10A, Apartment 42
                        longitude:
                            type: number
                            format: float64
                            nullable: false
                            description: Longitude
                            example: 44.519068
                        latitude:
                            type: number
                            format: float64
                            nullable: false
                            description: Latitude
                            example: 40.20192
                scanPrice:
                    type: number
                    format: uint32
                    description: Acceptance price in kopecks. Appears after the actual acceptance of the order
                    example: 1500
                deliveryType:
                    type: string
                    nullable: false
                    description: |
                        <dl>
                        <dt>Delivery type:</dt>
                        <dd>fbs - 'Fulfillment By Wildberries (FBS)'</dd>
                        <dd>wbgo - 'Delivery by WB courier (DBW)'</dd>
                        </dl>
                    enum:
                        - fbs
                        - wbgo
                supplyId:
                    type: string
                    description: Supply ID. Returns if the order is assigned to a supply
                    example: WB-GI-92937123
                orderUid:
                    type: string
                    description: Transaction ID for order grouping. Orders in the same customer's cart will have the same `orderUid`.
                    example: 165918930_629fbc924b984618a44354475ca58675
                article:
                    type: string
                    nullable: false
                    description: Seller's article
                    example: one-ring-7548
                colorCode:
                    type: string
                    nullable: false
                    description: Color code (for tinted products only)
                    example: RAL 3017
                rid:
                    type: string
                    nullable: false
                    description: Order ID in Wildberries systems
                    example: f884001e44e511edb8780242ac120002
                createdAt:
                    type: string
                    format: date-time
                    nullable: false
                    description: Order creation date (RFC3339)
                    example: '2022-05-04T07:56:29Z'
                offices:
                    type: array
                    nullable: true
                    description: List of offices where you should deliver the order
                    items:
                        type: string
                        example: Kaluga
                skus:
                    type: array
                    nullable: false
                    description: Product barcode array
                    items:
                        type: string
                        example: '6665956397512'
                id:
                    type: integer
                    format: int64
                    nullable: false
                    description: Order ID in Marketplace
                    example: 13833711
                warehouseId:
                    type: integer
                    nullable: false
                    description: Seller's warehouse ID where the order was received.
                    example: 658434
                officeId:
                    type: integer
                    format: int64
                    nullable: false
                    description: ID of the WB warehouse associated with the seller's warehouse
                    example: 123
                nmId:
                    type: integer
                    nullable: false
                    description: WB article
                    example: 12345678
                chrtId:
                    type: integer
                    nullable: false
                    description: Product size ID in the Wildberries systems
                    example: 987654321
                price:
                    type: integer
                    nullable: false
                    description: |
                        The price in the currency of sale, including all discounts except the amount from the WB Wallet, multiplied by 100. The currency code of the sale is in the `currencyCode` field
                    example: 1014
                convertedPrice:
                    type: integer
                    nullable: false
                    description: The price in the currency of the seller's country including all discounts, except WB Wallet discount, multiplied by 100. Provided for informational purposes only.
                    example: 28322
                currencyCode:
                    type: integer
                    nullable: false
                    description: Sale currency code
                    format: ISO 4217
                    example: 933
                convertedCurrencyCode:
                    type: integer
                    nullable: false
                    description: Currency code of the supplier country
                    format: ISO 4217
                    example: 643
                cargoType:
                    type: integer
                    nullable: false
                    description: |
                        <dl> <dt>Type of cargo in the order:</dt> <dd>1 - small-sized goods</dd> <dd>2 - ODC (Over dimensional cargo)</dd> <dd>3 - CD+ (Dimensional cargo+)</dd> </dl>
                    enum:
                        - 1
                        - 2
                        - 3
                comment:
                    description: Buyer's comment
                    type: string
                    nullable: false
                    maxLength: 300
                    example: Упакуйте в плёнку, пожалуйста
                isZeroOrder:
                    description: Indicator of an order made on zero stock of products. (<code>false</code> - the order was made on an item with non-zero stock, <code>true</code> - the order was made on an item with zero stock. Such an order can be canceled without a cancellation fee)
                    example: false
                options:
                    type: object
                    description: Order options
                    properties:
                        isB2b:
                            type: boolean
                            description: |
                                Indicator of a B2B sale:
                                  - <code>false</code> — is not B2B sale
                                  - <code>true</code> — is B2B sale
        Supply:
            type: object
            properties:
                id:
                    type: string
                    nullable: false
                    description: Supply ID
                    example: WB-GI-1234567
                done:
                    type: boolean
                    nullable: false
                    description: An indication that the supply is closed
                createdAt:
                    type: string
                    format: date-time
                    nullable: false
                    description: Supply creation date (RFC3339)
                    example: '2022-05-04T07:56:29Z'
                closedAt:
                    type: string
                    format: date-time
                    nullable: true
                    description: Supply close date (RFC3339)
                    example: '2022-05-04T07:56:29Z'
                scanDt:
                    type: string
                    nullable: true
                    format: date-time
                    description: Supply scan date (RFC3339)
                    example: '2022-05-04T07:56:29Z'
                name:
                    type: string
                    nullable: false
                    description: Supply name
                    example: My test supply
                cargoType:
                    type: integer
                    nullable: false
                    description: |
                        <dl> <dt>Type of cargo in the supply:</dt> <dd>0 - not defined</dd> <dd>1 - small-sized goods</dd> <dd>2 - ODC (Over dimensional cargo)</dd> <dd>3 - CD+ (Dimensional cargo+)</dd> </dl>
                    enum:
                        - 0
                        - 1
                        - 2
                        - 3
                destinationOfficeId:
                    type: integer
                    format: int64
                    nullable: true
                    description: ID of the destination office for the supply. If `null`, destination office ID is not specified
                    example: 123
        OrderNew:
            type: object
            properties:
                address:
                    type: object
                    nullable: true
                    description: Detailed customer address for delivery (if applicable). Some of the fields may come empty
                    properties:
                        fullAddress:
                            description: Delivery address
                            type: string
                            example: Chelyabinsk Region, Chelyabinsk, 51st Arabkir Street, Building 10A, Apartment 42
                        longitude:
                            type: number
                            format: float64
                            nullable: false
                            description: Longitude
                            example: 44.519068
                        latitude:
                            type: number
                            format: float64
                            nullable: false
                            description: Latitude
                            example: 40.20192
                ddate:
                    type: string
                    description: |
                        Planned delivery date. <br>
                        The field is displayed for the schemes:
                        - `wbgo` — delivery by WB courier (DBW)
                        - `SGT` — orders for oversized products (<code>cargoType: 2</code>) under the FBS — delivery to the Wildberries warehouse scheme.
                    nullable: false
                    example: 17.05.2024
                salePrice:
                    description: |
                        Seller's price in the currency of sale, including seller's discount, except the WB Club discount, multiplied by 100
                    type: integer
                    nullable: true
                    example: 504600
                requiredMeta:
                    description: List of metadata that needs to be added to the order.  <br> At the moment it is required to add UIN and IMEI if they are included in the list.
                    type: array
                    nullable: true
                    items:
                        type: string
                    example:
                        - uin
                deliveryType:
                    type: string
                    nullable: false
                    description: |
                        <dl>
                        <dt>Delivery type:</dt>
                        <dd>fbs - 'Fulfillment By Wildberries (FBS)'</dd>
                        <dd>wbgo - 'Delivery by WB courier (DBW)'</dd>
                        </dl>
                    enum:
                        - fbs
                        - wbgo
                comment:
                    description: Buyer's comment
                    type: string
                    nullable: false
                    maxLength: 300
                    example: Упакуйте в плёнку, пожалуйста
                scanPrice:
                    description: Acceptance price in kopecks. Appears after the actual acceptance of the order. For this method will `null` always be returned
                    type: number
                    format: uint32
                    nullable: true
                    example: null
                orderUid:
                    type: string
                    description: Transaction ID for order grouping. Orders in the same customer's cart will have the same `orderUid`.
                    example: 165918930_629fbc924b984618a44354475ca58675
                article:
                    type: string
                    nullable: false
                    description: Supplier's article
                    example: one-ring-7548
                colorCode:
                    description: Color code (for tinted products only)
                    type: string
                    nullable: false
                    example: RAL 3017
                rid:
                    type: string
                    nullable: false
                    description: Order ID in Wildberries systems
                    example: f884001e44e511edb8780242ac120002
                createdAt:
                    type: string
                    format: date-time
                    nullable: false
                    description: Order creation date (RFC3339)
                    example: '2022-05-04T07:56:29Z'
                offices:
                    type: array
                    nullable: true
                    description: List of offices where you should deliver the order
                    items:
                        type: string
                        example: Калуга
                skus:
                    type: array
                    nullable: false
                    description: Product barcode array
                    items:
                        type: string
                        example: '6665956397512'
                id:
                    type: integer
                    format: int64
                    nullable: false
                    description: Order ID in Marketplace
                    example: 13833711
                warehouseId:
                    type: integer
                    nullable: false
                    description: Supplier's warehouse ID where the order was received
                    example: 658434
                officeId:
                    type: integer
                    format: int64
                    nullable: false
                    description: ID of the WB warehouse associated with the seller's warehouse
                    example: 123
                nmId:
                    type: integer
                    nullable: false
                    description: WB article
                    example: 123456789
                chrtId:
                    type: integer
                    nullable: false
                    description: Product size ID in the Wildberries systems
                    example: 987654321
                price:
                    type: integer
                    nullable: false
                    description: |
                        The price in the currency of sale, including all discounts except the amount from the WB Wallet, multiplied by 100. The currency code of the sale is in the `currencyCode` field
                    example: 1014
                convertedPrice:
                    type: integer
                    nullable: false
                    description: The price in the currency of the seller's country including all discounts, except WB Wallet discount, multiplied by 100. Provided for informational purposes only.
                    example: 28322
                currencyCode:
                    type: integer
                    nullable: false
                    description: Sale currency code
                    format: ISO 4217
                    example: 933
                convertedCurrencyCode:
                    type: integer
                    nullable: false
                    description: Currency code of the supplier country
                    format: ISO 4217
                    example: 643
                cargoType:
                    type: integer
                    nullable: false
                    description: '<dl> <dt>Type of cargo in the order:</dt> <dd>1 - small-sized goods</dd> <dd>2 - ODC (Over dimensional cargo)</dd> <dd>3 - CD+ (Dimensional cargo+)</dd> </dl> '
                    enum:
                        - 1
                        - 2
                        - 3
                isZeroOrder:
                    description: Indicator of an order made on zero stock of products. (<code>false</code> - the order was made on an item with non-zero stock, <code>true</code> - the order was made on an item with zero stock. Such an order can be canceled without a cancellation fee)
                    example: false
                options:
                    type: object
                    description: Order options
                    properties:
                        isB2b:
                            type: boolean
                            description: |
                                Indicator of a B2B sale:
                                  - <code>false</code> — is not B2B sale
                                  - <code>true</code> — is B2B sale
        SupplyOrder:
            type: object
            properties:
                scanPrice:
                    description: Acceptance price in kopecks. Appears after the actual acceptance of the order. For this method will `null` always be returned
                    type: number
                    format: uint32
                    nullable: true
                    example: null
                orderUid:
                    type: string
                    description: Transaction ID for order grouping. Orders in the same customer's cart will have the same `orderUid`.
                    example: 165918930_629fbc924b984618a44354475ca58675
                article:
                    type: string
                    nullable: false
                    description: Supplier's article
                    example: one-ring-7548
                colorCode:
                    description: Color code (for tinted products only)
                    type: string
                    nullable: false
                    example: RAL 3017
                rid:
                    type: string
                    nullable: false
                    description: Order ID in Wildberries systems
                    example: f884001e44e511edb8780242ac120002
                createdAt:
                    type: string
                    format: date-time
                    nullable: false
                    description: Order creation date (RFC3339)
                    example: '2022-05-04T07:56:29Z'
                offices:
                    type: array
                    nullable: true
                    description: List of offices where you should deliver the order
                    items:
                        type: string
                        example: Калуга
                skus:
                    type: array
                    nullable: false
                    description: Product barcode array
                    items:
                        type: string
                        example: '6665956397512'
                id:
                    type: integer
                    format: int64
                    nullable: false
                    description: Order ID in Marketplace
                    example: 13833711
                warehouseId:
                    type: integer
                    nullable: false
                    description: Supplier's warehouse ID where the order was received
                    example: 658434
                nmId:
                    type: integer
                    nullable: false
                    description: WB article
                    example: 123456789
                chrtId:
                    type: integer
                    nullable: false
                    description: Product size ID in the Wildberries systems
                    example: 987654321
                price:
                    type: integer
                    nullable: false
                    description: |
                        The price in the currency of sale, including all discounts except the amount from the WB Wallet, multiplied by 100. The currency code of the sale is in the `currencyCode` field
                    example: 1014
                convertedPrice:
                    type: integer
                    nullable: false
                    description: The price in the currency of the seller's country including all discounts, except WB Wallet discount, multiplied by 100. Provided for informational purposes only.
                    example: 28322
                currencyCode:
                    type: integer
                    nullable: false
                    description: Sale currency code
                    format: ISO 4217
                    example: 933
                convertedCurrencyCode:
                    type: integer
                    nullable: false
                    description: Currency code of the supplier country
                    format: ISO 4217
                    example: 643
                cargoType:
                    type: integer
                    nullable: false
                    description: |
                        <dl> <dt>Type of cargo in the order:</dt> <dd>1 - small-sized goods</dd> <dd>2 - ODC (Over dimensional cargo)</dd> <dd>3 - CD+ (Dimensional cargo+)</dd> </dl>
                    enum:
                        - 1
                        - 2
                        - 3
                isZeroOrder:
                    description: Indicator of an order made on zero stock of products. (<code>false</code> - the order was made on an item with non-zero stock, <code>true</code> - the order was made on an item with zero stock. Such an order can be canceled without a cancellation fee)
                    example: false
        SupplyTrbx:
            type: object
            properties:
                id:
                    description: Box ID.
                    type: string
                    example: WB-TRBX-1234567
                orders:
                    type: array
                    nullable: false
                    description: List of order IDs.
                    items:
                        type: integer
                        example: 1234567
        TrbxStickers:
            type: object
            properties:
                barcode:
                    type: string
                    minLength: 1
                    description: The encoded value of the sticker.
                    example: $WBMP:1:123:1234567
                file:
                    type: string
                    format: byte
                    minLength: 1
                    description: Base64 encoded sticker file in the requested format.
                    example: U3dhZ2dlciByb2Nrcw==
        Meta:
            type: object
            description: Order metadata
            properties:
                imei:
                    type: object
                    properties:
                        value:
                            nullable: true
                            type: string
                            example: '123456789012345'
                    description: IMEI
                uin:
                    type: object
                    properties:
                        value:
                            nullable: true
                            type: string
                            example: '123456789012345'
                    description: UIN
                gtin:
                    type: object
                    properties:
                        value:
                            nullable: true
                            type: string
                            example: '123456789012345'
                    description: GTIN
                sgtin:
                    type: object
                    properties:
                        value:
                            type: array
                            items:
                                type: string
                            example:
                                - '123456789012345'
                            nullable: true
                    description: Data Matrix code (Chestny ZNAK)
                expiration:
                    type: object
                    properties:
                        value:
                            type: string
                            example: 12.09.2030
                            nullable: true
                    description: Expiration date
                    format: date (dd.mm.yyyy)
        Pass:
            type: object
            description: Supplier's pass details
            properties:
                firstName:
                    type: string
                    nullable: false
                    description: First name
                    example: Alex
                dateEnd:
                    type: string
                    nullable: false
                    description: Pass expiration date
                    example: '2022-07-31 17:53:13+00:00'
                lastName:
                    type: string
                    nullable: false
                    description: Last name
                    example: Petrov
                carModel:
                    type: string
                    nullable: false
                    description: Car model
                    example: Lamborghini
                carNumber:
                    type: string
                    nullable: false
                    description: Car number
                    example: A456BC123
                officeName:
                    type: string
                    nullable: false
                    description: Office name
                    example: Koledino
                officeAddress:
                    type: string
                    nullable: false
                    description: Office address
                    example: Kosmonavtov 10А
                officeId:
                    type: integer
                    format: int64
                    nullable: false
                    description: Office ID
                    example: 15
                id:
                    type: integer
                    format: int64
                    nullable: false
                    description: ID
                    example: 1
        StoreContactResponseBody:
            type: object
            description: Seller's warehouse contacts
            properties:
                contacts:
                    type: array
                    items:
                        type: object
                        properties:
                            comment:
                                type: string
                                nullable: false
                                description: Comment
                                example: Иванов Иван Иванович. Звонить с 10 до 21 часа.
                                maxLength: 1000
                            phone:
                                type: string
                                nullable: false
                                description: Phone number
                                example: '+79998887766'
        StoreContactRequestBody:
            type: object
            description: Seller's warehouse contacts
            properties:
                contacts:
                    type: array
                    maxItems: 5
                    items:
                        type: object
                        properties:
                            comment:
                                type: string
                                nullable: false
                                description: Comment
                                example: Иванов Иван Иванович. Звонить с 10 до 21 часа.
                                maxLength: 1000
                            phone:
                                type: string
                                nullable: false
                                description: |
                                    Phone number.<br>Supported country codes:
                                      - `+7` — Russia, Kazakhstan
                                      - `+374` — Armenia
                                      - `+375` — Belarus
                                      - `+996` — Kyrgyzstan
                                example: '+79998887766'
        CrossborderTurkeyClientInfo:
            properties:
                firstName:
                    type: string
                    description: Client's first name
                    example: Иван
                fullName:
                    type: string
                    description: First name, Last name, Patronymic
                    example: Андреев Иван Васильевич
                lastName:
                    type: string
                    description: Client's last name
                    example: Андреев
                middleName:
                    type: string
                    description: Client's patronymic
                    example: Васильевич
                orderID:
                    type: integer
                    description: Order number
                    example: 134567
                phone:
                    type: string
                    description: Phone number for contacting the client
                    example: 79871234567
                phoneCode:
                    type: string
                    description: Not used
                    example: 0
        CrossborderTurkeyClientInfoResp:
            properties:
                orders:
                    description: Client information for cross-border orders from Turkey
                    items:
                        $ref: '#/components/schemas/CrossborderTurkeyClientInfo'
                    type: array
            type: object
        OrdersRequestAPI:
            properties:
                orders:
                    description: Orders list
                    items:
                        type: integer
                    type: array
            type: object
            example:
                orders:
                    - 987654321
                    - 123456789
        V0GetConfigCategoriesResponse:
            type: object
            properties:
                id:
                    type: integer
                    description: Product category ID
                name:
                    type: string
                    description: Product category name
                cpm_min:
                    type: integer
                    description: Minimum allowable rate
            required:
                - id
                - name
                - cpm_min
            example:
                id: 760
                name: Автомобильные товары
                cpm_min: 112
        V0AdvertMultiBidItem:
            type: object
            required:
                - nm
                - bid
            properties:
                nm:
                    type: integer
                    example: 3462354
                    description: WB article
                bid:
                    type: integer
                    example: 500
                    description: Bid. Minimum allowable bids can be found in the response of the method for obtaining [configuration values](./promotion#tag/Sozdanie-kampanij/paths/~1adv~1v0~1config/get)
        V0AdvertMultibid:
            type: object
            required:
                - advert_id
                - nm_bids
            properties:
                advert_id:
                    type: integer
                    example: 6348555
                    description: Campaign ID
                nm_bids:
                    type: array
                    description: WB article numbers and their bids
                    items:
                        $ref: '#/components/schemas/V0AdvertMultiBidItem'
        ResponseWithReturn:
            type: object
            properties:
                total:
                    type: integer
                    description: Amount of the updated budget
        ResponseInfoAdvert:
            type: object
            properties:
                endTime:
                    description: Campaign end date
                    type: string
                createTime:
                    description: Campaign create time
                    type: string
                    example: '2022-03-09T10:50:21.831623+03:00'
                changeTime:
                    description: Campaign last update time
                    type: string
                    example: '2022-12-22T18:24:19.808701+03:00'
                startTime:
                    description: Campaign launch date
                    type: string
                name:
                    description: Campaign name
                    type: string
                params:
                    description: Campaign parameters
                    type: array
                    items:
                        type: object
                        properties:
                            subjectName:
                                description: Name of the object group (for the campaign in search and recommendations (<strong>deprecated campaign types</strong>))
                                type: string
                            active:
                                description: The object group activity flag, <code>true</code> - active, <code>false</code> - inactive
                                type: boolean
                            intervals:
                                description: Showing hours intervals
                                type: array
                                items:
                                    type: object
                                    properties:
                                        Begin:
                                            description: Show start time
                                            type: integer
                                        End:
                                            description: Show end time
                                            type: integer
                            price:
                                description: Current price
                                type: integer
                            menuId:
                                description: Campaign target menu item ID (for catalogue campaign (<strong>deprecated campaign type</strong>))
                                type: integer
                            subjectId:
                                description: Campaign target subject ID (for search and recommendations campaigns (<strong>deprecated campaign types</strong>))
                                type: integer
                            setId:
                                description: Subject and gender selection ID (for product card campaign (<strong>deprecated campaign type</strong>))
                                type: integer
                            setName:
                                description: Item and gender combination (for the campaign in the product card (<strong>deprecated campaign type</strong>))
                                type: string
                            menuName:
                                description: Name of the menu where the campaign is placed (for a catalog campaign (<strong>deprecated campaign type</strong>))
                                type: string
                            nms:
                                description: An array of campaign nomenclatures
                                type: array
                                items:
                                    type: object
                                    properties:
                                        nm:
                                            type: integer
                                            description: WB article (`nmId`)
                                        active:
                                            type: boolean
                                            description: Nomenclature status (<code>true</code> - active or <code>false</code> - inactive)
                dailyBudget:
                    description: Daily budget; 0 if not set
                    type: integer
                advertId:
                    description: Campaign ID
                    type: integer
                    example: 1234
                status:
                    description: |
                        <dl> <dt>Campaign status:</dt> <dd><code>-1</code> - campaign
                        in the process of removing </dd> <dd><code>4</code>
                        - ready to start </dd> <dd><code>7</code> - is over</dd> <dd><code>8</code>
                        - refused</dd> <dd><code>9</code> - active</dd> <dd><code>11</code> -
                        paused</dd> </dl> Campaign in the process of removing.  The status means
                        that the campaign has been deleted and in 3-10 minutes it will disappear
                        from the method response.
                    type: integer
                    example: 9
                type:
                    description: |
                        <dl>
                        <dt>Type of campaign:</dt>
                        <dd><code>4</code> - campaign in catalogue (<strong>deprecated type</strong>)</dd>
                        <dd><code>5</code> - campaign in content (<strong>deprecated type</strong>)</dd>
                        <dd><code>6</code> - campaign in search (<strong>deprecated type</strong>)</dd>
                        <dd><code>7</code> - campaign on main page recommendations (<strong>deprecated type</strong>)</dd> </dl>
                    type: integer
                    example: 4
                paymentType:
                    type: string
                    description: |
                        Payment model:
                        - `cpm` — for displays
                searchPluseState:
                    type: boolean
                    description: |
                        Fixed phrase activity:
                          - `false` — inactive
                          - `true` — active
        ResponseInfoAdvertType8:
            type: object
            properties:
                endTime:
                    description: Campaign end date
                    type: string
                    format: date-time
                createTime:
                    description: Campaign create time
                    type: string
                    format: date-time
                changeTime:
                    description: Campaign last update time
                    type: string
                    format: date-time
                startTime:
                    description: Campaign launch date
                    type: string
                    format: date-time
                autoParams:
                    type: object
                    properties:
                        subject:
                            description: Promoted subject
                            type: object
                            properties:
                                id:
                                    description: Subject ID
                                    type: integer
                                name:
                                    description: Subject name
                                    type: string
                        sets:
                            description: Internal (system) entity (gender + product)
                            type: array
                            items:
                                type: object
                                properties:
                                    id:
                                        description: Set ID
                                        type: integer
                                    name:
                                        description: Set name
                                        type: string
                        menus:
                            type: array
                            items:
                                type: object
                                description: The menu where the campaign is placed
                                properties:
                                    id:
                                        description: Menu ID
                                        type: integer
                                    name:
                                        description: Menu name
                                        type: string
                        active:
                            description: Display zones
                            type: object
                            properties:
                                carousel:
                                    description: In content (`false` means disabled, `true` means enabled)
                                    type: boolean
                                recom:
                                    description: Recommendations on main page (`false` means disabled, `true` means enabled)
                                    type: boolean
                                booster:
                                    description: Auction (`false` means disabled, `true` means enabled)
                                    type: boolean
                        nmCPM:
                            type: array
                            description: |
                                Nomenclature bids (WB articles)
                            items:
                                type: object
                                properties:
                                    nm:
                                        description: WB article
                                        type: integer
                                    cpm:
                                        description: Bid
                                        type: integer
                        nms:
                            description: WB articles (`nmId`)
                            type: array
                            items:
                                type: integer
                        cpm:
                            description: |
                                The bid specified when creating the campaign.<br> The field is relevant only for campaigns created via API.
                            type: integer
                name:
                    description: Campaign name
                    type: string
                dailyBudget:
                    description: Not used
                    type: integer
                advertId:
                    description: Campaign ID
                    type: integer
                status:
                    description: |
                        <dl> <dt>Campaign status:</dt> <dd><code>-1</code> - campaign
                        in the process of removing </dd> <dd><code>4</code> - ready to run</dd> <dd><code>7</code> - is over</dd> <dd><code>8</code> - refused</dd> <dd><code>9</code> - active</dd> <dd><code>11</code> - paused</dd> </dl> Campaign in the process of removing.  The status means that the campaign has been deleted and in 3-10 minutes it will disappear from the method response.
                    type: integer
                type:
                    description: <dl> <dt>Type of campaign:</dt> <dd><code>8</code> - automatic campaign </dd> </dl>
                    type: integer
                paymentType:
                    type: string
                    description: |
                        Payment model:
                        - `cpm` — for displays
        ResponseInfoAdvertType9:
            type: object
            properties:
                endTime:
                    description: Campaign end date
                    type: string
                    format: date-time
                createTime:
                    description: Campaign create time
                    type: string
                    format: date-time
                changeTime:
                    description: Campaign last update time
                    type: string
                    format: date-time
                startTime:
                    description: Campaign launch date
                    type: string
                    format: date-time
                searchPluseState:
                    type: boolean
                    description: |
                        Fixed phrase activity:
                          - `false` — inactive
                          - `true` — active
                name:
                    description: Campaign name
                    type: string
                unitedParams:
                    type: array
                    items:
                        type: object
                        properties:
                            subject:
                                type: object
                                description: Promoted subject
                                properties:
                                    id:
                                        description: Subject ID
                                        type: integer
                                    name:
                                        description: Subject name
                                        type: string
                            menus:
                                type: array
                                items:
                                    type: object
                                    description: Menu where the campaign is placed
                                    properties:
                                        id:
                                            description: Menu ID
                                            type: integer
                                        name:
                                            description: Menu name
                                            type: string
                            nms:
                                description: WB articles (`nmId`)
                                type: array
                                items:
                                    type: integer
                            searchCPM:
                                description: Bid in Search
                                type: integer
                            catalogCPM:
                                description: Bid in Catalogue, if available
                                type: integer
                dailyBudget:
                    description: Not used
                    type: integer
                advertId:
                    description: Campaign ID
                    type: integer
                status:
                    description: |
                        <dl> <dt>Campaign status:</dt> <dd><code>-1</code> - campaign
                        in the process of removing </dd> <dd><code>4</code> - ready to run </dd> <dd><code>7</code> - is over</dd> <dd><code>8</code> - refused</dd> <dd><code>9</code> - active</dd> <dd><code>11</code> - paused</dd> </dl> Campaign in the process of removing.  The status means that the campaign has been deleted and in 3-10 minutes it will disappear from the method response.
                    type: integer
                type:
                    description: <dl> <dt>Type of campaign:</dt> <dd><code>9</code> - Auction </dd> </dl>
                    type: integer
                paymentType:
                    type: string
                    description: |
                        Payment model:
                        - `cpm` — for displays
                auction_multibids:
                    type: array
                    description: WB articles bids
                    items:
                        type: object
                        properties:
                            nm:
                                description: WB article
                                type: integer
                            cpm:
                                description: Bid
                                type: integer
        responseAdvError1:
            type: object
            properties:
                error:
                    type: string
        PromotionsGoodsList:
            type: object
            properties:
                id:
                    type: integer
                    example: 162579635
                    description: Nomenclature ID
                inAction:
                    type: boolean
                    example: true
                    description: |
                        Participates in the promotion:
                          - `true` — yes
                          - `false` — no
                price:
                    type: number
                    format: float
                    example: 1500
                    description: Current retail price
                currencyCode:
                    type: string
                    example: RUB
                    description: Currency in ISO 4217 format
                planPrice:
                    type: number
                    format: float
                    example: 1000
                    description: Planned price (price during the promotion)
                discount:
                    type: integer
                    example: 15
                    description: Current discount
                planDiscount:
                    type: integer
                    example: 34
                    description: Recommended discount for participating in the promotion
        Response200:
            description: Success
            type: object
            properties:
                data:
                    type: object
                    properties:
                        templates:
                            type: array
                            items:
                                type: object
                                properties:
                                    id:
                                        type: string
                                        description: Template ID
                                    name:
                                        type: string
                                        description: Template name
                                    text:
                                        type: string
                                        description: Template text
                error:
                    type: boolean
                    description: Error flag
                errorText:
                    type: string
                    description: Error description
                additionalErrors:
                    description: Additional errors
                    nullable: true
                    type: array
                    items:
                        type: string
        PostTemplateOK:
            type: object
            properties:
                data:
                    type: object
                    properties:
                        id:
                            description: Template ID
                            type: string
                error:
                    type: boolean
                    description: Error flag
                errorText:
                    type: string
                    description: Error description
                additionalErrors:
                    nullable: true
                    description: Additional errors
                    type: array
                    items:
                        type: string
        PatchDelRespOK:
            type: object
            properties:
                data:
                    type: boolean
                    nullable: true
                error:
                    type: boolean
                    description: Error flag
                errorText:
                    type: string
                    description: Error description
                additionalErrors:
                    description: Additional errors
                    nullable: true
                    type: array
                    items:
                        type: string
        ResponseErrorTemplate:
            type: object
            properties:
                data:
                    type: object
                    nullable: true
                error:
                    type: boolean
                    description: Error flag
                errorText:
                    type: string
                    description: Error description
                additionalErrors:
                    description: Additional errors
                    nullable: true
                    type: array
                    items:
                        type: string
        responsefeedbackErr:
            type: object
            properties:
                data:
                    type: object
                    nullable: true
                error:
                    description: Error flag
                    type: boolean
                errorText:
                    description: Error description
                    type: string
                additionalErrors:
                    description: Additional errors
                    nullable: true
                    type: array
                    items:
                        type: string
                requestId:
                    description: ''
                    type: string
        responseFeedback:
            description: Array of structure of feedbacks
            type: array
            items:
                type: object
                properties:
                    id:
                        type: string
                        description: Feedback ID
                    text:
                        type: string
                        description: Feedback text
                        nullable: false
                    pros:
                        type: string
                        description: Product pros
                        nullable: false
                    cons:
                        type: string
                        description: Product cons
                        nullable: false
                    productValuation:
                        type: integer
                        description: Product rate
                    createdDate:
                        type: string
                        format: date-time
                        description: Date and time the feedback was created
                    answer:
                        nullable: true
                        type: object
                        description: Reply structure
                        properties:
                            text:
                                type: string
                                description: Reply text
                            state:
                                type: string
                                description: |
                                    Status:
                                      - `none` - new
                                      - `wbRu` - displayed on the site
                                      - `reviewRequired` - response being reviewed
                                      - `rejected` - response rejected
                            editable:
                                type: boolean
                                description: Whether the response can be edited.<br><code>false</code> - cannot be edited, <code>true</code> - can be edited
                    state:
                        type: string
                        description: |
                            Feedback status:
                              - `none` - unanswered (new)
                              - `wbRu` - answered
                    productDetails:
                        description: Product structure
                        type: object
                        properties:
                            nmId:
                                type: integer
                                description: WB article
                            imtId:
                                type: integer
                                description: Product card ID
                            productName:
                                type: string
                                description: Product name
                            supplierArticle:
                                type: string
                                nullable: true
                                description: Seller's article
                            supplierName:
                                type: string
                                nullable: true
                                description: Seller's name
                            brandName:
                                type: string
                                nullable: true
                                description: Product brand
                            size:
                                type: string
                                description: Product size (`techSize' in the product card)
                    photoLinks:
                        nullable: true
                        description: Array of structure of images
                        type: array
                        items:
                            type: object
                            properties:
                                fullSize:
                                    type: string
                                    description: Link of full-size images
                                miniSize:
                                    type: string
                                    description: Link of small-size images
                    video:
                        nullable: true
                        description: Video structure
                        type: object
                        properties:
                            previewImage:
                                type: string
                                description: URL to the video cover image
                            link:
                                type: string
                                description: URL to the video playlist file (available via HLS protocol)
                            duration_sec:
                                type: integer
                                description: Total duration of the video
                    wasViewed:
                        type: boolean
                        description: Presence of feedback viewed
                    userName:
                        type: string
                        description: Name of the feedback author
                    matchingSize:
                        type: string
                        description: |
                            Compliance of the declared size with the real one.
                            <br>Possible values:
                            - ` ` - for dimensionless goods
                            - `ок` - matches to the size
                            - `smaller` - size is smaller
                            - `bigger` - size is bigger
                    isAbleSupplierFeedbackValuation:
                        description: Is the seller able to file a complaint about the feedback (`true` - available, `false` - not available)
                        type: boolean
                    supplierFeedbackValuation:
                        description: |
                            Reason for complaint about the feedback
                            <br>
                            (Look <code>feedbackValuations</code> field, a method for obtaining <a href="./user-communication#tag/Feedbacks/paths/~1api~1v1~1supplier-valuations/get">lists of product issues and reasons for complaint about the feedback</a>)
                        type: integer
                    isAbleSupplierProductValuation:
                        description: |
                            Product issue
                            <br>
                            (Look <code>productValuations</code> field, a method for obtaining <a href="./user-communication#tag/Feedbacks/paths/~1api~1v1~1supplier-valuations/get">lists of product issues and reasons for complaint about the feedback</a>)
                        type: boolean
                    supplierProductValuation:
                        description: Product rating left by the seller
                        type: integer
                    isAbleReturnProductOrders:
                        description: Is the product return option available (false - no, true - yes)
                        type: boolean
                    returnProductOrdersDate:
                        description: Date and time when a response with status code 200 was received for the return request.
                        type: string
                    bables:
                        nullable: true
                        description: List of customer tags
                        type: array
                        items:
                            type: string
                    lastOrderShkId:
                        type: integer
                        description: Barcode of the product
                    lastOrderCreatedAt:
                        type: string
                        description: Date of purchase
                    color:
                        type: string
                        description: Product color
                    subjectId:
                        type: integer
                        description: Subject ID
                    subjectName:
                        type: string
                        description: Subject name
                    parentFeedbackId:
                        type: string
                        description: ID of the original feedback (`null` if this feedback is original)
                        nullable: true
                    childFeedbackId:
                        type: string
                        nullable: true
                        description: ID of the updated feedback (`null` if this feedback is updated)
        Chat:
            type: object
            properties:
                chatID:
                    type: string
                    description: Chat ID
                    example: 1:4019cd7d-cca8-4e90-8b11-f78afbea42e3
                replySign:
                    type: string
                    description: |
                        Chat signature. Required when [sending a message](./#/paths/~1api~1v1~1seller~1message/post)
                    example: 1:4019cd7d-cca8-4e90-8b11-f78afbea42e3:54828159:bc3a4c04079f5956cff170b25e73523aa1208b5c0bd7aea1e520a64ae3e212b1ebae6712661f3afd27520fa785fa3042254e8a3100ce00644322054ae7cfcd0e
                clientID:
                    type: string
                    description: Buyer ID
                    example: 123456
                clientName:
                    type: string
                    description: Buyer's name
                    example: Иван
                goodCard:
                    $ref: '#/components/schemas/GoodCard'
        ChatsResponse:
            type: object
            properties:
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Chat'
                errors:
                    description: Errors, if any
                    nullable: true
                    type: array
                    example: null
                    items:
                        type: string
        Event:
            type: object
            properties:
                chatID:
                    type: string
                    description: Chat ID
                eventID:
                    type: string
                    description: Event ID
                eventType:
                    $ref: '#/components/schemas/EventType'
                isNewChat:
                    type: boolean
                    description: |
                        New chat indicator:
                        - `false` — chat is not new
                        - `true` — chat is new
                message:
                    type: object
                    description: Message data
                    properties:
                        attachments:
                            $ref: '#/components/schemas/EventAttachments'
                        text:
                            type: string
                            description: Message text
                refund:
                    $ref: '#/components/schemas/Refund'
                source:
                    type: string
                    description: |
                        Message sending source:
                        - `seller-portal` — sellers portal
                        - `seller-public-api` — Buyers chat API
                        - `rusite` — buyers portal
                        - `global` — `global.wildberries.ru` portal
                        - `ios` —  mobile operating system by **Apple**
                        - `android` — **Android** mobile operating system by **Google**
                addTimestamp:
                    type: integer
                    description: Time of event occurrence on the server. Unix timestamp format
                addTime:
                    type: string
                    description: Time of event occurrence on the server in UTC
                replySign:
                    type: string
                    description: |
                        Chat signature. Available only if `"isNewChat": true`. Required when [sending a message](./user-communication#tag/Buyers-Chat/paths/~1api~1v1~1seller~1message/post)
                sender:
                    $ref: '#/components/schemas/Sender'
                clientID:
                    type: string
                    description: Buyer ID
                clientName:
                    type: string
                    description: Buyer's name
        EventAttachments:
            type: object
            description: Attachments
            properties:
                goodCard:
                    $ref: '#/components/schemas/GoodCard'
                files:
                    type: array
                    description: Files
                    items:
                        $ref: '#/components/schemas/File'
                images:
                    type: array
                    description: Images
                    items:
                        $ref: '#/components/schemas/Image'
        EventType:
            type: string
            description: |
                Event type:
                - `message` — message
                - `refund` — refund (deprecated)
            enum:
                - message
        File:
            type: object
            properties:
                contentType:
                    type: string
                    description: File type
                date:
                    type: string
                    description: Date of the file upload
                downloadID:
                    description: File ID. [Download the file](./user-communication#tag/Buyers-Chat/paths/~1api~1v1~1seller~1download~1%7Bid%7D/get)
                    type: string
                name:
                    type: string
                    description: File name
                url:
                    type: string
                    description: URL for accessing the file
                    nullable: false
                size:
                    type: integer
                    description: File size in bytes
        GoodCard:
            type: object
            description: Order information
            properties:
                date:
                    type: string
                    description: Order date
                needRefund:
                    type: boolean
                    description: |
                        Has refund been requested:
                        - false — not requested
                        - true — requested
                nmID:
                    type: integer
                    description: WB article
                price:
                    type: integer
                    description: Actual price with all discounts applied. Charged to the buyer
                priceCurrency:
                    type: string
                    description: Currency
                rid:
                    type: string
                    description: |
                        Unique order ID. <br>
                        Note: `rid` corresponds to `srid` in the responses of the methods:
                          - <a href="./user-communication#tag/Buyers-Returns/paths/~1api~1v1~1claims/get">Buyers return applications</a>
                          - <a href="./reports#tag/Main-Reports/paths/~1api~1v1~1supplier~1orders/get">Orders</a>
                          - <a href="./reports#tag/Main-Reports/paths/~1api~1v1~1supplier~1sales/get">Sales</a>
                          - <a href="./reports#tag/Goods-Return-Report/paths/~1api~1v1~1analytics~1goods-return/get">Goods Return Report</a>
                          - <a href="./financial-reports-and-accounting#tag/Financial-Reports/paths/~1api~1v5~1supplier~1reportDetailByPeriod/get">Realization sales report</a>
                size:
                    type: string
                    description: Product size
                statusID:
                    type: integer
                    description: |
                        Product status:
                        - `0` — Active product
                        - `1` — Processed product
                        - `2` — Product is being assembled
                        - `3` — Product is in transit
                        - `4` — Product is awaiting at tne pick-up point
                        - `5` — Product is with courier
                        - `10` — Product is archived
                        - `11` — Product is purchased
                        - `12` — Product is canceled
                        - `13` — Refund is processed
                        - `14` — Product is canceled (out of stock)
        Image:
            type: object
            description: Image
            properties:
                date:
                    type: string
                    description: Date of the image upload
                downloadID:
                    description: File ID. [Download the file](./user-communication#tag/Buyers-Chat/paths/~1api~1v1~1seller~1download~1%7Bid%7D/get)
                    type: string
                url:
                    type: string
                    description: URL for accessing the image
        MessageResponse:
            type: object
            properties:
                errors:
                    type: array
                    description: File upload errors, if any
                    items:
                        type: string
                result:
                    type: object
                    properties:
                        addTime:
                            type: integer
                            description: Upload time
                        chatID:
                            type: string
                            description: Chat ID
        Refund:
            type: object
            deprecated: true
            description: Product refund
            properties:
                actionType:
                    $ref: '#/components/schemas/RefundActionType'
                price:
                    type: integer
                    description: Order price
                priceCurrency:
                    type: string
                    description: Currency
                rid:
                    type: string
                    description: Unique WB order ID
        RefundActionType:
            description: |
                Seller's action regarding the refund:
                - `sellerRequestRefund` — seller requested a refund of the product
                - `sellerRejectRefund` — seller rejected the refund of the product
                - `sellerAcceptFullRefund` — seller approved the refund of the product
                - `sellerAcceptRefundInOffice` — seller approved the refund of the product at the pick-up point
            type: string
            enum:
                - sellerRequestRefund
                - sellerRejectRefund
                - sellerAcceptFullRefund
                - sellerAcceptRefundInOffice
        Sender:
            type: string
            description: |
                Sender:
                - `client` — buyer
                - `seller` — seller
                - `wb` — Wildberries
            enum:
                - client
                - seller
                - wb
        EventsResponse:
            type: object
            properties:
                result:
                    $ref: '#/components/schemas/EventsResult'
                errors:
                    description: Errors, if any
                    nullable: true
                    type: array
                    items:
                        type: string
        EventsResult:
            type: object
            properties:
                next:
                    type: integer
                    description: Paginator. Retrieve the next data set starting from this moment
                    format: Unix timestamp
                newestEventTime:
                    description: Newest response event time
                    type: string
                    format: RFC 3339
                oldestEventTime:
                    description: Oldest response event time
                    type: string
                    format: RFC 3339
                totalEvents:
                    type: integer
                    description: Number of events
                events:
                    type: array
                    items:
                        $ref: '#/components/schemas/Event'
    parameters:
        Warehouse:
            name: warehouseId
            in: path
            required: true
            description: The supplier's warehouse ID
            schema:
                type: integer
                format: int64
                example: 2
        uploadID:
            in: query
            name: uploadID
            description: Download ID
            required: true
            schema:
                type: integer
                example: 146567
        limit:
            in: query
            name: limit
            description: Number of elements per page (pagination). Maximum 1,000 elements
            schema:
                type: integer
                format: uint
                example: 10
                minimum: 1
                maximum: 200
            required: true
        offset:
            in: query
            name: offset
            description: From which element to start outputting data
            schema:
                type: integer
                format: uint
                minimum: 0
                example: 0
        nmID:
            in: query
            name: nmID
            description: WB article
            schema:
                type: integer
                example: 1
            required: true
        filterNmID:
            in: query
            description: WB article to search
            name: filterNmID
            schema:
                type: integer
            example: 44589768676
        OrderID:
            name: orderId
            in: path
            required: true
            description: Order ID
            schema:
                type: integer
                format: int64
                example: 5632423
        Supply:
            name: supplyId
            in: path
            required: true
            description: Supply ID
            schema:
                type: string
                example: WB-GI-1234567
        Trbx:
            name: trbxId
            in: path
            required: true
            description: Box ID
            schema:
                type: string
                example: WB-TRBX-1234567
        Order:
            name: orderId
            in: path
            required: true
            description: Order ID
            schema:
                type: integer
                format: int64
                example: 5632423
        Pass:
            name: passId
            in: path
            required: true
            description: Pass ID
            schema:
                type: integer
                format: int64
                example: 45
        Next:
            name: next
            in: query
            required: true
            schema:
                type: integer
                format: int64
            description: Pagination parameter. Sets the value from which to retrieve the next batch. It should start at 0 to get the full list of data. For the subsequent requests, you must take the value from the `next` field in the response.
        Limit:
            name: limit
            in: query
            required: true
            schema:
                type: integer
                minimum: 1
                maximum: 1000
            description: Pagination parameter. Sets the limit for the amount of data returned.
        inAction:
            in: query
            name: inAction
            description: |
                Participates in the promotion:
                  - `true` — yes
                  - `false` — no
            schema:
                type: boolean
                example: true
                default: false
            required: true
        promotionID:
            in: query
            name: promotionID
            description: Promotion ID
            schema:
                type: integer
                example: 1
            required: true
        limitNomenclature:
            in: query
            name: limit
            description: Number of requested products
            schema:
                type: integer
                format: uint
                minimum: 1
                maximum: 1000
                example: 10
        promotionIDs:
            in: query
            description: IDs of the promotions for which information should be returned
            name: promotionIDs
            required: true
            schema:
                type: string
                items:
                    type: integer
                example:
                    - 1
                    - 3
                    - 64
                uniqueItems: true
                minItems: 1
                maxItems: 100
        startDateTime:
            in: query
            name: startDateTime
            description: Period start, format `YYYY-MM-DDTHH:MM:SSZ`
            required: true
            schema:
                type: string
                format: RFC3339
                example: '2023-09-01T00:00:00Z'
        endDateTime:
            in: query
            name: endDateTime
            description: Period end, format `YYYY-MM-DDTHH:MM:SSZ`
            required: true
            schema:
                type: string
                format: RFC3339
                example: '2024-08-01T23:59:59Z'
        allPromo:
            in: query
            name: allPromo
            description: |
                Show promotions:
                  - `false` — available for participating
                  - `true` — all promotion
            schema:
                type: boolean
                default: false
            required: true
        limitPromotion:
            in: query
            name: limit
            description: Number of requested promotions
            schema:
                type: integer
                format: uint
                minimum: 1
                maximum: 1000
                example: 10
        is_archive:
            in: query
            name: is_archive
            description: |
                Application status:
                  * `false` — under review
                  * `true` — in archive
            required: true
            schema:
                type: boolean
                example: true
        id:
            in: query
            name: id
            description: Application ID
            schema:
                type: string
                format: UUID
                example: fe3e9337-e9f9-423c-8930-946a8ebef80
        nm_id:
            in: query
            name: nm_id
            description: WB article
            schema:
                type: integer
                example: 196320101
    requestBodies:
        SupplierTaskRequest:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            data:
                                $ref: '#/components/schemas/Goods'
        SupplierTaskRequestSize:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            data:
                                $ref: '#/components/schemas/SizeGoodsBody'
        SupplierTaskRequestClubDisc:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            data:
                                $ref: '#/components/schemas/ClubDisc'
        PromotionsSupplierTaskRequest:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            data:
                                type: object
                                properties:
                                    promotionID:
                                        type: integer
                                        description: Promotion ID
                                        example: 1
                                        minimum: 1
                                    uploadNow:
                                        type: boolean
                                        example: true
                                        description: |
                                            Set discount:
                                              - `true` — now
                                              - `false` — at the start of the promotion
                                    nomenclatures:
                                        type: array
                                        description: Nomenclature IDs that can be added to the promotion
                                        example:
                                            - 1
                                            - 3
                                            - 642
                                        items:
                                            type: integer
                                            minimum: 1
                                        minItems: 1
                                        maxItems: 1000
                                        uniqueItems: true
        PatchClaimReq:
            required: true
            description: Application answer
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            id:
                                description: Application ID
                                type: string
                                format: UUID
                                example: fe3e9337-e9f9-423c-8930-946a8ebef80
                            action:
                                description: Application action.<br>Use one of the `actions` array values from the response of the getting [buyers applications](./user-communication#tag/Buyers-Returns/paths/~1api~1v1~1claims/get) method
                                type: string
                                example: rejectcustom
                            comment:
                                description: Comment.<br>Only when `"action":"rejectcustom"` or `"action":"approvecc1"`. When `"action":"rejectcustom"` this parameter is required
                                type: string
                                minLength: 10
                                maxLength: 1000
                                example: The photo is not related to the product in the application
                        required:
                            - id
                            - action
    responses:
        'Response401':
            description: Unauthorized
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            title:
                                type: string
                                description: Error title
                            detail:
                                type: string
                                description: Error details
                            code:
                                type: string
                                description: Internal error code
                            requestId:
                                type: string
                                description: Unique request ID
                            origin:
                                type: string
                                description: WB internal service ID
                            status:
                                type: number
                                description: HTTP status code
                            statusText:
                                type: string
                                description: Text of the HTTP status code
                            timestamp:
                                type: string
                                format: date-time
                                description: Request date and time
                    example:
                        title: unauthorized
                        detail: 'token problem; token is malformed: could not base64 decode signature: illegal base64 data at input byte 84'
                        code: 07e4668e--a53a3d31f8b0-[UK-oWaVDUqNrKG]; 03bce=277; 84bd353bf-75
                        requestId: 7b80742415072fe8b6b7f7761f1d1211
                        origin: s2s-api-auth-catalog
                        status: 401
                        statusText: Unauthorized
                        timestamp: '2024-09-30T06:52:38Z'
        'Response429':
            description: Too many requests
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            title:
                                type: string
                                description: Error title
                            detail:
                                type: string
                                description: Error details
                            code:
                                type: string
                                description: Internal error code
                            requestId:
                                type: string
                                description: Unique request ID
                            origin:
                                type: string
                                description: WB internal service ID
                            status:
                                type: number
                                description: HTTP status code
                            statusText:
                                type: string
                                description: Text of the HTTP status code
                            timestamp:
                                type: string
                                format: date-time
                                description: Request date and time
                    example:
                        title: too many requests
                        detail: limited by c122a060-a7fb-4bb4-abb0-32fd4e18d489
                        code: 07e4668e-ac2242c5c8c5-[UK-4dx7JUdskGZ]
                        requestId: 9d3c02cc698f8b041c661a7c28bed293
                        origin: s2s-api-auth-catalog
                        status: 429
                        statusText: Too Many Requests
                        timestamp: '2024-09-30T06:52:38Z'
        NotFound:
            description: Not found
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
                    example:
                        code: NotFound
                        message: Не найдено
        AccessDenied:
            description: Access denied
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
                    example:
                        code: AccessDenied
                        message: Доступ запрещён
        ResponseGoodsLists:
            description: Success
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            data:
                                type: object
                                properties:
                                    listGoods:
                                        description: Product data
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/GoodsList'
        ResponseGoodHistories:
            description: Success
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            data:
                                type: object
                                properties:
                                    uploadID:
                                        type: integer
                                        description: Upload ID
                                        example: 3235236546
                                    historyGoods:
                                        type: array
                                        description: Data of products in the upload
                                        items:
                                            $ref: '#/components/schemas/GoodHistory'
        ResponseGoodBufferHistories:
            description: Success
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            data:
                                type: object
                                properties:
                                    uploadID:
                                        type: integer
                                        description: Upload ID
                                        example: 3235236546
                                        nullable: true
                                    bufferGoods:
                                        type: array
                                        description: Data of products in the upload
                                        items:
                                            $ref: '#/components/schemas/GoodBufferHistory'
                            error:
                                type: boolean
                                description: Error flag
                                example: false
                            errorText:
                                type: string
                                description: Error text
                                example: ''
        ResponseTaskHistory:
            description: Success
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            data:
                                $ref: '#/components/schemas/SupplierTaskMetadata'
                            error:
                                type: boolean
                                description: Error flag
                                example: false
                            errorText:
                                description: "Error text\n\n<div class=\"description_important\">\n  <code>The new price is several times lower than the current price. Item has been moved to Price Quarantine</code> error means that new price with discount is at least 3 times less than the previous one. You can edit price/discount using API or remove the price out of quarantine <a href=\"https://seller.wildberries.ru/discount-and-prices/quarantine\">in\_your account</a>\n</div>\n"
                                type: string
                                example: The new price is several times lower than the current price. Item has been moved to Price Quarantine
        ResponseTaskBuffer:
            description: Success
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            data:
                                $ref: '#/components/schemas/SupplierTaskMetadataBuffer'
                            error:
                                type: boolean
                                description: Error flag
                                example: false
                            errorText:
                                type: string
                                description: Error text
                                example: ''
        ResponseSizeLists:
            description: Success
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            data:
                                type: object
                                properties:
                                    listGoods:
                                        description: Product sizes
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/SizeGood'
                            error:
                                description: Error flag
                                type: boolean
                                example: false
                            errorText:
                                description: Error text
                                type: string
        SuccessTaskResponse:
            description: Success
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/TaskCreated'
        ResponseQuarantineGoods:
            description: Success
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            data:
                                nullable: true
                                type: object
                                properties:
                                    quarantineGoods:
                                        description: Information about products in quarantine
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/QuarantineGoods'
                            error:
                                description: Error flag
                                type: boolean
                                example: false
                            errorText:
                                description: Error text
                                type: string
                                example: ''
        Responses208:
            description: Upload already exists
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/RequestAlreadyExistsError'
                    examples:
                        This task already exists:
                            description: Upload already exists
                            value:
                                data:
                                    id: 1111111
                                    alreadyExists: true
                                error: false
                                errorText: This task already exists
        StatusNotAcceptable:
            description: Update of the inventory is blocked
            content:
                application/json:
                    schema:
                        properties:
                            code:
                                type: string
                                description: Error code
                                nullable: false
                                example: StatusNotAcceptable
                            message:
                                type: string
                                description: Error description
                                nullable: false
                                example: Обновление остатков заблокировано в связи с баном поставщика
                            data:
                                type: object
                                description: Additional error data
                                nullable: true
        ErrParameterValuesIncorrect:
            description: Error processing request parameters
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            errorText:
                                type: string
                                description: Error text
                    examples:
                        PromotionCompletedOrNotExist:
                            description: The promotion has been completed, or the promotion with this id does not exist
                            value:
                                errorText: Unprocessable entity
        ErrorWrongParameters:
            description: Bad request
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            errorText:
                                type: string
                                description: Error text
                                example: Invalid query params
        ResponsePromotionsGoodsLists:
            description: Success
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            data:
                                type: object
                                properties:
                                    nomenclatures:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/PromotionsGoodsList'
        UploadSuccessResponse:
            description: Success
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            data:
                                type: object
                                properties:
                                    alreadyExists:
                                        description: Upload with this data already exists
                                        type: boolean
                                        example: false
                                    uploadID:
                                        description: Upload ID
                                        type: integer
                                        example: 11
        UnprocessableEntity:
            description: Error processing request parameters
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            errorText:
                                type: string
                                example: Unprocessable entity
        PromotionsGetByIDSuccessResponse:
            description: Success
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            data:
                                type: object
                                properties:
                                    promotions:
                                        type: array
                                        description: Promotions list
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: integer
                                                    description: Promotion ID
                                                    example: 123
                                                name:
                                                    type: string
                                                    description: Promotion name
                                                    example: ХИТЫ ГОДА
                                                description:
                                                    type: string
                                                    description: Promotion description
                                                    example: В акции принимают участие самые популярные товары 2023 года. Карточки товаров будут выделены плашкой «ХИТ ГОДА», чтобы покупатели замечали эти товары среди других. Также они будут размещены под баннерами на главной странице и примут участие в PUSH-уведомлениях. С ценами для вступления в акцию вы можете ознакомиться ниже.
                                                advantages:
                                                    type: array
                                                    description: Promotion advantages
                                                    example:
                                                        - Плашка
                                                        - Баннер
                                                        - Топ выдачи товаров
                                                    items:
                                                        type: string
                                                startDateTime:
                                                    type: string
                                                    example: '2023-06-05T21:00:00Z'
                                                    description: Promotion start
                                                endDateTime:
                                                    type: string
                                                    example: '2023-06-05T21:00:00Z'
                                                    description: Promotion end
                                                inPromoActionLeftovers:
                                                    description: Number of products with remaining stock participating in the promotion
                                                    type: integer
                                                    example: 45
                                                inPromoActionTotal:
                                                    type: integer
                                                    description: Total number of products participating in the promotion
                                                    example: 123
                                                notInPromoActionLeftovers:
                                                    type: integer
                                                    example: 3
                                                    description: Number of products with remaining stock that are not participating in the promotion
                                                notInPromoActionTotal:
                                                    type: integer
                                                    example: 10
                                                    description: Total number of products that are not participating in the promotion
                                                participationPercentage:
                                                    type: integer
                                                    description: Products already participating in the promotion, %. Calculation based on the products participating in the promotion and with the remaining stock
                                                    example: 10
                                                type:
                                                    type: string
                                                    enum:
                                                        - regular
                                                        - auto
                                                    example: auto
                                                    description: |
                                                        Promotion type:
                                                          - `regular` — promotion
                                                          - `auto` — auto promotion
                                                exceptionProductsCount:
                                                    type: integer
                                                    format: uint
                                                    example: 10
                                                    description: |
                                                        Number of products excluded from the auto promotion before it starts. Only for `"type": "auto"`.
                                                        <br>At the start of the promotion, these products will automatically be without a discount
                                                ranging:
                                                    type: array
                                                    description: Ranking (if enabled)
                                                    items:
                                                        type: object
                                                        properties:
                                                            condition:
                                                                type: string
                                                                description: |
                                                                    Type of [ranking](https://seller.wildberries.ru/help-center/article/A-385):
                                                                      - `productsInPromotion` — only the seller's products participating in the promotion will be boosted
                                                                      - `calculateProducts` — any of the seller's products proposed for participation in the promotion will be boosted
                                                                      - `allProducts` — all of the seller's products will be boosted
                                                            participationRate:
                                                                type: integer
                                                                format: uint
                                                                minimum: 0
                                                                maximum: 100
                                                                description: Percentage of seller's products needed to advance to the next ranking level, %
                                                            boost:
                                                                type: integer
                                                                format: uint
                                                                description: Current search boost level, %
                                                    example:
                                                        - condition: productsInPromotion
                                                          participationRate: 10
                                                          boost: 7
                                                        - condition: calculateProducts
                                                          participationRate: 20
                                                          boost: 17
                                                        - condition: allProducts
                                                          participationRate: 35
                                                          boost: 30
        PromotionsSuccessResponse:
            description: Success
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            data:
                                type: object
                                properties:
                                    promotions:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: integer
                                                    example: 123
                                                    description: Promotion ID
                                                name:
                                                    type: string
                                                    example: скидки
                                                    description: Promotion name
                                                startDateTime:
                                                    type: string
                                                    format: RFC3339
                                                    example: '2023-06-05T21:00:00Z'
                                                    description: Promotion start
                                                endDateTime:
                                                    type: string
                                                    format: RFC3339
                                                    example: '2023-06-05T21:00:00Z'
                                                    description: Promotion end
                                                type:
                                                    type: string
                                                    enum:
                                                        - regular
                                                        - auto
                                                    description: |
                                                        Promotion type:
                                                          - `regular` — promotion
                                                          - `auto` — auto promotion
        ErrorFailedParseData:
            description: Bad request
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            errorText:
                                type: string
                                description: Error text
                                example: Failed to parse data
        GetClaimsSuccessResponse:
            description: Success
            content:
                application/json:
                    schema:
                        type: object
                        example:
                            claims:
                                - id: fe3e9337-e9f9-423c-8930-946a8ebef80
                                  claim_type: 1
                                  status: 2
                                  status_ex: 8
                                  nm_id: 196320101
                                  user_comment: Длина провода не соответствует описанию
                                  wb_comment: "Продавец одобрил вашу заявку на возврат. В течение 14 дней принесите товар в определённый пункт выдачи — всё зависит от того, как вы получали заказ:\r\n\r\n∙ В пункте выдачи. Тогда нужно будет вернуть в тот же пункт по тому же адресу. \r\n∙ Курьером. Зайдите в раздел «Покупки» на сайте — там будет адрес пункта, в который нужно принести товар.\r\n\r\nВозьмите с собой пакет со штрих-кодом, в котором был товар. Если вы его потеряли или выбросили — ничего страшного, мы всё равно сможем провести возврат. Но в будущем, пожалуйста, сохраняйте этот пакет. \r\n\r\nДеньги придут на вашу карту или счёт в течение 10 дней после возврата товара на склад.\r\n\r\nЕсли у вас крупногабаритный товар, то для его возврата вызовите курьера через раздел «Доставки»."
                                  dt: '2024-03-26T17:06:12.245611'
                                  imt_name: Кабель 0.5 м, 3797
                                  order_dt: '2020-10-27T05:18:56'
                                  dt_update: '2024-05-10T18:01:06.999613'
                                  photos:
                                      - //photos.wbstatic.net/claim/fe3e9337-e9f9-423c-8930-946a8ebef80/1.webp
                                      - //photos.wbstatic.net/claim/fe3e9337-e9f9-423c-8930-946a8ebef80/2.webp
                                  video_paths:
                                      - //video.wbstatic.net/claim/fe3e9337-e9f9-423c-8930-946a8ebef80/1.mp4
                                  actions:
                                      - autorefund1
                                      - approve1
                                  price: 157
                                  currency_code: '643'
                                  srid: v5o_7143225816503318733.0.0
                            total: 31
                        properties:
                            claims:
                                type: array
                                description: Applications
                                items:
                                    type: object
                                    properties:
                                        id:
                                            type: string
                                            description: Application ID
                                            format: UUID
                                        claim_type:
                                            type: integer
                                            description: |
                                                Application source:
                                                  * `1` — buyers portal
                                                  * `3` — chat
                                        status:
                                            type: integer
                                            description: |
                                                Buyer return decision:
                                                  * `0` — under review
                                                  * `1` — refusal
                                                  * `2` — approved
                                        status_ex:
                                            type: integer
                                            description: |
                                                Product status:
                                                  * `0` — application under review
                                                  * `1` — product stays with buyer (Application rejected)r
                                                  * `2` — buyer returns product to WB, product sent for disposal
                                                  * `5` — product stays with buyer (Application approved)
                                                  * `8` — product will be returned to sale after WB inspection
                                                  * `10` — product returned to seller
                                        nm_id:
                                            type: integer
                                            description: WB article
                                        user_comment:
                                            type: string
                                            maxLength: 1000
                                            description: Buyer comment
                                        wb_comment:
                                            nullable: true
                                            type: string
                                            maxLength: 10000
                                            description: Answer to the buyer in Russian
                                        dt:
                                            type: string
                                            format: date-time
                                            description: Date and time the application was submitted by the buyer
                                        imt_name:
                                            nullable: true
                                            type: string
                                            description: Product name
                                        order_dt:
                                            type: string
                                            format: date-time
                                            description: Order date and time
                                        dt_update:
                                            type: string
                                            format: date-time
                                            description: Date and time the application was reviewed. For the application that has not been reviewed — date and time the application was submitted
                                        photos:
                                            type: array
                                            description: Photos from buyer application
                                            minItems: 0
                                            maxItems: 10
                                            items:
                                                type: string
                                                format: WEBP
                                        video_paths:
                                            type: array
                                            description: Videos from buyer application
                                            minItems: 0
                                            maxItems: 1
                                            items:
                                                type: string
                                                format: MP4
                                        actions:
                                            type: array
                                            description: |
                                                [Seller's answer](./user-communication#tag/Buyers-Returns/paths/~1api~1v1~1claim/patch) options.<br> Rejected applications can be reconsidered. If the array is empty, the application cannot be processed.<br>
                                                  * `approve1` — approve with defect check.<br>Money will be refunded to the buyer after the product is returned. The product will be checked at the warehouse. If a defect/packing error is confirmed, the product will be sent to the seller. If the defect/packing error is not confirmed, the product will be returned to sale.
                                                  <br>Not applicable for the <strong>[In-Store Pickup](./in-store-pickup)</strong> scheme.
                                                  * `approve2` — approve and return the product.<br> Money will be refunded to the customer after the product is returned. The product will be sent to the seller.
                                                  <br>Not applicable for the <strong>[In-Store Pickup](./in-store-pickup)</strong> scheme.
                                                  * `autorefund1` — approve without product return.<br>The product will remain with the customer. The money for the product will be refunded to the customer without returning the product.
                                                  * `reject1` — reject with response template: <details><summary><strong>Брак не обнаружен</strong></summary>Здравствуйте!<br>Продавец рассмотрел и отклонил вашу заявку: он не нашёл брак, который вы описали, на фото или видео.<br>Если брак производственный, можете: — попробовать решить вопрос напрямую в чате с продавцом — в разделе «Покупки» нажмите на три точки возле товара и выберите «Задать вопрос продавцу», — обратиться в сервисный центр или независимую экспертизу, чтобы получить заключение о браке. После экспертизы отправьте скан заключения, создав новую заявку на проверку товара.<br>Если дефект непроизводственный, то можно оспорить решение продавца, для этого откройте в приложении раздел «Возврат товара по браку» или на сайте раздел «Брак или другая проблема», выберите заявку, нажмите кнопку «Оспорить решение» и напишите, почему вы не согласны. Мы всё проверим и напишем вам.</details>
                                                  * `reject2` — reject with response template: <details><summary><strong>Добавить фото/видео</strong></summary>Здравствуйте!<br>К сожалению, продавец не смог подтвердить брак, повреждение или несоответствие описанию. Отправьте новую заявку и проверьте, что дефект виден на фото и видео, а сами они хорошего качества. Напомним, что нужно прикрепить к заявке:<br>1. Фото товара целиком.<br>2. Фото и видео брака.<br>3. Фото с биркой или другой маркировкой товара.<br>4. Фото упаковки со штрих-кодом, если она осталась.<br>5. Комментарий, в котором подробно описано, что сломано и как вы это выяснили.</details>
                                                  * `reject3` — reject with response template: <details><summary><strong>Направить в сервисный центр</strong></summary>Здравствуйте!<br>Мы внимательно прочитали заявку, проверили фото и видео. К сожалению, мы не нашли брак, повреждение или несоответствие описанию в вашем товаре.<br>Обратитесь напрямую в сервисный центр — его адрес и контакты есть на сайте производителя или на гарантийном талоне. Там проведут окончательную проверку товара и выдадут вам акт. Если центр нашёл брак, то отправьте этот акт в чат на нашем сайте.</details>
                                                  * `rejectcustom` — reject with a comment.<br> The comment is passed in the `comment` parameter.
                                                  * `approvecc1` — approve the request for returning the product to the seller's store.<br>You can provide a comment (e.g., contact phone number or operating hours of your returns department) in the `comment` parameter. Upon completion of the return, you need to respond to the request with `"action":"confirmreturngoodcc1"` or `"action":"rejectcustom"`.<br>Applicable only for the <strong>[In-Store Pickup](./in-store-pickup)</strong> scheme.
                                                  * `confirmreturngoodcc1` — confirm receipt of the product from the buyer.<br>Applicable only for the <strong>[In-Store Pickup](./in-store-pickup)</strong> scheme.
                                            items:
                                                type: string
                                        price:
                                            type: number
                                            description: Actual price with all discounts applied. Charged to the buyer
                                        currency_code:
                                            type: string
                                            description: Price currency code
                                        srid:
                                            type: string
                                            description: Unique order ID for which a product claim was created
                            total:
                                type: integer
                                description: Number of applications matching the query parameters. Except `limit` and `offset`
        Error400GetClaims:
            description: Bad request
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            title:
                                type: string
                                description: Error ID
                                example: Invalid query params
                            detail:
                                description: Error description
                                type: string
                                example: 'Failed to deserialize query string: missing field `is_archive`'
                            requestId:
                                description: Request ID
                                type: string
                                example: e0aedc10-9789-49c1-9a83-d8422b4703dc
        Error400PatchClaim:
            description: Bad request
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            title:
                                type: string
                                description: Error ID
                                example: Validation error
                            detail:
                                description: Error description
                                type: string
                                example: 'Input model is not valid; Details: The Action field is required.'
                            requestId:
                                description: Request ID
                                type: string
                                example: 0HN3PI6JUGFSL:00000004
    examples:
        WarehouseNameInvalid:
            value:
                message: Incorrect warehouse name
        StoreIsProcessing:
            description: The warehouse is in the process of being updated or deleted. Try again after a few seconds.
            value:
                code: StoreIsProcessing
                message: The store is processing
        StoreIsProcessing1:
            description: The warehouse is in the process of being updated or deleted. Try again after a few seconds.
            value:
                - code: StoreIsProcessing
                  message: The store is processing
        IncorrectRequestBody:
            value:
                message: Incorrect request body
        IncorrectRequest:
            value:
                message: Incorrect request parameters
        SubjectDBSRestriction:
            description: The product category cannot be sold with 'Fulfillment By Wildberries'
            value:
                - code: SubjectDBSRestriction
                  message: The product category cannot be sold with 'Fulfillment By Wildberries'.
                  data:
                      sku: skuTest1
                      stock: 0
        SubjectFBSRestriction:
            description: The product category cannot be sold with 'Delivery By Supplier'
            value:
                - code: SubjectFBSRestriction
                  message: The product category cannot be sold with 'Delivery By Supplier'.
                  data:
                      sku: skuTest2
                      stock: 1
        UploadDataLimit:
            description: Upload limit exceeded
            value:
                - code: UploadDataLimit
                  message: Upload limit exceeded.
                  data:
                      sku: skuTest2
                      stock: 100001
        CargoWarehouseRestrictionMGT:
            description: The selected warehouse is not suitable for goods with the type "LCL (Less than Container Load)". Upload the balances to the warehouse without the ODC or CD+ mark
            value:
                - code: CargoWarehouseRestrictionMGT
                  message: The selected warehouse is not suitable for goods with the type "LCL (Less than Container Load)". Upload the balances to the warehouse without the ODC or CD+ mark
                  data:
                      sku: skuTest3
                      stock: 10
        CargoWarehouseRestrictionSGT:
            description: The selected warehouse is not suitable for goods with the type "ODC". Upload the balances to the warehouse marked - ODC
            value:
                - code: CargoWarehouseRestrictionSGT
                  message: The selected warehouse is not suitable for goods with the type "ODC". Upload the balances to the warehouse marked - ODC
                  data:
                      sku: '2042688657617'
                      stock: 0
        CargoWarehouseRestrictionSGTKGTPlus:
            description: The selected warehouse is not suitable for goods with the type "ODC/CD+". Upload the balances to the warehouse with the label - ODC or CD+
            value:
                - code: CargoWarehouseRestrictionSGTKGTPlus
                  message: The selected warehouse is not suitable for goods with the type "ODC/CD+". Upload the balances to the warehouse with the label - ODC or CD+
                  data:
                      sku: skuTest3
                      amount: 10
        CargoWarehouseRestrictionKGTPlus:
            description: The selected warehouse is not suitable for goods with the type "CD+". Upload the balances to the warehouse marked - CD+
            value:
                - code: CargoWarehouseRestrictionKGTPlus
                  message: The selected warehouse is not suitable for goods with the type "CD+". Upload the balances to the warehouse marked - CD+
                  data:
                      sku: skuTest3
                      stock: 10
        NotFound:
            description: Not found
            value:
                - code: NotFound
                  message: Not found
                  data:
                      sku: skuTest4
                      stock: 10
        IncorrectParameter:
            value:
                message: An incorrect parameter was passed
        creatingOneCard:
            description: ''
            value:
                - subjectID: 105
                  variants:
                      - vendorCode: АртикулПродавца
                        title: Наименование товара
                        description: Описание товара
                        brand: Бренд
                        dimensions:
                            length: 12
                            width: 7
                            height: 5
                            weightBrutto: 1.242
                        characteristics:
                            - id: 12
                              value:
                                  - Turkish flag
                            - id: 25471
                              value: 1200
                            - id: 14177449
                              value:
                                  - red
                        sizes:
                            - techSize: S
                              wbSize: '42'
                              price: 5000
                              skus:
                                  - '88005553535'
        creatingMergedCards:
            description: ''
            value:
                - subjectID: 3091
                  variants:
                      - vendorCode: АртикулПродавца11
                        title: Наименование товара 1
                        description: Описание товара 1
                        brand: Бренд
                        dimensions:
                            length: 55
                            width: 40
                            height: 15
                            weightBrutto: 6.24
                        characteristics:
                            - id: 12
                              value:
                                  - Turkish flag
                            - id: 25471
                              value: 1200
                            - id: 14177449
                              value:
                                  - red
                        sizes:
                            - skus:
                                  - '111111111133111'
                      - vendorCode: АртикулПродавца22
                        title: Наименование товара 2
                        description: Описание товара 2
                        brand: БрендДругой
                        dimensions:
                            length: 55
                            width: 40
                            height: 15
                            weightBrutto: 6.241
                        characteristics:
                            - id: 12
                              value:
                                  - Turkish flag
                            - id: 25471
                              value: 1200
                            - id: 14177449
                              value:
                                  - red
                        sizes:
                            - skus:
                                  - '111111111441111'
        creatingGroupOfIndividualCards:
            description: ''
            value:
                - subjectID: 3091
                  variants:
                      - vendorCode: АртикулПродавца1
                        title: Наименование товара 1
                        description: Описание товара 1
                        brand: Бренд
                        dimensions:
                            length: 55
                            width: 40
                            height: 15
                            weightBrutto: 6
                        characteristics:
                            - id: 12
                              value:
                                  - Turkish flag
                            - id: 25471
                              value: 1200
                            - id: 14177449
                              value:
                                  - red
                        sizes:
                            - skus:
                                  - '1111111111111'
                - subjectID: 105
                  variants:
                      - vendorCode: Артикул продавца 2
                        title: Наименование товара 2
                        description: Описание товара 2
                        brand: Бренд
                        dimensions:
                            length: 14
                            width: 5
                            height: 4
                            weightBrutto: 0.94
                        characteristics:
                            - id: 12
                              value:
                                  - Turkish flag
                            - id: 25471
                              value: 1200
                            - id: 14177449
                              value:
                                  - red
                        sizes:
                            - techSize: S
                              wbSize: '42'
                              price: 5000
                              skus:
                                  - '2222222222222'
        responseIncorrectBeginDate:
            description: Incorrect start date
            value:
                error: Incorrect start date
        responseIncorrectEndDate:
            description: Incorrect end date
            value:
                error: Incorrect end date
        responseExceededLimit:
            description: ''
            value:
                additionalErrors:
                    error: Maximum 30 cards
                errorText: Maximum 30 cards
        responseCombining:
            description: ''
            value:
                additionalErrors:
                    error: You can not merge products with different subjects
                errorText: You can not merge products with different subjects
        responseIncorrectRequestFormat:
            description: ''
            value:
                additionalErrors:
                    error: Incorrect request
                errorText: Incorrect request
        responseNonExistentNmId:
            description: ''
            value:
                additionalErrors:
                    error: nmID not found
                errorText: nmID not found
        responseNonExistentImt:
            description: ''
            value:
                additionalErrors:
                    error: imt not found
                errorText: imt not found
        responseDuplicateRequests:
            description: ''
            value:
                additionalErrors:
                    error: Duplicate requests
                errorText: Duplicate requests
        responseAllCardsInSameGroup:
            description: ''
            value:
                additionalErrors:
                    error: All cards are in the same group
                errorText: All cards are in the same group
        responseCardCreate1:
            description: ''
            value:
                data: null
                error: true
                errorText: string
                additionalErrors:
                    string: string
        InvalidRequestFormatContent:
            description: Incorrect request
            value:
                errorText: Incorrect request
        CardCreatedWithoutVendorCode:
            description: Seller's article is required
            value:
                errorText: vendorCode is required
        CardsVendorCodeUsedInOtherCards:
            description: Seller's article used in another card
            value:
                errorText: Seller's article used in another card
        ThisCategoryDoesNotExist:
            description: Subject not found
            value:
                data: null
                error: true
                errorText: This category does not exist
                additionalErrors:
                    id: '342342'
        responseBodyContentError400:
            description: Bad request
            value:
                errorText: Error text
        responseOK200:
            description: Success
            value:
                data: null
                error: false
                errorText: ''
                additionalErrors: null
        responseBody400LenName:
            description: Bad request
            value:
                addditionalErrors:
                    description: Tag name too long. No more than 15 characters allowed
                errorText: Invalid tag name value
        responseBodyLimitTag:
            description: ''
            value:
                errorText: Tag creation limit reached
        responseBodyNameNotExist:
            description: ''
            value:
                errorText: A tag with this name already exists
        responseNotFound200:
            description: Success
            value:
                additionalErrors:
                    description: Such a tag does not exist for the seller
                errorText: Bad request
        responseNotFound200Del:
            description: ''
            value:
                errorText: Such a tag does not exist
        IncorrectRequest4:
            description: ''
            value:
                additionalErrors:
                    description: Non-existent tags specified
                errorText: Bad request
        responseBodyTagNotExist:
            description: ''
            value:
                errorText: Such a tag does not exist
        BodySizeExceedsTheGivenLimit:
            description: The request body size exceeds the given limit
            value: body size exceeds the given limit
        InvalidRequestParameters:
            description: Incorrect request parameters
            value:
                data: null
                error: true
                errorText: Invalid request parameters
        UploadLimitExceeded:
            description: Too many products (it should be read `1000 items`)
            value:
                data: null
                error: true
                errorText: 'Upload limit exceeded: You can upload a maximum of 10 000 items'
        DuplicateItemNos:
            description: Duplicated `nmID` in the request
            value:
                data: null
                error: true
                errorText: Duplicate item Nos.
        DuplicateSizeIDs:
            description: Duplicated `sizeID` in the request
            value:
                data: null
                error: true
                errorText: Duplicate size IDs
        TheSpecifiedPricesAndDiscountsAreAlreadySet:
            description: No price or discount changes
            value:
                data: null
                error: true
                errorText: The specified prices and discounts are already set
        TheSpecifiedPricesAreAlreadySet:
            description: No price changes
            value:
                data: null
                error: true
                errorText: The specified prices and discounts are already set
        InvalidDataFormat:
            description: Data can not be processed, check the request
            value:
                data: null
                error: true
                errorText: Invalid data format
        PriceShouldBeAWholeNumber:
            description: Price has decimal value, but it should be integer
            value:
                data: null
                error: true
                errorText: Price should be a whole number
        InvalidPriceValue:
            description: Incorrect price
            value:
                data: null
                error: true
                errorText: Invalid price value
        InvalidDiscountValue:
            description: Incorrect discount
            value:
                data: null
                error: true
                errorText: Invalid discount value
        InvalidItemNo:
            description: Incorrect `nmID`
            value:
                data: null
                error: true
                errorText: Invalid item No.
        InvalidSize:
            description: Incorrect `sizeID`
            value:
                data: null
                error: true
                errorText: Invalid size
        PriceAndDiscountNotSpecified:
            description: Both price and discount are not specified
            value:
                data: null
                error: true
                errorText: Price and discount not specified
        PriceNotSpecified:
            description: Price is not specified
            value:
                data: null
                error: true
                errorText: Price and discount not specified
        EmptyData:
            description: Empty data
            value:
                data: null
                error: true
                errorText: Empty data
        AllItemNosAreSpecifiedIncorrectlyOrPricesAndDiscounts:
            description: No products (for example, they were deleted), or no price or discount changes
            value:
                data: null
                error: true
                errorText: All item Nos. are specified incorrectly, or the specified prices and discounts are already set
        AllItemNosAreSpecifiedIncorrectlyOrPrices:
            description: No products or sizes (for example, they were deleted), or no price changes
            value:
                data: null
                error: true
                errorText: All item Nos. are specified incorrectly, or the specified prices and discounts are already set
        SortError:
            description: You should choose sorting by price or by discount, not both values
            value:
                data: null
                error: true
                errorText: You can't sort items by price and discount at the same time
        CheckTheWBClubDiscount:
            description: WB Club discounts can only take specified values
            value:
                data: null
                error: true
                errorText: 'Check the field values in the WB Club Discount column. Field format: a whole number between {{.WbClubMinDiscount}} and {{.WbClubMaxDiscount}}, without dots or commas'
        DiscountsAreTheSameAsThoseAlreadySet:
            description: Some of the discounts in the request are already set
            value:
                data: null
                error: true
                errorText: Discounts in the file are the same as those already set. To change discounts, edit the file and upload it again
        AllItemNosAreSpecifiedIncorrectlyOrDiscounts:
            description: No products (for example, they were deleted), or no discount changes
            value:
                data: null
                error: true
                errorText: All item Nos. are specified incorrectly, or the specified discounts are already set
        UnexpectedResult:
            description: Unexpected result, create a dialogue in Seller Support, <code>API</code> category
            value:
                data: null
                error: true
                errorText: Unexpected result
        LowExpirationDate:
            description: The specified expiration date is less than the allowable limit
            value:
                code: LowExpirationDate
                message: Не удалось обновить срок годности. Указан срок меньше допустимого
        FailedToUpdateMeta:
            value:
                message: Failed to update the metadata of the order. Please ensure that the order meets all the necessary requirements (the order exists, is in the "In assembly" status, metadata is available to the order, see the method description to Get the metadata of the order).
        SupplyHasOrders:
            value:
                message: Cannot delete the supply. The supply contains orders.
        SupplyHasZeroOrders:
            value:
                message: Cannot move the supply to the delivery. The supply does not satisfy the delivery conditions.
        UinIsNotFilled:
            value:
                message: Transition to the "in Delivery" status is not possible. Enter UINs for all orders where necessary.
        SupplyNotClosed:
            value:
                message: The supply is not moved to the delivery.
        FailedToAddSupplyOrder:
            value:
                message: Cannot add the order to the supply. The order does not satisfy the conditions of assignment to the delivery.
        StatusMismatch:
            value:
                message: Status change is not allowed for the order.
        StatusChangeNotAllowed:
            value:
                message: Status change to 'completed' or 'canceled by client' is not allowed for the order in 'Delivery By Supplier'.
        CampaignIsNotUnique:
            description: Duplicate campaign ID. <br> The position of the campaign in the bids array of the request is indicated in `.bids[n]`
            value:
                errors:
                    - detail: advert 1234567 is not unique
                      field: .bids[2]
                request_id: 2c991dcab0fe971e8c0321c340a8c7fd
                status: 400
                title: invalid payload
                type: Bad Request
        CanNotDeserializeResponseBody:
            description: Invalid request content
            value:
                detail: can not deserialize response body
                origin: camp-api-public-cache
                request_id: 49d317c56e62373b52710251280cea76
                status: 400
                title: invalid payload
        CampaignNotFoundBids:
            description: Campaign not found. <br> The position of the campaign in the bids array of the request is indicated in `.bids[n]`
            value:
                errors:
                    - detail: advert 22568519 not found
                      field: .bids[0]
                request_id: 202707ea56b2e3ca7705ef00b1db4563
                status: 400
                title: invalid payload
                type: Bad Request
        WrongCampaignID:
            description: Incorrect campaign ID. <br> The position of the campaign in the bids array of the request is indicated in `.bids[n]`
            value:
                errors:
                    - detail: "Key: 'V0PatchAdvertsBidsJSONBody.Bids[0].AdvertId' Error:Field validation for 'AdvertId' failed on the 'gt' tag"
                      field: AdvertId
                request_id: af8a2f59dd49a037c2ed1f6dcb7abb99
                status: 400
                title: validation request params error
                type: bad request
        WrongCampaignStatus:
            description: Incorrect campaign status. <br> The position of the campaign in the bids array of the request is indicated in `.bids[n]`
            value:
                errors:
                    - detail: 'wrong advert status: 7'
                      field: .bids[0]
                request_id: 1dffc16267c1f9266a4d74e999f823b4
                status: 400
                title: invalid payload
                type: Bad Request
        WrongBidValue:
            description: Incorrect bid size. <br> The position of the campaign in the bids array of the request is indicated in `.bids[n]`, the position of the article with the incorrect bid is indicated in `.nm_bids[n]`. <br> The minimum and maximum bid values are specified in min and max, respectively.
            value:
                errors:
                    - detail: 'wrong bid value: 100; min: 125 max:100000'
                      field: .bids[0].nm_bids[0].bid
                    - detail: 'wrong bid value: 100; min: 150 max:100000'
                      field: .bids[1].nm_bids[0].bid
                request_id: dcf254d3eae270675cbaa1e2ff1cce60
                status: 400
                title: invalid payload
                type: Bad Request
        NmNotFound:
            description: Article not found. <br> The position of the campaign in the bids array of the request is indicated in `.bids[n]`, the position of the unfound article in this campaign is indicated in `.nm_bids[n]`.
            value:
                errors:
                    - detail: nm 2406138149 not found or inactive
                      field: .bids[0].nm_bids[0]
                request_id: 2ebb8590d15c6c70e74e9cc3a9dc260b
                status: 400
                title: invalid payload
                type: Bad Request
        ResponseWithReturn:
            description: Response when return is true
            value:
                total: 500
        SettingMinusPhrase:
            description: Setting minus phrases
            value:
                excluded:
                    - первая фраза
                    - вторая фраза
        RemovingMinusPhrase:
            description: Removing minus phrases
            value:
                excluded: []
        ResponseInvalidCampaignID:
            description: Invalid campaign identifier
            value:
                error: Invalid campaign identifier
        StatusNoChangeAdv:
            value: Campaign status not changed
        IncorrectSupplierIdAdv:
            value: Incorrect seller identifier
        InvalidRcIdAdv:
            value: Incorrect campaign identifier (RC ID)
        IncorrectParamAdv:
            value: Incorrect value for parameter `param`
        IncorrectTypeAdv:
            value: Incorrect value for parameter `type`
        IncorrectUsingMethods:
            description: Incorrect use of the method
            value: To obtain information, provide either a list of campaigns or a set of filters
        IncorrectName:
            value: Incorrect name
        IncorrectCpmAdv:
            value: Incorrect value for parameter `cpm`
        AmountNotChanged:
            value: Bid size not changed
        CompanyNameChangeErr:
            value: Error changing the campaign name
        ErrorProcessRequestParam:
            value: Error processing request parameters
        RequestBodyProcessErrorAdv:
            value: Error processing request body
        CampaignNotBelongSeller:
            value: Campaign does not belong to the seller
        CampaignNotFoundAdv:
            value:
                error: Not found
        ResponseInfoAdvert:
            value:
                - endTime: '2100-01-01 00:00:00+03:00'
                  createTime: '2023-05-31 16:57:42.654141+03:00'
                  changeTime: '2023-06-21 22:10:43.074183+03:00'
                  startTime: '2023-07-21 21:17:42.872376+03:00'
                  name: Носки_Шерстяные
                  params:
                      - intervals:
                            - begin: 3
                              end: 5
                        price: 400
                        subjectId: 201
                        subjectName: Носки
                        nms:
                            - nm: 11111111
                              active: true
                        active: false
                  dailyBudget: 0
                  advertId: 12345
                  status: 9
                  type: 6
                  paymentType: cpm
                  searchPluseState: false
        ResponseInfoAdvertType8:
            value:
                - endTime: '2023-10-05T21:37:37.226021+03:00'
                  createTime: '2023-08-21T13:45:31.121172+03:00'
                  changeTime: '2023-08-21T14:59:33.622594+03:00'
                  startTime: '2023-08-21T13:45:31.147601+03:00'
                  autoParams:
                      subject:
                          name: Обложки
                          id: 342
                      sets:
                          - name: для женщин
                            id: 623
                      nms:
                          - 1234567
                      active:
                          carousel: true
                          recom: true
                          booster: true
                      nmCPM:
                          - nm: 1234567
                            cpm: 150
                  name: Кампания1
                  dailyBudget: 0
                  advertId: 11111111
                  status: 7
                  type: 8
                  paymentType: cpm
        ResponseInfoAdvertType9:
            value:
                - endTime: '2100-01-01T00:00:00+03:00'
                  createTime: '2023-07-09T10:56:02.150362+03:00'
                  changeTime: '2023-07-11T02:48:44.767712+03:00'
                  startTime: '2023-07-10T08:02:31.949155+03:00'
                  searchPluseState: false
                  name: Противовирусные препараты
                  unitedParams:
                      - subject:
                            id: 3038
                            name: Противовирусные препараты
                        menus:
                            - id: -1
                              name: ''
                        nms:
                            - 38995344
                        searchCPM: 123
                        catalogCPM: 321
                  dailyBudget: 0
                  advertId: 1234567
                  status: 11
                  type: 9
                  paymentType: cpm
                  auction_multibids:
                      - nm: 38995344
                        bid: 154
        ResponseInfoAdvertsAll:
            value:
                - endTime: '2100-01-01 00:00:00+03:00'
                  createTime: '2023-05-31 16:57:42.654141+03:00'
                  changeTime: '2023-06-21 22:10:43.074183+03:00'
                  startTime: '2023-07-21 21:17:42.872376+03:00'
                  name: Носки_Шерстяные
                  params:
                      - intervals:
                            - begin: 3
                              end: 5
                        price: 400
                        subjectId: 201
                        subjectName: Носки
                        nms:
                            - nm: 11111111
                              active: true
                        active: false
                  dailyBudget: 0
                  advertId: 12345
                  status: 9
                  type: 6
                  paymentType: cpm
                  searchPluseState: false
                - endTime: '2023-10-05T21:37:37.226021+03:00'
                  createTime: '2023-08-21T13:45:31.121172+03:00'
                  changeTime: '2023-08-21T14:59:33.622594+03:00'
                  startTime: '2023-08-21T13:45:31.147601+03:00'
                  autoParams:
                      subject:
                          name: Обложки
                          id: 342
                      sets:
                          - name: для женщин
                            id: 623
                      nms:
                          - 1234567
                      active:
                          carousel: true
                          recom: true
                          booster: true
                      nmCPM:
                          - nm: 1234567
                            cpm: 150
                  name: Кампания1
                  dailyBudget: 0
                  advertId: 11111111
                  status: 7
                  type: 8
                  paymentType: cpm
                - endTime: '2100-01-01T00:00:00+03:00'
                  createTime: '2023-07-09T10:56:02.150362+03:00'
                  changeTime: '2023-07-11T02:48:44.767712+03:00'
                  startTime: '2023-07-10T08:02:31.949155+03:00'
                  searchPluseState: false
                  name: Противовирусные препараты
                  unitedParams:
                      - subject:
                            id: 3038
                            name: Противовирусные препараты
                        menus:
                            - id: -1
                              name: ''
                        nms:
                            - 38995344
                        searchCPM: 123
                        catalogCPM: 321
                  dailyBudget: 0
                  advertId: 1234567
                  status: 11
                  type: 9
                  paymentType: cpm
        Response200:
            description: Success
            value:
                data:
                    templates:
                        - id: id
                          name: name
                          text: text
                error: false
                errorText: ''
                additionalErrors: null
        IncorrectTemplateType:
            description: Invalid template type
            value:
                data: null
                error: true
                errorText: Неизвестный тип шаблона
                additionalErrors: null
        TemplateLimitExceeded:
            description: Template limit exceeded
            value:
                data: null
                error: true
                errorText: Превышен лимит шаблонов
                additionalErrors: null
        InvalidTemplateNameLen:
            description: Invalid template name length
            value:
                data: null
                error: true
                errorText: Допустимая длина названия шаблона от 1 до 100 символов
                additionalErrors: null
        InvalidCommentLenTemplate:
            description: Invalid comment length in the template
            value:
                data: null
                error: true
                errorText: Допустимая длина комментария в шаблоне от 2 до 1000 символов
                additionalErrors: null
        InvalidRequest:
            description: Bad request
            value:
                data: null
                error: true
                errorText: Неверный запрос
                additionalErrors: null
        EditTemplateError:
            description: Couldn't edit template
            value:
                data: null
                error: true
                errorText: Не удалось отредактировать шаблон
                additionalErrors: null
        PostTemplateOK:
            description: Success
            value:
                data:
                    id: '1234'
                error: false
                errorText: ''
                additionalErrors: null
        PatchDelRespOK:
            description: Success
            value:
                data: true
                error: false
                errorText: ''
                additionalErrors: null
        ErrorDeleteBD:
            description: Error deleting template from database
            value:
                data: null
                error: true
                errorText: Ошибка удаления шаблона из базы данных
                additionalErrors: null
        FeedbackErr400:
            description: Bad request
            value:
                data: null
                error: true
                errorText: Something went wrong
                additionalErrors: null
                requestId: 734c9ea8-39e5-45c9-8cad-f03c13f733e9
        IsAnsweredErr400:
            description: Bad request
            value:
                data: null
                error: true
                errorText: Плохой формат isAnswered
                additionalErrors: null
                requestId: 734c9ea8-39e5-45c9-8cad-f03c13f733e9
        DateFromErr400:
            description: Bad request
            value:
                data: null
                error: true
                errorText: Плохой формат dateFrom
                additionalErrors: null
                requestId: 734c9ea8-39e5-45c9-8cad-f03c13f733e9
        DateToErr400:
            description: Bad request
            value:
                data: null
                error: true
                errorText: Плохой формат dateTo
                additionalErrors: null
                requestId: 734c9ea8-39e5-45c9-8cad-f03c13f733e9
        FeedbackErr403:
            description: Access denied
            value:
                data: null
                error: true
                errorText: Ошибка авторизации
                additionalErrors: null
                requestId: 734c9ea8-39e5-45c9-8cad-f03c13f733e9
        FeedbackErr404:
            description: Not found
            value:
                data: null
                error: true
                errorText: Не найден отзыв
                additionalErrors: null
                requestId: 734c9ea8-39e5-45c9-8cad-f03c13f733e9
        responseInaccessibleBackGoodError422:
            description: Request for product return is unavailable
            value:
                errorText: Request for product return is unavailable
        responseUnsuccessfullyBackGoodError422:
            description: Failed to process the return request for purchases
            value:
                data: null
                error: true
                errorText: Не удалось выполнить запрос на возврат покупок
                additionalErrors: null
                requestId: 93ea349d-d0ec-41b0-aaac-a8f5f137a109
        ResponseGetQestionByIdErrEx:
            description: Failed to get a question by ID
            value:
                data: null
                error: true
                errorText: Невозможно получить вопрос по id
                additionalErrors: null
                requestId: 87a2fe4d-d28b-4bae-b824-c0f498c72702
        ResponseGetFeedbackByIdErrEx:
            description: Failed to get a review by ID
            value:
                data: null
                error: true
                errorText: Невозможно получить отзыв по id
                additionalErrors: null
                requestId: 87a2fe4d-d28b-4bae-b824-c0f498c72702
        ResponseDoNotGetFeedback400:
            description: Bad request
            value:
                errorText: Failed to receive the feedback
        RequestBodyErr400:
            description: Bad request
            value:
                data: null
                error: true
                errorText: failed to decode JSON request.
                additionalErrors: null
                requestId: 958d9676-b50c-41d6-b7ce-3c9f0bc3b822
        RequestIDErr400:
            description: Bad request
            value:
                data: null
                error: true
                errorText: Неправильный id в запросе
                additionalErrors: null
                requestId: 958d9676-b50c-41d6-b7ce-3c9f0bc3b822
    securitySchemes:
        HeaderApiKey:
            type: apiKey
            name: Authorization
            in: header
